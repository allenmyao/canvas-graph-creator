[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/algorithm/abstract-algorithm.js",
    "memberof": null,
    "longname": "src/js/algorithm/abstract-algorithm.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\r\n * Abstract class for algorithms.\r\n * @class AbstractAlgorithm\r\n */\r\nclass AbstractAlgorithm {\r\n\r\n  /**\r\n   * Reference to the graph the algorithm is running on.\r\n   * @type {Graph}\r\n   */\r\n  graph;\r\n\r\n  /**\r\n   * Data structure that determines order of traversal.\r\n   * @type {Stack|Queue}\r\n   */\r\n  next;\r\n\r\n  /**\r\n   * Map that stores algorithm values.\r\n   * @type {WeakMap}\r\n   */\r\n  graphState = new WeakMap();\r\n\r\n  /**\r\n   * Whether the algorithm is complete or not.\r\n   * @type {boolean}\r\n   */\r\n  isComplete = false;\r\n\r\n  /**\r\n   * Whether the algorithm has started or not.\r\n   * @type {boolean}\r\n   */\r\n  hasStarted = false;\r\n\r\n  /**\r\n   * Object that holds the algorithm input values. Used by the UI classes to view and store values.\r\n   * @type {Object.<string, *>}\r\n   */\r\n  inputs = {};\r\n\r\n  /**\r\n   * @typedef InputType\r\n   * @type {object}\r\n   * @property {string} type - String representing type of input.\r\n   * @property {string} name - Name of the field.\r\n   * @property {string} displayName - Name to be displayed.\r\n   * @property {method} test - Function run to validate input.\r\n   * @property {boolean} required - Whether or not the input is required.\r\n   */\r\n\r\n  /**\r\n   * Object that defines the algorithm input types.\r\n   * @type {Object.<string, InputType>}\r\n   */\r\n  inputTypes = {};\r\n\r\n  /**\r\n   * AlgorithmResult object where the results will be stored.\r\n   * @type {AlgorithmResult}\r\n   */\r\n  result;\r\n\r\n  /**\r\n   * Array of names of Node fields that the algorithm has access to.\r\n   * @type {Array.<string>}\r\n   */\r\n  nodeFields = [];\r\n\r\n  /**\r\n   * Array of names of Edge fields that the algorithm has access to.\r\n   * @type {Array.<string>}\r\n   */\r\n  edgeFields = [];\r\n\r\n  /**\r\n   * StepBuilder object that is used to create Step objects.\r\n   * @type {StepBuilder}\r\n   */\r\n  stepBuilder;\r\n\r\n  /**\r\n   * Constructor for the abstract algorithm class. Should not be called directly.\r\n   * @param  {Graph} graph - Graph that the algorithm is run on.\r\n   * @constructs AbstractAlgorithm\r\n   */\r\n  constructor(graph) {\r\n    this.graph = graph;\r\n  }\r\n\r\n  /**\r\n   * Run the next step of the algorithm.\r\n   * @return {boolean} - Whether or not the algorithm has a next step.\r\n   */\r\n  step() {\r\n    return false;\r\n  }\r\n\r\n}\r\n\r\nexport { AbstractAlgorithm };\r\nexport default AbstractAlgorithm;\r\n"
  },
  {
    "__docId__": 1,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AbstractAlgorithm",
    "memberof": "src/js/algorithm/abstract-algorithm.js",
    "longname": "src/js/algorithm/abstract-algorithm.js~AbstractAlgorithm",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/algorithm/abstract-algorithm.js",
    "importStyle": "AbstractAlgorithm",
    "description": "Abstract class for algorithms.",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "AbstractAlgorithm"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 2,
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "InputType",
    "memberof": "src/js/algorithm/abstract-algorithm.js~AbstractAlgorithm",
    "longname": "src/js/algorithm/abstract-algorithm.js~AbstractAlgorithm.InputType",
    "access": null,
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "String representing type of input."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of the field."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "displayName",
        "description": "Name to be displayed."
      },
      {
        "nullable": null,
        "types": [
          "method"
        ],
        "spread": false,
        "optional": false,
        "name": "test",
        "description": "Function run to validate input."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "required",
        "description": "Whether or not the input is required."
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "InputType"
    }
  },
  {
    "__docId__": 3,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/algorithm/abstract-algorithm.js~AbstractAlgorithm",
    "longname": "src/js/algorithm/abstract-algorithm.js~AbstractAlgorithm#constructor",
    "access": null,
    "description": "Constructor for the abstract algorithm class. Should not be called directly.",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "AbstractAlgorithm"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "Graph that the algorithm is run on."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 4,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "graph",
    "memberof": "src/js/algorithm/abstract-algorithm.js~AbstractAlgorithm",
    "longname": "src/js/algorithm/abstract-algorithm.js~AbstractAlgorithm#graph",
    "access": null,
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 5,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "step",
    "memberof": "src/js/algorithm/abstract-algorithm.js~AbstractAlgorithm",
    "longname": "src/js/algorithm/abstract-algorithm.js~AbstractAlgorithm#step",
    "access": null,
    "description": "Run the next step of the algorithm.",
    "lineNumber": 96,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the algorithm has a next step."
    },
    "generator": false
  },
  {
    "__docId__": 6,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/algorithm/algorithm-result.js",
    "memberof": null,
    "longname": "src/js/algorithm/algorithm-result.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\r\n * Stores the results generated by running an Algorithm. An instance will be stored in each Algorithm object.\r\n * @class AlgorithmResult\r\n */\r\nclass AlgorithmResult {\r\n\r\n  /**\r\n   * Array of Step objects.\r\n   * @type {Array.<Step>}\r\n   */\r\n  timeline;\r\n\r\n  /**\r\n   * Current index in the timeline.\r\n   * @type {number}\r\n   */\r\n  stepIndex;\r\n\r\n  /**\r\n   * Constructs an instance of AlgorithmResult.\r\n   * @param  {Array.<string>} nodeFields - Array of fields to store changes for in Node objects.\r\n   * @param  {Array.<string>} edgeFields - Array of fields to store changes for in Edge objects.\r\n   * @constructs AlgorithmResult\r\n   */\r\n  constructor() {\r\n    this.timeline = [];\r\n    this.stepIndex = -1;\r\n  }\r\n\r\n  /**\r\n   * Move to the next step in the timeline. Does nothing if already at the end.\r\n   */\r\n  stepForward() {\r\n    if (this.stepIndex === this.timeline.length) {\r\n      return;\r\n    }\r\n    if (this.stepIndex > -1) {\r\n      let finishingStep = this.timeline[this.stepIndex];\r\n      finishingStep.applyPost();\r\n    }\r\n    if (this.stepIndex < this.timeline.length - 1) {\r\n      let nextStep = this.timeline[this.stepIndex + 1];\r\n      nextStep.applyDuring();\r\n      this.stepIndex++;\r\n      return;\r\n    }\r\n    this.stepIndex++;\r\n  }\r\n\r\n  /**\r\n   * Move to the previous step in the timeline. Does nothing if already at the beginning.\r\n   */\r\n  stepBackward() {\r\n    if (this.stepIndex === -1) {\r\n      return;\r\n    }\r\n    if (this.stepIndex < this.timeline.length) {\r\n      let redactingStep = this.timeline[this.stepIndex];\r\n      redactingStep.applyPre();\r\n    }\r\n    if (this.stepIndex > 0) {\r\n      let previousStep = this.timeline[this.stepIndex - 1];\r\n      previousStep.applyDuring();\r\n      this.stepIndex--;\r\n      return;\r\n    }\r\n    this.stepIndex--;\r\n  }\r\n\r\n  /**\r\n   * Add a Step to the AlgorithmResult.\r\n   * @param {Step} step - The step to add.\r\n   */\r\n  addStep(step) {\r\n    this.timeline.push(step);\r\n  }\r\n}\r\n\r\nexport { AlgorithmResult };\r\nexport default AlgorithmResult;\r\n"
  },
  {
    "__docId__": 7,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AlgorithmResult",
    "memberof": "src/js/algorithm/algorithm-result.js",
    "longname": "src/js/algorithm/algorithm-result.js~AlgorithmResult",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/algorithm/algorithm-result.js",
    "importStyle": "AlgorithmResult",
    "description": "Stores the results generated by running an Algorithm. An instance will be stored in each Algorithm object.",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "AlgorithmResult"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 8,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/algorithm/algorithm-result.js~AlgorithmResult",
    "longname": "src/js/algorithm/algorithm-result.js~AlgorithmResult#constructor",
    "access": null,
    "description": "Constructs an instance of AlgorithmResult.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "AlgorithmResult"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array.<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "nodeFields",
        "description": "Array of fields to store changes for in Node objects."
      },
      {
        "nullable": null,
        "types": [
          "Array.<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "edgeFields",
        "description": "Array of fields to store changes for in Edge objects."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 9,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "timeline",
    "memberof": "src/js/algorithm/algorithm-result.js~AlgorithmResult",
    "longname": "src/js/algorithm/algorithm-result.js~AlgorithmResult#timeline",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 10,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "stepIndex",
    "memberof": "src/js/algorithm/algorithm-result.js~AlgorithmResult",
    "longname": "src/js/algorithm/algorithm-result.js~AlgorithmResult#stepIndex",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 11,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stepForward",
    "memberof": "src/js/algorithm/algorithm-result.js~AlgorithmResult",
    "longname": "src/js/algorithm/algorithm-result.js~AlgorithmResult#stepForward",
    "access": null,
    "description": "Move to the next step in the timeline. Does nothing if already at the end.",
    "lineNumber": 33,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 12,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stepBackward",
    "memberof": "src/js/algorithm/algorithm-result.js~AlgorithmResult",
    "longname": "src/js/algorithm/algorithm-result.js~AlgorithmResult#stepBackward",
    "access": null,
    "description": "Move to the previous step in the timeline. Does nothing if already at the beginning.",
    "lineNumber": 53,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 13,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addStep",
    "memberof": "src/js/algorithm/algorithm-result.js~AlgorithmResult",
    "longname": "src/js/algorithm/algorithm-result.js~AlgorithmResult#addStep",
    "access": null,
    "description": "Add a Step to the AlgorithmResult.",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "Step"
        ],
        "spread": false,
        "optional": false,
        "name": "step",
        "description": "The step to add."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 14,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/algorithm/change.js",
    "memberof": null,
    "longname": "src/js/algorithm/change.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\r\n * Represents changes for a Node or Edge during a step of the algorithm.\r\n * @class Change\r\n */\r\nclass Change {\r\n\r\n  /**\r\n   * Object that the Change is storing values for.\r\n   * @type {(Node|Edge)}\r\n   */\r\n  object;\r\n\r\n  /**\r\n   * Object containing the values before the step.\r\n   * @type {Object.<string, *>}\r\n   */\r\n  preStepValues;\r\n\r\n  /**\r\n   * Object containing the values during the step.\r\n   * @type {Object.<string, *>}\r\n   */\r\n  duringStepValues;\r\n\r\n  /**\r\n   * Object containing the values after the step.\r\n   * @type {Object.<string, *>}\r\n   */\r\n  postStepValues;\r\n\r\n  /**\r\n   * Constructs a change object.\r\n   * @param  {(Node|Edge)} object - A Node or Edge object.\r\n   * @param  {Array.<string>} fields - Array of field names to be stored.\r\n   * @param {Object.<string, *>} preValues - Object containing field names and their respective values before the step.\r\n   * @param {Object.<string, *>} duringValues - Object containing field names and their respective values before the step.\r\n   * @param {Object.<string, *>} postValues - Object containing field names and their respective values after the step.\r\n   * @constructs Change\r\n   */\r\n  constructor(object, fields, preValues, duringValues, postValues) {\r\n    this.object = object;\r\n    this.preStepValues = {};\r\n    this.duringStepValues = {};\r\n    this.postStepValues = {};\r\n\r\n    for (let field of fields) {\r\n      if (field in preValues) {\r\n        this.preStepValues[field] = preValues[field];\r\n      }\r\n      if (field in duringValues) {\r\n        this.duringStepValues[field] = duringValues[field];\r\n      }\r\n      if (field in postValues) {\r\n        this.postStepValues[field] = postValues[field];\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set object values to those it had before the step.\r\n   */\r\n  applyPre() {\r\n    for (let field of Object.keys(this.preStepValues)) {\r\n      this.object[field] = this.preStepValues[field];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set object values to those it had during the step.\r\n   */\r\n  applyDuring() {\r\n    for (let field of Object.keys(this.duringStepValues)) {\r\n      this.object[field] = this.duringStepValues[field];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set object values to those it had after the step.\r\n   */\r\n  applyPost() {\r\n    for (let field of Object.keys(this.postStepValues)) {\r\n      this.object[field] = this.postStepValues[field];\r\n    }\r\n  }\r\n}\r\n\r\nexport { Change };\r\nexport default Change;\r\n"
  },
  {
    "__docId__": 15,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Change",
    "memberof": "src/js/algorithm/change.js",
    "longname": "src/js/algorithm/change.js~Change",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/algorithm/change.js",
    "importStyle": "Change",
    "description": "Represents changes for a Node or Edge during a step of the algorithm.",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Change"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 16,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/algorithm/change.js~Change",
    "longname": "src/js/algorithm/change.js~Change#constructor",
    "access": null,
    "description": "Constructs a change object.",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Change"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "A Node or Edge object."
      },
      {
        "nullable": null,
        "types": [
          "Array.<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "fields",
        "description": "Array of field names to be stored."
      },
      {
        "nullable": null,
        "types": [
          "Object.<string, *>"
        ],
        "spread": false,
        "optional": false,
        "name": "preValues",
        "description": "Object containing field names and their respective values before the step."
      },
      {
        "nullable": null,
        "types": [
          "Object.<string, *>"
        ],
        "spread": false,
        "optional": false,
        "name": "duringValues",
        "description": "Object containing field names and their respective values before the step."
      },
      {
        "nullable": null,
        "types": [
          "Object.<string, *>"
        ],
        "spread": false,
        "optional": false,
        "name": "postValues",
        "description": "Object containing field names and their respective values after the step."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 17,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "object",
    "memberof": "src/js/algorithm/change.js~Change",
    "longname": "src/js/algorithm/change.js~Change#object",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 18,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "preStepValues",
    "memberof": "src/js/algorithm/change.js~Change",
    "longname": "src/js/algorithm/change.js~Change#preStepValues",
    "access": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 19,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "duringStepValues",
    "memberof": "src/js/algorithm/change.js~Change",
    "longname": "src/js/algorithm/change.js~Change#duringStepValues",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 20,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "postStepValues",
    "memberof": "src/js/algorithm/change.js~Change",
    "longname": "src/js/algorithm/change.js~Change#postStepValues",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 21,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "applyPre",
    "memberof": "src/js/algorithm/change.js~Change",
    "longname": "src/js/algorithm/change.js~Change#applyPre",
    "access": null,
    "description": "Set object values to those it had before the step.",
    "lineNumber": 62,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 22,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "applyDuring",
    "memberof": "src/js/algorithm/change.js~Change",
    "longname": "src/js/algorithm/change.js~Change#applyDuring",
    "access": null,
    "description": "Set object values to those it had during the step.",
    "lineNumber": 71,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 23,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "applyPost",
    "memberof": "src/js/algorithm/change.js~Change",
    "longname": "src/js/algorithm/change.js~Change#applyPost",
    "access": null,
    "description": "Set object values to those it had after the step.",
    "lineNumber": 80,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 24,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/algorithm/step-builder.js",
    "memberof": null,
    "longname": "src/js/algorithm/step-builder.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Node from '../data/node/node';\r\nimport Edge from '../data/edge/edge';\r\nimport Step from '../algorithm/step';\r\nimport Change from '../algorithm/change';\r\n\r\n/**\r\n * Helper class to build Step objects.\r\n * @class StepBuilder\r\n */\r\nclass StepBuilder {\r\n\r\n  /**\r\n   * The step being created;\r\n   * @type {Step}\r\n   */\r\n  step = null;\r\n\r\n  /**\r\n   * Array of field names to store for Node objects.\r\n   * @type {Array.<string>}\r\n   */\r\n  nodeFields;\r\n\r\n  /**\r\n   * Array of field names to store for Edge objects.\r\n   * @type {Array.<string>}\r\n   */\r\n  edgeFields;\r\n\r\n  /**\r\n   * Constructs a StepBuilder.\r\n   * @param  {Array.<string>} nodeFields - Array of names of Node fields that the algorithm has access to.\r\n   * @param  {Array.<string>} edgeFields - Array of names of Edge fields that the algorithm has access to.\r\n   * @param  {AlgorithmResult} algorithmResult - AlgorithmResult object that the step will be stored in.\r\n   * @constructs StepBuilder\r\n   */\r\n  constructor(nodeFields, edgeFields, algorithmResult) {\r\n    this.nodeFields = nodeFields;\r\n    this.edgeFields = edgeFields;\r\n    this.algorithmResult = algorithmResult;\r\n  }\r\n\r\n  /**\r\n   * Begin building a new Step object.\r\n   * @param  {string} description - Description of the Step.\r\n   */\r\n  newStep(description) {\r\n    this.step = new Step(description);\r\n  }\r\n\r\n  /**\r\n   * Add a Node or Edge and its values to the step.\r\n   * @param {(Node|Edge)} object - Node or Edge object.\r\n   * @param {Object.<string, *>} preValues - Object containing field names and their respective values before the step.\r\n   * @param {Object.<string, *>} duringValues - Object containing field names and their respective values before the step.\r\n   * @param {Object.<string, *>} postValues - Object containing field names and their respective values after the step.\r\n   */\r\n  addChange(object, preValues, duringValues, postValues) {\r\n    if (this.step === null) {\r\n      throw Error('Step not created yet.');\r\n    }\r\n    let fields;\r\n    if (object instanceof Node) {\r\n      fields = this.nodeFields;\r\n    } else if (object instanceof Edge) {\r\n      fields = this.edgeFields;\r\n    } else {\r\n      throw Error('Object is not a Node or Edge');\r\n    }\r\n    let change = new Change(object, fields, preValues, duringValues, postValues);\r\n    this.step.addChange(change);\r\n  }\r\n\r\n  /**\r\n   * Called when the step is completed.\r\n   */\r\n  completeStep() {\r\n    let step = this.step;\r\n    this.step = null;\r\n    this.algorithmResult.addStep(step);\r\n  }\r\n}\r\n\r\nexport { StepBuilder };\r\nexport default StepBuilder;\r\n"
  },
  {
    "__docId__": 25,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "StepBuilder",
    "memberof": "src/js/algorithm/step-builder.js",
    "longname": "src/js/algorithm/step-builder.js~StepBuilder",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/algorithm/step-builder.js",
    "importStyle": "StepBuilder",
    "description": "Helper class to build Step objects.",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "StepBuilder"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 26,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/algorithm/step-builder.js~StepBuilder",
    "longname": "src/js/algorithm/step-builder.js~StepBuilder#constructor",
    "access": null,
    "description": "Constructs a StepBuilder.",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "StepBuilder"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array.<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "nodeFields",
        "description": "Array of names of Node fields that the algorithm has access to."
      },
      {
        "nullable": null,
        "types": [
          "Array.<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "edgeFields",
        "description": "Array of names of Edge fields that the algorithm has access to."
      },
      {
        "nullable": null,
        "types": [
          "AlgorithmResult"
        ],
        "spread": false,
        "optional": false,
        "name": "algorithmResult",
        "description": "AlgorithmResult object that the step will be stored in."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 27,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "nodeFields",
    "memberof": "src/js/algorithm/step-builder.js~StepBuilder",
    "longname": "src/js/algorithm/step-builder.js~StepBuilder#nodeFields",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 28,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "edgeFields",
    "memberof": "src/js/algorithm/step-builder.js~StepBuilder",
    "longname": "src/js/algorithm/step-builder.js~StepBuilder#edgeFields",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 29,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "algorithmResult",
    "memberof": "src/js/algorithm/step-builder.js~StepBuilder",
    "longname": "src/js/algorithm/step-builder.js~StepBuilder#algorithmResult",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 30,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "newStep",
    "memberof": "src/js/algorithm/step-builder.js~StepBuilder",
    "longname": "src/js/algorithm/step-builder.js~StepBuilder#newStep",
    "access": null,
    "description": "Begin building a new Step object.",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "Description of the Step."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 31,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "step",
    "memberof": "src/js/algorithm/step-builder.js~StepBuilder",
    "longname": "src/js/algorithm/step-builder.js~StepBuilder#step",
    "access": null,
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 32,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addChange",
    "memberof": "src/js/algorithm/step-builder.js~StepBuilder",
    "longname": "src/js/algorithm/step-builder.js~StepBuilder#addChange",
    "access": null,
    "description": "Add a Node or Edge and its values to the step.",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "Node or Edge object."
      },
      {
        "nullable": null,
        "types": [
          "Object.<string, *>"
        ],
        "spread": false,
        "optional": false,
        "name": "preValues",
        "description": "Object containing field names and their respective values before the step."
      },
      {
        "nullable": null,
        "types": [
          "Object.<string, *>"
        ],
        "spread": false,
        "optional": false,
        "name": "duringValues",
        "description": "Object containing field names and their respective values before the step."
      },
      {
        "nullable": null,
        "types": [
          "Object.<string, *>"
        ],
        "spread": false,
        "optional": false,
        "name": "postValues",
        "description": "Object containing field names and their respective values after the step."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 33,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "completeStep",
    "memberof": "src/js/algorithm/step-builder.js~StepBuilder",
    "longname": "src/js/algorithm/step-builder.js~StepBuilder#completeStep",
    "access": null,
    "description": "Called when the step is completed.",
    "lineNumber": 77,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 34,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "step",
    "memberof": "src/js/algorithm/step-builder.js~StepBuilder",
    "longname": "src/js/algorithm/step-builder.js~StepBuilder#step",
    "access": null,
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 35,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/algorithm/step.js",
    "memberof": null,
    "longname": "src/js/algorithm/step.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\r\n * Represents a step of an algorithm.\r\n * @class Step\r\n */\r\nclass Step {\r\n  /**\r\n   * String describing the Step.\r\n   * @type {string}\r\n   */\r\n  description;\r\n\r\n  /**\r\n   * Set of changes in this step.\r\n   * @type {Set}\r\n   */\r\n  changes = new Set();\r\n\r\n  /**\r\n   * Constructs a Step.  Ensures description is not null or the empty string\r\n   * @param  {string} description - A string describing the step of the algorithm.\r\n   * @constructs Step\r\n   */\r\n  constructor(description) {\r\n    this.description = description;\r\n    if (!this.description) {\r\n      this.description = ' ';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a change in values for an object to this Step.\r\n   * @param {Change} change - Change object to add.\r\n   */\r\n  addChange(change) {\r\n    this.changes.add(change);\r\n  }\r\n\r\n  /**\r\n   * Apply all pre-step values to objects.\r\n   */\r\n  applyPre() {\r\n    for (let change of this.changes) {\r\n      change.applyPre();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Applies all step values to objects.\r\n   */\r\n  applyDuring() {\r\n    for (let change of this.changes) {\r\n      change.applyDuring();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Applies all post-step values to objects.\r\n   */\r\n  applyPost() {\r\n    for (let change of this.changes) {\r\n      change.applyPost();\r\n    }\r\n  }\r\n}\r\n\r\nexport { Step };\r\nexport default Step;\r\n"
  },
  {
    "__docId__": 36,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Step",
    "memberof": "src/js/algorithm/step.js",
    "longname": "src/js/algorithm/step.js~Step",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/algorithm/step.js",
    "importStyle": "Step",
    "description": "Represents a step of an algorithm.",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Step"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 37,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/algorithm/step.js~Step",
    "longname": "src/js/algorithm/step.js~Step#constructor",
    "access": null,
    "description": "Constructs a Step.  Ensures description is not null or the empty string",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Step"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "A string describing the step of the algorithm."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 38,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "description",
    "memberof": "src/js/algorithm/step.js~Step",
    "longname": "src/js/algorithm/step.js~Step#description",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 39,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "description",
    "memberof": "src/js/algorithm/step.js~Step",
    "longname": "src/js/algorithm/step.js~Step#description",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 40,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addChange",
    "memberof": "src/js/algorithm/step.js~Step",
    "longname": "src/js/algorithm/step.js~Step#addChange",
    "access": null,
    "description": "Add a change in values for an object to this Step.",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "Change"
        ],
        "spread": false,
        "optional": false,
        "name": "change",
        "description": "Change object to add."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 41,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "applyPre",
    "memberof": "src/js/algorithm/step.js~Step",
    "longname": "src/js/algorithm/step.js~Step#applyPre",
    "access": null,
    "description": "Apply all pre-step values to objects.",
    "lineNumber": 41,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 42,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "applyDuring",
    "memberof": "src/js/algorithm/step.js~Step",
    "longname": "src/js/algorithm/step.js~Step#applyDuring",
    "access": null,
    "description": "Applies all step values to objects.",
    "lineNumber": 50,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 43,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "applyPost",
    "memberof": "src/js/algorithm/step.js~Step",
    "longname": "src/js/algorithm/step.js~Step#applyPost",
    "access": null,
    "description": "Applies all post-step values to objects.",
    "lineNumber": 59,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 44,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/algorithm/stepper.js",
    "memberof": null,
    "longname": "src/js/algorithm/stepper.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Helper class for stepping through and playing algorithm results.\n * @class Stepper\n */\nclass Stepper {\n\n  result = null;\n  speed = 500;\n  MAX_INTERVAL = 900;\n  MIN_INTERVAL = 100;\n  interval = null;\n\n  speedUp() {\n    if (this.speed !== this.MIN_INTERVAL) {\n      this.speed = this.speed - 200;\n      return true;\n    }\n    return false;\n  }\n\n  slowDown() {\n    if (this.speed !== this.MAX_INTERVAL) {\n      this.speed = this.speed + 200;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Reset the stepper object. Clears the algorithm results.\n   */\n  reset() {\n    this.pause();\n    this.result = null;\n  }\n\n  /**\n   * Reset the state of the graph by undoing all changes made by the algorithm steps.\n   */\n  resetGraph() {\n    if (this.result === null) {\n      return;\n    }\n    while (this.result.stepIndex !== -1) {\n      this.result.stepBackward();\n    }\n  }\n\n  /**\n   * Set the specified AlgorithmResult object to the \"result\" field.\n   * @param {AlgorithmResult} result - AlgorithmResult object.\n   */\n  setResult(result) {\n    this.reset();\n    this.result = result;\n  }\n\n  /**\n   * Go to the previous algorithm step.\n   */\n  stepBackward() {\n    this.result.stepBackward();\n  }\n\n  /**\n   * Go to the next algorithm step.\n   */\n  stepForward() {\n    this.result.stepForward();\n  }\n\n  /**\n   * Pause the stepper if it is currently playing.\n   */\n  pause() {\n    clearInterval(this.interval);\n    this.interval = null;\n  }\n\n  /**\n   * Play the algorithm results. Steps forward until paused or finished.\n   * @param  {Function} callback - Callback function that is called whenever a step is completed.\n   */\n  play(callback) {\n    this.interval = setInterval(() => {\n      if (this.result.stepIndex < this.result.timeline.length) {\n        try {\n          this.stepForward();\n          callback();\n          clearInterval(this.interval);\n          this.play(callback);\n        } catch (e) {\n          this.pause();\n          throw e;\n        }\n      } else {\n        this.pause();\n      }\n    }, this.speed);\n  }\n\n}\n\nexport { Stepper };\nexport default Stepper;\n"
  },
  {
    "__docId__": 45,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Stepper",
    "memberof": "src/js/algorithm/stepper.js",
    "longname": "src/js/algorithm/stepper.js~Stepper",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/algorithm/stepper.js",
    "importStyle": "Stepper",
    "description": "Helper class for stepping through and playing algorithm results.",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Stepper"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 46,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "speedUp",
    "memberof": "src/js/algorithm/stepper.js~Stepper",
    "longname": "src/js/algorithm/stepper.js~Stepper#speedUp",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 47,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "speed",
    "memberof": "src/js/algorithm/stepper.js~Stepper",
    "longname": "src/js/algorithm/stepper.js~Stepper#speed",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 48,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "slowDown",
    "memberof": "src/js/algorithm/stepper.js~Stepper",
    "longname": "src/js/algorithm/stepper.js~Stepper#slowDown",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 49,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "speed",
    "memberof": "src/js/algorithm/stepper.js~Stepper",
    "longname": "src/js/algorithm/stepper.js~Stepper#speed",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "reset",
    "memberof": "src/js/algorithm/stepper.js~Stepper",
    "longname": "src/js/algorithm/stepper.js~Stepper#reset",
    "access": null,
    "description": "Reset the stepper object. Clears the algorithm results.",
    "lineNumber": 32,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 51,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "result",
    "memberof": "src/js/algorithm/stepper.js~Stepper",
    "longname": "src/js/algorithm/stepper.js~Stepper#result",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resetGraph",
    "memberof": "src/js/algorithm/stepper.js~Stepper",
    "longname": "src/js/algorithm/stepper.js~Stepper#resetGraph",
    "access": null,
    "description": "Reset the state of the graph by undoing all changes made by the algorithm steps.",
    "lineNumber": 40,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 53,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setResult",
    "memberof": "src/js/algorithm/stepper.js~Stepper",
    "longname": "src/js/algorithm/stepper.js~Stepper#setResult",
    "access": null,
    "description": "Set the specified AlgorithmResult object to the \"result\" field.",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "AlgorithmResult"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": "AlgorithmResult object."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 54,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "result",
    "memberof": "src/js/algorithm/stepper.js~Stepper",
    "longname": "src/js/algorithm/stepper.js~Stepper#result",
    "access": null,
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stepBackward",
    "memberof": "src/js/algorithm/stepper.js~Stepper",
    "longname": "src/js/algorithm/stepper.js~Stepper#stepBackward",
    "access": null,
    "description": "Go to the previous algorithm step.",
    "lineNumber": 61,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 56,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stepForward",
    "memberof": "src/js/algorithm/stepper.js~Stepper",
    "longname": "src/js/algorithm/stepper.js~Stepper#stepForward",
    "access": null,
    "description": "Go to the next algorithm step.",
    "lineNumber": 68,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 57,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "pause",
    "memberof": "src/js/algorithm/stepper.js~Stepper",
    "longname": "src/js/algorithm/stepper.js~Stepper#pause",
    "access": null,
    "description": "Pause the stepper if it is currently playing.",
    "lineNumber": 75,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 58,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "interval",
    "memberof": "src/js/algorithm/stepper.js~Stepper",
    "longname": "src/js/algorithm/stepper.js~Stepper#interval",
    "access": null,
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "play",
    "memberof": "src/js/algorithm/stepper.js~Stepper",
    "longname": "src/js/algorithm/stepper.js~Stepper#play",
    "access": null,
    "description": "Play the algorithm results. Steps forward until paused or finished.",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function that is called whenever a step is completed."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 60,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "interval",
    "memberof": "src/js/algorithm/stepper.js~Stepper",
    "longname": "src/js/algorithm/stepper.js~Stepper#interval",
    "access": null,
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/algorithm/traversal-algorithm.js",
    "memberof": null,
    "longname": "src/js/algorithm/traversal-algorithm.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Queue from '../util/queue';\nimport Node from '../data/node/node';\nimport Edge from '../data/edge/edge';\nimport AlgorithmResult from '../algorithm/algorithm-result';\nimport AbstractAlgorithm from '../algorithm/abstract-algorithm';\nimport StepBuilder from '../algorithm/step-builder';\n\n/**\n * Class that contains code for running a traversal algorithm.\n * @class TraversalAlgorithm\n */\nclass TraversalAlgorithm extends AbstractAlgorithm {\n\n  /**\n   * Data structure that determines order of traversal.\n   * @type {Queue}\n   */\n  next = new Queue();\n\n  /**\n   * Source node of the algorithm.\n   * @type {[type]}\n   */\n  source = null;\n\n  /**\n   * Object that holds the algorithm input values. Used by the UI classes to view and store values.\n   * @type {Object.<string, *>}\n   */\n  inputs = {\n    source: null\n  };\n\n  /**\n   * @typedef InputType\n   * @type {object}\n   * @property {string} type - String representing type of input.\n   * @property {string} name - Name of the field.\n   * @property {string} displayName - Name to be displayed.\n   * @property {method} test - Function run to validate input.\n   * @property {boolean} required - Whether or not the input is required.\n   */\n\n  /**\n   * Object that defines the algorithm input types.\n   * @type {Object.<string, InputType>}\n   */\n  inputTypes = [\n    {\n      type: 'node',\n      name: 'source',\n      displayName: 'Source',\n      test: (node) => {\n        return node instanceof Node;\n      },\n      required: true\n    }\n  ];\n\n  /**\n   * Array of field names to store for Node objects.\n   * @type {Array.<string>}\n   */\n  nodeFields = [\n    'color'\n  ];\n\n  /**\n   * Array of field names to store for Edge objects.\n   * @type {Array.<string>}\n   */\n  edgeFields = [\n    'color'\n  ];\n\n  /**\n   * Constructor for TraversalAlgorithm.\n   * @param  {Graph} graph - The graph that the algorithm will be run on.\n   * @constructs TraversalAlgorithm\n   */\n  constructor(graph) {\n    super(graph);\n    this.result = new AlgorithmResult();\n    this.stepBuilder = new StepBuilder(this.nodeFields, this.edgeFields, this.result);\n  }\n\n  /**\n   * Visit the specified node.\n   * @param  {Node} node - The node to be visited.\n   */\n  visitNode(node) {\n    // mark node as visited\n    this.graphState.set(node, true);\n\n    // add adjacent edges to the queue\n    let edges = node.edges;\n    for (let edge of edges) {\n      if (this.hasVisited(edge) || this.next.has(edge)) {\n        continue;\n      }\n      if (edge.isDirected && edge.startNode === node) {\n        this.next.enqueue(edge);\n      } else if (!edge.isDirected) {\n        this.next.enqueue(edge);\n      }\n    }\n  }\n\n  /**\n   * Visit the specified edge.\n   * @param  {Edge} edge - The edge to be visited.\n   */\n  visitEdge(edge) {\n    // mark edge as visited\n    this.graphState.set(edge, true);\n\n    // add adjacent node to the queue\n    if (!this.hasVisited(edge.destNode) && !this.next.has(edge.destNode)) {\n      this.next.enqueue(edge.destNode);\n    } else if (!this.hasVisited(edge.startNode) && !edge.isDirected && !this.next.has(edge.startNode)) {\n      this.next.enqueue(edge.startNode);\n    }\n  }\n\n  /**\n   * Check if a node or edge has been visited by the algorithm.\n   * @param  {(Node|Edge)}  object - The node/edge to be checked.\n   * @return {boolean} - Whether or not the node/edge has been visited.\n   */\n  hasVisited(object) {\n    return this.graphState.has(object) && this.graphState.get(object);\n  }\n\n  /**\n   * @override\n   */\n  step() {\n    if (this.hasStarted && this.next.size === 0) {\n      this.isComplete = true;\n      return false;\n    }\n\n    let nextItem;\n\n    if (this.hasStarted) {\n      nextItem = this.next.dequeue();\n    } else {\n      this.hasStarted = true;\n      nextItem = this.source;\n    }\n\n    if (nextItem instanceof Node) {\n      this.visitNode(nextItem);\n    } else if (nextItem instanceof Edge) {\n      this.visitEdge(nextItem);\n    } else {\n      throw Error('Non-graph object in algorithm queue');\n    }\n    // represent the visual aspects of this step by creating a new step, adding a change for the current object, and completing the step\n    let typeName;\n    if (nextItem instanceof Node) {\n      typeName = 'node';\n    } else if (nextItem instanceof Edge) {\n      typeName = 'edge';\n    } else {\n      typeName = nextItem.constructor.name;\n    }\n    this.stepBuilder.newStep(`Visiting ${typeName} ${nextItem.id}`);\n    this.stepBuilder.addChange(nextItem, {\n      color: nextItem.color\n    }, {\n      color: 'red'\n    }, {\n      color: 'green'\n    });\n    this.stepBuilder.completeStep();\n\n    return true;\n  }\n\n  /**\n   * Reset the algorithm so that it can be run again.\n   */\n  reset() {\n    this.next.clear();\n    this.isComplete = false;\n    this.hasStarted = false;\n    this.graphState = new WeakMap();\n    this.result = new AlgorithmResult();\n    this.stepBuilder = new StepBuilder(this.nodeFields, this.edgeFields, this.result);\n  }\n\n}\n\nexport { TraversalAlgorithm };\nexport default TraversalAlgorithm;\n"
  },
  {
    "__docId__": 62,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TraversalAlgorithm",
    "memberof": "src/js/algorithm/traversal-algorithm.js",
    "longname": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/algorithm/traversal-algorithm.js",
    "importStyle": "TraversalAlgorithm",
    "description": "Class that contains code for running a traversal algorithm.",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TraversalAlgorithm"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/algorithm/abstract-algorithm.js~AbstractAlgorithm"
    ]
  },
  {
    "__docId__": 63,
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "InputType",
    "memberof": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm",
    "longname": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm.InputType",
    "access": null,
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "String representing type of input."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of the field."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "displayName",
        "description": "Name to be displayed."
      },
      {
        "nullable": null,
        "types": [
          "method"
        ],
        "spread": false,
        "optional": false,
        "name": "test",
        "description": "Function run to validate input."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "required",
        "description": "Whether or not the input is required."
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "InputType"
    }
  },
  {
    "__docId__": 64,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm",
    "longname": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm#constructor",
    "access": null,
    "description": "Constructor for TraversalAlgorithm.",
    "lineNumber": 81,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "TraversalAlgorithm"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The graph that the algorithm will be run on."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 65,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "result",
    "memberof": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm",
    "longname": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm#result",
    "access": null,
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "stepBuilder",
    "memberof": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm",
    "longname": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm#stepBuilder",
    "access": null,
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "visitNode",
    "memberof": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm",
    "longname": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm#visitNode",
    "access": null,
    "description": "Visit the specified node.",
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "The node to be visited."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 68,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "visitEdge",
    "memberof": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm",
    "longname": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm#visitEdge",
    "access": null,
    "description": "Visit the specified edge.",
    "lineNumber": 113,
    "params": [
      {
        "nullable": null,
        "types": [
          "Edge"
        ],
        "spread": false,
        "optional": false,
        "name": "edge",
        "description": "The edge to be visited."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 69,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hasVisited",
    "memberof": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm",
    "longname": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm#hasVisited",
    "access": null,
    "description": "Check if a node or edge has been visited by the algorithm.",
    "lineNumber": 130,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "The node/edge to be checked."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the node/edge has been visited."
    },
    "generator": false
  },
  {
    "__docId__": 70,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "step",
    "memberof": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm",
    "longname": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm#step",
    "access": null,
    "description": "",
    "lineNumber": 137,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 71,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "isComplete",
    "memberof": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm",
    "longname": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm#isComplete",
    "access": null,
    "description": null,
    "lineNumber": 139,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "hasStarted",
    "memberof": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm",
    "longname": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm#hasStarted",
    "access": null,
    "description": null,
    "lineNumber": 148,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "reset",
    "memberof": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm",
    "longname": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm#reset",
    "access": null,
    "description": "Reset the algorithm so that it can be run again.",
    "lineNumber": 184,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 74,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "isComplete",
    "memberof": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm",
    "longname": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm#isComplete",
    "access": null,
    "description": null,
    "lineNumber": 186,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "hasStarted",
    "memberof": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm",
    "longname": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm#hasStarted",
    "access": null,
    "description": null,
    "lineNumber": 187,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "graphState",
    "memberof": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm",
    "longname": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm#graphState",
    "access": null,
    "description": null,
    "lineNumber": 188,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "result",
    "memberof": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm",
    "longname": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm#result",
    "access": null,
    "description": null,
    "lineNumber": 189,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "stepBuilder",
    "memberof": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm",
    "longname": "src/js/algorithm/traversal-algorithm.js~TraversalAlgorithm#stepBuilder",
    "access": null,
    "description": null,
    "lineNumber": 190,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/app.js",
    "memberof": null,
    "longname": "src/js/app.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "require('../scss/styles.scss');\n\nimport { Graph } from './data/graph';\nimport { Serializer } from './util/graph-serialize';\nimport ui from './ui/ui';\n\nlet graph;\nlet serializer;\n\nfunction init() {\n  graph = new Graph();\n  serializer = new Serializer(graph, resetGraph);\n  ui.init(graph);\n  ui.toolbar.selectToolByName('node');\n  ui.canvas.resize();\n  window.requestAnimationFrame(draw);\n}\n\nfunction draw() {\n  ui.canvas.clear();\n  graph.draw(ui.canvas.context);\n  window.requestAnimationFrame(draw);\n}\n\nfunction resetGraph(newGraph) {\n  graph = newGraph;\n  ui.resetGraph(newGraph);\n  serializer.resetGraph(newGraph);\n}\n\nwindow.addEventListener('load', init, false);\n\nwindow.addEventListener('resize', (event) => {\n  if (ui.canvas) {\n    ui.canvas.resize();\n  }\n}, false);\n"
  },
  {
    "__docId__": 80,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "init",
    "memberof": "src/js/app.js",
    "longname": "src/js/app.js~init",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 81,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "draw",
    "memberof": "src/js/app.js",
    "longname": "src/js/app.js~draw",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 82,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "resetGraph",
    "memberof": "src/js/app.js",
    "longname": "src/js/app.js~resetGraph",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "newGraph",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 83,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/data/edge/dashed-edge.js",
    "memberof": null,
    "longname": "src/js/data/edge/dashed-edge.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Edge from './edge';\n\n/**\n * Edge subclass for dashed edges.\n * @class DashedEdge\n */\nclass DashedEdge extends Edge {\n\n  /**\n   * Draw the edge on the given canvas context.\n   * @param  {CanvasRenderingContext2D} context - Canvas 2D context.\n   * @override\n   */\n  draw(context) {\n    context.strokeStyle = this.isSelected ? this.selectedColor : this.color;\n    context.lineWidth = this.lineWidth;\n    context.setLineDash([ 5, 5 ]);\n\n    // Create a new path\n    context.beginPath();\n\n    // Start path at given point\n    context.moveTo(this.startPoint.x, this.startPoint.y);\n\n    // Draw line to given point\n    context.quadraticCurveTo(this.bezierPoint.x, this.bezierPoint.y, this.destPoint.x, this.destPoint.y);\n\n    // Draw to the canvas\n    context.stroke();\n    context.setLineDash([]);\n\n    if (this.isDirected) {\n      context.fillStyle = this.isSelected ? this.selectedColor : this.color;\n      this.drawArrow(context);\n    }\n\n    if (this.edgeLabel !== '') {\n      this.drawLabel(context);\n    }\n  }\n\n}\n\nexport { DashedEdge };\nexport default DashedEdge;\n"
  },
  {
    "__docId__": 84,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DashedEdge",
    "memberof": "src/js/data/edge/dashed-edge.js",
    "longname": "src/js/data/edge/dashed-edge.js~DashedEdge",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/data/edge/dashed-edge.js",
    "importStyle": "DashedEdge",
    "description": "Edge subclass for dashed edges.",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DashedEdge"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/data/edge/edge.js~Edge"
    ]
  },
  {
    "__docId__": 85,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "draw",
    "memberof": "src/js/data/edge/dashed-edge.js~DashedEdge",
    "longname": "src/js/data/edge/dashed-edge.js~DashedEdge#draw",
    "access": null,
    "description": "Draw the edge on the given canvas context.",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Canvas 2D context."
      }
    ],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 86,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/data/edge/edge.js",
    "memberof": null,
    "longname": "src/js/data/edge/edge.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { calcBezierDistance, bezierDerivative } from '../../util/bezier';\nimport Point2D from '../../util/point-2d';\nimport Triangle2D from '../../util/triangle-2d';\nimport Line2D from '../../util/line-2d';\nimport Label from '../label';\n\nconst EDGE_DISTANCE_THRESHOLD = 10;\n\n/**\n * Data representation of a graph edge.\n * @class Edge\n */\nclass Edge {\n\n  static numEdges = 0;\n  id = Edge.numEdges++;\n\n  // Line Control\n  startPoint = { x: 0, y: 0 };\n  bezierPoint = { x: 0, y: 0 };\n  destPoint = { x: 0, y: 0 };\n\n  // graph data\n  startNode = null;\n  destNode = null;\n  isDirected = false;\n  partners = [];\n\n  // status\n  isSelected = false;\n\n  // label\n  label;\n\n  // appearance\n  color = '#000000';\n  selectedColor = '#FF0000';\n  lineWidth = 1;\n\n  /**\n   * Constructs an Edge instance. Should not be called directly.\n   * @param  {Node} startNode - Start node of the edge.\n   * @param  {Node} destNode - Destination node of the edge.\n   * @constructs Edge\n   */\n  constructor(startNode, destNode) {\n    if (typeof startNode === 'undefined' || typeof destNode === 'undefined') {\n      throw Error(`Edge constructor requires at least two arguments: startNode and destNode. Actually passed in ${startNode}, ${destNode}`);\n    }\n\n    this.startNode = startNode;\n    this.destNode = destNode;\n\n    if (this.startNode !== null && this.destNode !== null) {\n      this.startNode.edges.add(this);\n      this.destNode.edges.add(this);\n\n      // copy partners from an existing partner edge\n      for (let edge of this.startNode.edges) {\n        if (edge.startNode === this.startNode && edge.destNode === this.destNode) {\n          this.partners = edge.partners.slice(0);\n          break;\n        } else if (edge.destNode === this.startNode && edge.startNode === this.destNode) {\n          this.partners = edge.partners.slice(0);\n          break;\n        }\n      }\n\n      // add this edge to partners field of all partner edges\n      for (let i = 0; i < this.partners.length; i++) {\n        this.partners[i].partners.push(this);\n      }\n      this.partners.push(this);\n\n      if (this.startNode === this.destNode) {\n        this.isDirected = true;\n        this.updateEndpoints();\n      } else {\n        for (let i = 0; i < this.partners.length; i++) {\n          this.partners[i].updateEndpoints();\n        }\n      }\n    } else {\n      this.partners.push(this);\n    }\n\n    this.label = new Label(this.bezierPoint.x, this.bezierPoint.y, this);\n  }\n\n  /**\n   * Remove the edge from all other graph objects associated with it.\n   */\n  detach() {\n    // remove this edge from partners of all partner edges\n    for (let i = 0; i < this.partners.length; i++) {\n      if (this.partners[i] === this) {\n        continue;\n      }\n      let index = this.partners[i].partners.indexOf(this);\n      this.partners[i].partners.splice(index, 1);\n      this.partners[i].updateEndpoints();\n    }\n    this.partners = [];\n    this.partners.push(this);\n\n    if (this.startNode !== null) {\n      this.startNode.edges.delete(this);\n    }\n    if (this.destNode !== null) {\n      this.destNode.edges.delete(this);\n    }\n    this.startNode = null;\n    this.destNode = null;\n  }\n\n  /**\n   * Update endpoints for a self-loop edge. Called by updateEndpoints().\n   */\n  updateSelfLoopEndpoints() {\n    this.startPoint = this.startNode.getAnglePoint(240);\n    this.destPoint = this.startNode.getAnglePoint(300);\n    this.bezierPoint = {\n      x: (this.startPoint.x + this.destPoint.x) / 2,\n      y: this.startPoint.y - 2 * this.startNode.radius\n    };\n  }\n\n  /**\n   * Update endpoints for a normal edge. Called by updateEndpoints().\n   */\n  updateNormalEdgeEndpoints() {\n    let dx = this.destNode.x - this.startNode.x;\n    let dy = this.destNode.y - this.startNode.y;\n    let distance = Math.sqrt(dx * dx + dy * dy);\n\n    // calculate incline based on dy and distance\n    // this is the angle between x-axis and the line from startNode to destNode\n    let incline = Math.asin(dy / distance);\n    // convert from radians to degrees\n    incline = incline * 180 / Math.PI;\n\n    // Note that canvas coordinates increase towards the bottom right\n    // Quadrants are oriented as follows:\n    //       |\n    //   Q3  |  Q4\n    //       |\n    // ------------- +x\n    //       |\n    //   Q2  |  Q1\n    //       |\n    //       +y\n    //\n\n    // if destNode.x < startNode.x, the angle should end:\n    //   in the second quadrant if destNode.y > startNode.y\n    //   in the third quadrant if destNode.y < startNode.y\n    if (this.startNode.x >= this.destNode.x) {\n      if (this.startNode.y >= this.destNode.y) {\n        incline = (540 - incline) % 360;\n      } else {\n        incline = 180 - incline;\n      }\n    }\n\n    let numPartners = this.partners.length + 1;\n    let multiIndex = this.partners.indexOf(this) + 1;\n\n    let ratio = multiIndex / numPartners;\n\n    // if the partner edge with index 0 is going in the opposite direction compared to the current edge\n    // then draw the current edge on the opposite side of the line connecting the two nodes\n    if (this.partners[0].startNode !== this.startNode) {\n      ratio = 1 - ratio;\n    }\n\n    let startAngle = incline + 90 * ratio - 45;\n    let destAngle = incline + 225 - 90 * ratio;\n    this.startPoint = this.startNode.getAnglePoint(startAngle);\n    this.destPoint = this.destNode.getAnglePoint(destAngle);\n\n    let orient = ratio - 0.5;\n    let diff = {\n      x: this.destPoint.x - this.startPoint.x,\n      y: this.destPoint.y - this.startPoint.y\n    };\n    this.bezierPoint = {\n      x: (this.startPoint.x + this.destPoint.x) / 2 - orient * diff.y,\n      y: (this.startPoint.y + this.destPoint.y) / 2 + orient * diff.x\n    };\n  }\n\n  /**\n   * Update the endpoints of the edge.\n   */\n  updateEndpoints() {\n    let oldStartPoint = this.startPoint;\n    let oldBezierPoint = this.bezierPoint;\n    let oldDestPoint = this.destPoint;\n    if (this.startNode === this.destNode) {\n      this.updateSelfLoopEndpoints();\n    } else {\n      this.updateNormalEdgeEndpoints();\n    }\n    if (this.label) {\n      if (oldStartPoint === null || oldBezierPoint === null || oldDestPoint === null) {\n        // initial label location\n        this.label.x = this.bezierPoint.x;\n        this.label.y = this.bezierPoint.y;\n      } else if (this.startNode === this.destNode) {\n        // self loop case\n        this.updateSelfLoopLabel(oldBezierPoint);\n      } else {\n        let oldStartPoint2D = new Point2D(oldStartPoint.x, oldStartPoint.y);\n        let oldBezierPoint2D = new Point2D(oldBezierPoint.x, oldBezierPoint.y);\n        let oldDestPoint2D = new Point2D(oldDestPoint.x, oldDestPoint.y);\n\n        let startPoint2D = new Point2D(this.startPoint.x, this.startPoint.y);\n        let bezierPoint2D = new Point2D(this.bezierPoint.x, this.bezierPoint.y);\n        let destPoint2D = new Point2D(this.destPoint.x, this.destPoint.y);\n\n        let oldStartDest = new Line2D(oldStartPoint2D, oldDestPoint2D);\n        let startDest = new Line2D(startPoint2D, destPoint2D);\n        if (startDest.hasPoint(bezierPoint2D)) {\n          if (startPoint2D.equals(destPoint2D)) {\n            // corner case where startPoint == endPoint\n            this.label.x = startPoint2D.x;\n            this.label.y = startPoint2D.y;\n          }\n\n          // straight edge case\n          if (!oldStartDest.hasPoint(oldBezierPoint2D)) {\n            // was previously a bezier curve, so reset coordinates to bezierPoint\n            this.label.x = this.bezierPoint.x;\n            this.label.y = this.bezierPoint.y;\n            return;\n          }\n          this.updateStraightEdgeLabel(oldStartPoint2D, oldBezierPoint2D, oldDestPoint2D, startPoint2D, bezierPoint2D, destPoint2D);\n        } else {\n          if (oldStartDest.hasPoint(oldBezierPoint2D)) {\n            // was previously a straight line, so reset coordinates to bezierPoint\n            this.label.x = this.bezierPoint.x;\n            this.label.y = this.bezierPoint.y;\n            return;\n          }\n          // curved edge\n          this.updateCurvedEdgeLabel(oldStartPoint2D, oldBezierPoint2D, oldDestPoint2D, startPoint2D, bezierPoint2D, destPoint2D);\n        }\n      }\n    }\n  }\n\n  /**\n   * Check if the edge contains a given point (within a distance threshold).\n   * @param  {number} x - x-coordinate of the point.\n   * @param  {number} y - y-coordinate of the point.\n   * @return {boolean} - Whether or not the edge contains the point.\n   */\n  containsPoint(x, y) {\n    return EDGE_DISTANCE_THRESHOLD > calcBezierDistance(x, y, this.startPoint, this.bezierPoint, this.destPoint);\n  }\n\n  /**\n   * Draw the edge on the given canvas context.\n   * @param  {CanvasRenderingContext2D} context - Canvas 2D context.\n   * @throws {Error} - Throws error if called.\n   * @abstract\n   */\n  draw(context) {\n    throw Error('Can\\'t call draw from abstract Edge class.');\n  }\n\n  /**\n   * Draw the Label object associated with this edge.\n   * @param  {CanvasRenderingContext2D} context - Canvas 2D context.\n   */\n  drawLabel(context) {\n    this.label.draw(context);\n  }\n\n  /**\n   * Draw an arrow on the destination side of the edge on the given context.\n   * @param  {CanvasRenderingContext2D} context - Canvas 2D context.\n   */\n  drawArrow(context) {\n    let slope = bezierDerivative(1, this.startPoint, this.bezierPoint, this.destPoint);\n    let length = Math.sqrt(slope.x * slope.x + slope.y * slope.y);\n    // normalize slope\n    slope = { x: slope.x / length, y: slope.y / length };\n    // perpendicular:\n    context.beginPath();\n    context.moveTo(this.destPoint.x, this.destPoint.y);\n    context.lineTo(this.destPoint.x - 15 * slope.x - 5 * slope.y, this.destPoint.y - 15 * slope.y + 5 * slope.x);\n    context.lineTo(this.destPoint.x - 9 * slope.x, this.destPoint.y - 9 * slope.y);\n    context.lineTo(this.destPoint.x - 15 * slope.x + 5 * slope.y, this.destPoint.y - 15 * slope.y - 5 * slope.x);\n    context.fill();\n  }\n\n  /**\n   * Update the position of the Label for a self-loop edge.\n   * @param {Object} oldBezierPoint - The previous bezier point location.\n   * @param {number} oldBezierPoint.x - The x-coordinate of the bezier point.\n   * @param {number} oldBezierPoint.y - The y-coordinate of the bezier point.\n   */\n  updateSelfLoopLabel(oldBezierPoint) {\n    this.label.x += this.bezierPoint.x - oldBezierPoint.x;\n    this.label.y += this.bezierPoint.y - oldBezierPoint.y;\n  }\n\n  /**\n   * Update the position of the Label for a straight edge.\n   * @param  {Point2D} oldStartPoint2D - The previous start point.\n   * @param  {Point2D} oldBezierPoint2D - The previous bezier point.\n   * @param  {Point2D} oldDestPoint2D - The previous destination point.\n   * @param  {Point2D} startPoint2D - The current start point.\n   * @param  {Point2D} bezierPoint2D - The current bezier point.\n   * @param  {Point2D} destPoint2D - The current destination point.\n   */\n  updateStraightEdgeLabel(oldStartPoint2D, oldBezierPoint2D, oldDestPoint2D, startPoint2D, bezierPoint2D, destPoint2D) {\n    let oldLabelPosition = new Point2D(this.label.x, this.label.y);\n    let oldStartLabelVec = oldStartPoint2D.vectorTo(oldLabelPosition);\n    let oldStartDestVec = oldStartPoint2D.vectorTo(oldDestPoint2D);\n\n    let u = oldStartLabelVec.projectOnto(oldStartDestVec);\n    let v = oldStartLabelVec.sub(u);\n\n    let ratioU = u.length / oldStartDestVec.length;\n    if (u.degreesTo(oldStartDestVec) !== 0) {\n      ratioU *= -1;\n    }\n\n    let startDestVec = startPoint2D.vectorTo(destPoint2D);\n    let newU = startDestVec.scale(ratioU);\n\n    let newLabelPosition;\n    if (v.length === 0) {\n      // label is on the line\n      newLabelPosition = startPoint2D.translateVec(newU);\n    } else {\n      // label is not on the line\n      let ratioV = v.length / oldStartDestVec.length;\n      let angle = oldStartDestVec.degreesTo(v);\n      let newV = startDestVec.rotateDegrees(angle).scale(ratioV);\n\n      newLabelPosition = startPoint2D.translateVec(newU).translateVec(newV);\n    }\n\n    this.label.x = newLabelPosition.x;\n    this.label.y = newLabelPosition.y;\n  }\n\n  /**\n   * Update the position of the Label for a curved edge.\n   * @param  {Point2D} oldStartPoint2D - The previous start point.\n   * @param  {Point2D} oldBezierPoint2D - The previous bezier point.\n   * @param  {Point2D} oldDestPoint2D - The previous destination point.\n   * @param  {Point2D} startPoint2D - The current start point.\n   * @param  {Point2D} bezierPoint2D - The current bezier point.\n   * @param  {Point2D} destPoint2D - The current destination point.\n   */\n  updateCurvedEdgeLabel(oldStartPoint2D, oldBezierPoint2D, oldDestPoint2D, startPoint2D, bezierPoint2D, destPoint2D) {\n    let oldTriangle = new Triangle2D(oldStartPoint2D, oldBezierPoint2D, oldDestPoint2D);\n    let newTriangle = new Triangle2D(startPoint2D, bezierPoint2D, destPoint2D);\n\n    let oldLabelPosition = new Point2D(this.label.x, this.label.y);\n    let newLabelPosition = oldLabelPosition.relativePositionToTriangle2D(oldTriangle, newTriangle);\n\n    this.label.x = newLabelPosition.x;\n    this.label.y = newLabelPosition.y;\n  }\n\n}\n\nexport { Edge };\nexport default Edge;\n"
  },
  {
    "__docId__": 87,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "EDGE_DISTANCE_THRESHOLD",
    "memberof": "src/js/data/edge/edge.js",
    "longname": "src/js/data/edge/edge.js~EDGE_DISTANCE_THRESHOLD",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/data/edge/edge.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Edge",
    "memberof": "src/js/data/edge/edge.js",
    "longname": "src/js/data/edge/edge.js~Edge",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/data/edge/edge.js",
    "importStyle": "Edge",
    "description": "Data representation of a graph edge.",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Edge"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 89,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#constructor",
    "access": null,
    "description": "Constructs an Edge instance. Should not be called directly.",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Edge"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "startNode",
        "description": "Start node of the edge."
      },
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "destNode",
        "description": "Destination node of the edge."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 90,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "startNode",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#startNode",
    "access": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "destNode",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#destNode",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "partners",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#partners",
    "access": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "partners",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#partners",
    "access": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "isDirected",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#isDirected",
    "access": null,
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "label",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#label",
    "access": null,
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "detach",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#detach",
    "access": null,
    "description": "Remove the edge from all other graph objects associated with it.",
    "lineNumber": 93,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 97,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "partners",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#partners",
    "access": null,
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "startNode",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#startNode",
    "access": null,
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "destNode",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#destNode",
    "access": null,
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateSelfLoopEndpoints",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#updateSelfLoopEndpoints",
    "access": null,
    "description": "Update endpoints for a self-loop edge. Called by updateEndpoints().",
    "lineNumber": 119,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 101,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "startPoint",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#startPoint",
    "access": null,
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "destPoint",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#destPoint",
    "access": null,
    "description": null,
    "lineNumber": 121,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "bezierPoint",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#bezierPoint",
    "access": null,
    "description": null,
    "lineNumber": 122,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateNormalEdgeEndpoints",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#updateNormalEdgeEndpoints",
    "access": null,
    "description": "Update endpoints for a normal edge. Called by updateEndpoints().",
    "lineNumber": 131,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 105,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "startPoint",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#startPoint",
    "access": null,
    "description": null,
    "lineNumber": 178,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "destPoint",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#destPoint",
    "access": null,
    "description": null,
    "lineNumber": 179,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "bezierPoint",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#bezierPoint",
    "access": null,
    "description": null,
    "lineNumber": 186,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateEndpoints",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#updateEndpoints",
    "access": null,
    "description": "Update the endpoints of the edge.",
    "lineNumber": 195,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 109,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "containsPoint",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#containsPoint",
    "access": null,
    "description": "Check if the edge contains a given point (within a distance threshold).",
    "lineNumber": 258,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the edge contains the point."
    },
    "generator": false
  },
  {
    "__docId__": 110,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "draw",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#draw",
    "access": null,
    "description": "Draw the edge on the given canvas context.",
    "lineNumber": 268,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Canvas 2D context."
      }
    ],
    "abstract": true,
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Throws error if called."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 111,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "drawLabel",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#drawLabel",
    "access": null,
    "description": "Draw the Label object associated with this edge.",
    "lineNumber": 276,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Canvas 2D context."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 112,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "drawArrow",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#drawArrow",
    "access": null,
    "description": "Draw an arrow on the destination side of the edge on the given context.",
    "lineNumber": 284,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Canvas 2D context."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 113,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateSelfLoopLabel",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#updateSelfLoopLabel",
    "access": null,
    "description": "Update the position of the Label for a self-loop edge.",
    "lineNumber": 304,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "oldBezierPoint",
        "description": "The previous bezier point location."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "oldBezierPoint.x",
        "description": "The x-coordinate of the bezier point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "oldBezierPoint.y",
        "description": "The y-coordinate of the bezier point."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 114,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateStraightEdgeLabel",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#updateStraightEdgeLabel",
    "access": null,
    "description": "Update the position of the Label for a straight edge.",
    "lineNumber": 318,
    "params": [
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "oldStartPoint2D",
        "description": "The previous start point."
      },
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "oldBezierPoint2D",
        "description": "The previous bezier point."
      },
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "oldDestPoint2D",
        "description": "The previous destination point."
      },
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "startPoint2D",
        "description": "The current start point."
      },
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "bezierPoint2D",
        "description": "The current bezier point."
      },
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "destPoint2D",
        "description": "The current destination point."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 115,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateCurvedEdgeLabel",
    "memberof": "src/js/data/edge/edge.js~Edge",
    "longname": "src/js/data/edge/edge.js~Edge#updateCurvedEdgeLabel",
    "access": null,
    "description": "Update the position of the Label for a curved edge.",
    "lineNumber": 360,
    "params": [
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "oldStartPoint2D",
        "description": "The previous start point."
      },
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "oldBezierPoint2D",
        "description": "The previous bezier point."
      },
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "oldDestPoint2D",
        "description": "The previous destination point."
      },
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "startPoint2D",
        "description": "The current start point."
      },
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "bezierPoint2D",
        "description": "The current bezier point."
      },
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "destPoint2D",
        "description": "The current destination point."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 116,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/data/edge/solid-edge.js",
    "memberof": null,
    "longname": "src/js/data/edge/solid-edge.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Edge from './edge';\n\n/**\n * Edge subclass for solid edges.\n * @class SolidEdge\n */\nclass SolidEdge extends Edge {\n\n  /**\n   * Draw the edge on the given canvas context.\n   * @param  {CanvasRenderingContext2D} context - Canvas 2D context.\n   * @override\n   */\n  draw(context) {\n    context.strokeStyle = this.isSelected ? this.selectedColor : this.color;\n    context.lineWidth = this.lineWidth;\n\n\n    // Create a new path\n    context.beginPath();\n\n    // Start path at given point\n    context.moveTo(this.startPoint.x, this.startPoint.y);\n\n    // Draw line to given point\n    context.quadraticCurveTo(this.bezierPoint.x, this.bezierPoint.y, this.destPoint.x, this.destPoint.y);\n\n    // Draw to the canvas\n    context.stroke();\n\n\n    if (this.isDirected) {\n      context.fillStyle = this.isSelected ? this.selectedColor : this.color;\n      this.drawArrow(context);\n    }\n\n    if (this.edgeLabel !== '') {\n      this.drawLabel(context);\n    }\n  }\n\n}\n\nexport { SolidEdge };\nexport default SolidEdge;\n"
  },
  {
    "__docId__": 117,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SolidEdge",
    "memberof": "src/js/data/edge/solid-edge.js",
    "longname": "src/js/data/edge/solid-edge.js~SolidEdge",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/data/edge/solid-edge.js",
    "importStyle": "SolidEdge",
    "description": "Edge subclass for solid edges.",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SolidEdge"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/data/edge/edge.js~Edge"
    ]
  },
  {
    "__docId__": 118,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "draw",
    "memberof": "src/js/data/edge/solid-edge.js~SolidEdge",
    "longname": "src/js/data/edge/solid-edge.js~SolidEdge#draw",
    "access": null,
    "description": "Draw the edge on the given canvas context.",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Canvas 2D context."
      }
    ],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 119,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/data/graph.js",
    "memberof": null,
    "longname": "src/js/data/graph.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Node from '../data/node/node';\nimport Edge from '../data/edge/edge';\nimport Label from '../data/label';\n\n/**\n * Data representation of a graph.\n * @class Graph\n */\nclass Graph {\n\n  /**\n   * Constructs a Graph instance.\n   * @param  {Set.<Node>} nodes - Iterable containing nodes to add.\n   * @param  {Set.<Edge>} edges - Iterable containing edges to add.\n   * @constructs Graph\n   */\n  constructor(nodes, edges) {\n    this.nodes = new Set(nodes);\n    this.edges = new Set(edges);\n  }\n\n  /**\n   * Validate the graph. Called to check if imported graph is valid.\n   * @return {boolean} - Whether or not the graph is valid.\n   */\n  validate() {\n    if (!(this.nodes instanceof Set) || !(this.edges instanceof Set)) {\n      return false;\n    }\n    for (let node of this.nodes) {\n      if (!(node instanceof Node) || !(node.id >= 0)) {\n        return false;\n      }\n      if (node.label !== null && !(node.label instanceof Label)) {\n        return false;\n      }\n    }\n\n    for (let edge of this.edges) {\n      if (!(edge instanceof Edge) || !(edge.id >= 0)) {\n        return false;\n      }\n      if (edge.label !== null && !(edge.label instanceof Label)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Add a node to the graph.\n   * @param {Node} node - The node to add.\n   */\n  addNode(node) {\n    this.nodes.add(node);\n  }\n\n  /**\n   * Add an edge to the graph.\n   * @param {Edge} edge - The edge to add.\n   */\n  addEdge(edge) {\n    if (!this.nodes.has(edge.startNode) || !this.nodes.has(edge.destNode)) {\n      throw new Error('Edge nodes are not in the graph');\n    }\n    this.edges.add(edge);\n  }\n\n  /**\n   * Remove a node from the graph.\n   * @param  {Node} node - The node to remove.\n   */\n  removeNode(node) {\n    // Temp copy of edges to work on while we remove them\n    let tempEdges = new Set();\n    for (let edge of node.edges) {\n      tempEdges.add(edge);\n    }\n    for (let edge of tempEdges) {\n      this.removeEdge(edge);\n    }\n    this.nodes.delete(node);\n  }\n\n  /**\n   * Remove an edge from the graph.\n   * @param  {Edge} edge - The edge to remove.\n   */\n  removeEdge(edge) {\n    let id = edge.id;\n    for (let i = 0; i < edge.partners.length; i++) {\n      for (let j = 0; j < edge.partners[i].length; j++) {\n        if (edge.partners[i].partners[j].id === id) {\n          edge.partners[i].partners.splice(j, 1);\n          edge.partners[i].updateEndpoints();\n          break;\n        }\n      }\n    }\n    this.edges.delete(edge);\n    edge.detach();\n  }\n\n  /**\n   * Check if the graph has an edge from start to dest.\n   * @param  {Node}  start - The start node.\n   * @param  {Node}  dest - The dest node.\n   * @return {boolean} - Whether or not the graph contains an edge from start to dest.\n   */\n  hasEdge(start, dest) {\n    if (!this.nodes.has(start) || !this.nodes.has(dest)) {\n      throw new Error('Nodes are not in the graph');\n    }\n\n    for (let edge of this.edges) {\n      if (edge.startNode === start && edge.destNode === dest) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if the graph has a component at the given point.\n   * @param  {number} x - x-coordinate of the point.\n   * @param  {number} y - y-coordinate of the point.\n   * @param  {(Node|Edge|Label)}  ignore - Object to ignore checking. This is to prevent returning true when dragging items.\n   * @return {boolean} - Whether or not the graph has a component at the point.\n   */\n  hasComponent(x, y, ignore) {\n    let component = this.getComponent(x, y);\n    return component !== ignore && component !== null;\n  }\n\n  /**\n   * Get the graph component at the given point, if it exists. If multiple objects overlap, the priority is (highest to lowest): Label, Node, Edge.\n   * @param  {number} x - x-coordinate of the point.\n   * @param  {number} y - y-coordinate of the point.\n   * @return {(Node|Edge|Label)} - Object at the given point if it exists, null otherwise.\n   */\n  getComponent(x, y) {\n    for (let node of this.nodes) {\n      if (node.label.containsPoint(x, y)) {\n        return node.label;\n      }\n    }\n\n    for (let edge of this.edges) {\n      if (edge.label.containsPoint(x, y)) {\n        return edge.label;\n      }\n    }\n\n    for (let node of this.nodes) {\n      if (node.containsPoint(x, y)) {\n        return node;\n      }\n    }\n\n    for (let edge of this.edges) {\n      if (edge.containsPoint(x, y)) {\n        return edge;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Checks if there is a node collision by moving a node\n   * @param  {Node} testNode - The node to check collisions for.\n   * @param  {number} x - x-coordinate of the node.\n   * @param  {number} y - y-coordinate of the node.\n   * @return {boolean} - Whether or not there is a collision.\n   */\n  isNodeCollision(testNode, x, y) {\n    let collision = false;\n    this.forEachNode((node) => {\n      if (node === testNode) {\n        return true;\n      }\n      let nodePoint = node.edgePointInDirection(x, y);\n      let testPoint = testNode.edgePointInDirection(node.x, node.y);\n      if (testNode.containsPoint(nodePoint.x, nodePoint.y)\n          || node.containsPoint(testPoint.x, testPoint.y)) {\n        collision = true;\n        return false;\n      }\n      return true;\n    });\n    return collision;\n  }\n\n  /**\n   * Iterator for all graph nodes. Remaining nodes are skipped if the callback returns false.\n   * @param {function(node: Node): boolean} callback - Called once for each node, with the node as a parameter. Return false to skip remaining nodes.\n   */\n  forEachNode(callback) {\n    for (let node of this.nodes) {\n      if (callback(node) === false) {\n        break;\n      }\n    }\n  }\n\n  /**\n   * Iterator for all graph edges. Remaining edges are skipped if the callback returns false.\n   * @param {function(edge: Edge): boolean} callback - Called once for each edge, with the edge as a parameter. Return false to skip remaining edges.\n   */\n  forEachEdge(callback) {\n    for (let edge of this.edges) {\n      if (callback(edge) === false) {\n        break;\n      }\n    }\n  }\n\n  /**\n   * Draw the graph on the given canvas context.\n   * @param  {CanvasRenderingContext2D} context - Canvas 2D context.\n   */\n  draw(context) {\n    this.edges.forEach((edge) => {\n      edge.draw(context);\n    });\n\n    this.nodes.forEach((node) => {\n      node.draw(context);\n    });\n  }\n}\n\nexport { Graph };\nexport default Graph;\n"
  },
  {
    "__docId__": 120,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Graph",
    "memberof": "src/js/data/graph.js",
    "longname": "src/js/data/graph.js~Graph",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/data/graph.js",
    "importStyle": "Graph",
    "description": "Data representation of a graph.",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Graph"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 121,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/data/graph.js~Graph",
    "longname": "src/js/data/graph.js~Graph#constructor",
    "access": null,
    "description": "Constructs a Graph instance.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Graph"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Set.<Node>"
        ],
        "spread": false,
        "optional": false,
        "name": "nodes",
        "description": "Iterable containing nodes to add."
      },
      {
        "nullable": null,
        "types": [
          "Set.<Edge>"
        ],
        "spread": false,
        "optional": false,
        "name": "edges",
        "description": "Iterable containing edges to add."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 122,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "nodes",
    "memberof": "src/js/data/graph.js~Graph",
    "longname": "src/js/data/graph.js~Graph#nodes",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "edges",
    "memberof": "src/js/data/graph.js~Graph",
    "longname": "src/js/data/graph.js~Graph#edges",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "validate",
    "memberof": "src/js/data/graph.js~Graph",
    "longname": "src/js/data/graph.js~Graph#validate",
    "access": null,
    "description": "Validate the graph. Called to check if imported graph is valid.",
    "lineNumber": 26,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the graph is valid."
    },
    "generator": false
  },
  {
    "__docId__": 125,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addNode",
    "memberof": "src/js/data/graph.js~Graph",
    "longname": "src/js/data/graph.js~Graph#addNode",
    "access": null,
    "description": "Add a node to the graph.",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "The node to add."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 126,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addEdge",
    "memberof": "src/js/data/graph.js~Graph",
    "longname": "src/js/data/graph.js~Graph#addEdge",
    "access": null,
    "description": "Add an edge to the graph.",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "Edge"
        ],
        "spread": false,
        "optional": false,
        "name": "edge",
        "description": "The edge to add."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 127,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeNode",
    "memberof": "src/js/data/graph.js~Graph",
    "longname": "src/js/data/graph.js~Graph#removeNode",
    "access": null,
    "description": "Remove a node from the graph.",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "The node to remove."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 128,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeEdge",
    "memberof": "src/js/data/graph.js~Graph",
    "longname": "src/js/data/graph.js~Graph#removeEdge",
    "access": null,
    "description": "Remove an edge from the graph.",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "Edge"
        ],
        "spread": false,
        "optional": false,
        "name": "edge",
        "description": "The edge to remove."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 129,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hasEdge",
    "memberof": "src/js/data/graph.js~Graph",
    "longname": "src/js/data/graph.js~Graph#hasEdge",
    "access": null,
    "description": "Check if the graph has an edge from start to dest.",
    "lineNumber": 110,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "The start node."
      },
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "dest",
        "description": "The dest node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the graph contains an edge from start to dest."
    },
    "generator": false
  },
  {
    "__docId__": 130,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hasComponent",
    "memberof": "src/js/data/graph.js~Graph",
    "longname": "src/js/data/graph.js~Graph#hasComponent",
    "access": null,
    "description": "Check if the graph has a component at the given point.",
    "lineNumber": 130,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the point."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "ignore",
        "description": "Object to ignore checking. This is to prevent returning true when dragging items."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the graph has a component at the point."
    },
    "generator": false
  },
  {
    "__docId__": 131,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getComponent",
    "memberof": "src/js/data/graph.js~Graph",
    "longname": "src/js/data/graph.js~Graph#getComponent",
    "access": null,
    "description": "Get the graph component at the given point, if it exists. If multiple objects overlap, the priority is (highest to lowest): Label, Node, Edge.",
    "lineNumber": 141,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Node",
        "Edge",
        "Label"
      ],
      "spread": false,
      "description": "Object at the given point if it exists, null otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 132,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "isNodeCollision",
    "memberof": "src/js/data/graph.js~Graph",
    "longname": "src/js/data/graph.js~Graph#isNodeCollision",
    "access": null,
    "description": "Checks if there is a node collision by moving a node",
    "lineNumber": 176,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "testNode",
        "description": "The node to check collisions for."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the node."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not there is a collision."
    },
    "generator": false
  },
  {
    "__docId__": 133,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "forEachNode",
    "memberof": "src/js/data/graph.js~Graph",
    "longname": "src/js/data/graph.js~Graph#forEachNode",
    "access": null,
    "description": "Iterator for all graph nodes. Remaining nodes are skipped if the callback returns false.",
    "lineNumber": 198,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(node: Node): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Called once for each node, with the node as a parameter. Return false to skip remaining nodes."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 134,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "forEachEdge",
    "memberof": "src/js/data/graph.js~Graph",
    "longname": "src/js/data/graph.js~Graph#forEachEdge",
    "access": null,
    "description": "Iterator for all graph edges. Remaining edges are skipped if the callback returns false.",
    "lineNumber": 210,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(edge: Edge): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Called once for each edge, with the edge as a parameter. Return false to skip remaining edges."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 135,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "draw",
    "memberof": "src/js/data/graph.js~Graph",
    "longname": "src/js/data/graph.js~Graph#draw",
    "access": null,
    "description": "Draw the graph on the given canvas context.",
    "lineNumber": 222,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Canvas 2D context."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 136,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/data/label.js",
    "memberof": null,
    "longname": "src/js/data/label.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\r\n * Data representation of text objects. Not called Text due to JavaScript already having a Text class.\r\n * @class Label\r\n */\r\nclass Label {\r\n\r\n  // graph data\r\n  x;\r\n  y;\r\n  parentObject;\r\n  content = '';\r\n\r\n  // state\r\n  isSelected = false;\r\n  textMetric;\r\n\r\n  // appearance\r\n  color = '#000000';\r\n  selectedColor = '#ff0000';\r\n  textAlign = 'start';\r\n\r\n  // context.font properties\r\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/font\r\n  // font = size | family\r\n  //      = style | size | family\r\n  //      = style | variant | weight | size/line-height | family\r\n  //      = style | variant | weight | stretch | size/line-height | family\r\n  fontStyle = 'normal'; // normal | italic | oblique\r\n  fontVariant = 'normal'; // normal | small-caps\r\n  fontWeight = 'normal'; // normal | bold | lighter | bolder | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900\r\n  fontStretch = 'normal'; // normal | semi-condensed | condensed | extra-condensed | ultra-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded\r\n  fontSize = '14px'; // xx-small | x-small | small | medium | large | x-large | xx-large | larger | smaller | <length> | <percentage>\r\n  lineHeight = 'normal'; // normal | <number> | <length> | <percentage>\r\n  fontFamily = 'Open sans'; // <family-name> | <generic-name>\r\n  // <length> units\r\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/length\r\n\r\n  /**\r\n   * Constructs a Label instance.\r\n   * @param  {number} x - x-coordinate of the label.\r\n   * @param  {number} y - y-coordinate of the label.\r\n   * @param  {(Node|Edge)} parentObject - Node or Edge associated with the Label.\r\n   * @constructs Label\r\n   */\r\n  constructor(x, y, parentObject) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.parentObject = parentObject;\r\n  }\r\n\r\n  /**\r\n   * Check if the label contains the given point.\r\n   * @param  {number} x - x-coordinate of the point.\r\n   * @param  {number} y - y-coordinate of the point.\r\n   * @return {boolean} - Whether or not the label contains the point.\r\n   */\r\n  containsPoint(x, y) {\r\n    if (this.content === '') {\r\n      return false;\r\n    }\r\n    // textMetric.actualBoundingBox* not yet supported in stable Chrome\r\n    let padding = 5;\r\n    let left = this.x - padding;\r\n    let right = this.x + this.textMetric.width + padding;\r\n\r\n    let top = this.y - parseInt(this.fontSize, 10) - padding;\r\n    let bottom = this.y + padding;\r\n\r\n    let containsPoint = (left <= x && x <= right) && (top <= y && y <= bottom);\r\n    return containsPoint;\r\n  }\r\n\r\n  /**\r\n   * Returns the font properties concatenated to match the CanvasRenderingContext2D.font property.\r\n   * @return {string} - String that can be used to set the canvas font property.\r\n   */\r\n  get font() {\r\n    return `${this.fontStyle} ${this.fontVariant} ${this.fontWeight} ${this.fontStretch} ${this.fontSize}/${this.lineHeight} \"${this.fontFamily}\", sans-serif`;\r\n  }\r\n\r\n  /**\r\n   * Update the label's position.\r\n   * @param {number} x - The new x-coordinate.\r\n   * @param {number} y - The new y-coordinate.\r\n   */\r\n  setPos(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  /**\r\n   * Draw the label on the given canvas context.\r\n   * @param  {CanvasRenderingContext2D} context - Canvas 2D context.\r\n   */\r\n  draw(context) {\r\n    if (this.content === '') {\r\n      return;\r\n    }\r\n\r\n    this.textMetric = context.measureText(this.content);\r\n\r\n    // set font style\r\n    context.font = this.font;\r\n    context.textAlign = this.textAlign;\r\n    context.fillStyle = this.color;\r\n\r\n    context.fillText(this.content, this.x, this.y);\r\n\r\n    if (this.isSelected) {\r\n      this.drawBox(context);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Draw a box around the label's selection area on the given canvas context.\r\n   * @param  {CanvasRenderingContext2D} context - Canvas 2D context.\r\n   */\r\n  drawBox(context) {\r\n    // textMetric.actualBoundingBox* not yet supported in stable Chrome\r\n    let padding = 5;\r\n    let left = this.x - padding;\r\n    let right = this.x + this.textMetric.width + padding;\r\n\r\n    let top = this.y - parseInt(this.fontSize, 10) - padding;\r\n    let bottom = this.y + padding;\r\n\r\n    context.strokeStyle = this.selectedColor;\r\n\r\n    context.beginPath();\r\n    context.moveTo(left, top);\r\n    context.lineTo(left, bottom);\r\n    context.lineTo(right, bottom);\r\n    context.lineTo(right, top);\r\n    context.lineTo(left, top);\r\n    context.stroke();\r\n  }\r\n}\r\n\r\nexport { Label };\r\nexport default Label;\r\n"
  },
  {
    "__docId__": 137,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Label",
    "memberof": "src/js/data/label.js",
    "longname": "src/js/data/label.js~Label",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/data/label.js",
    "importStyle": "Label",
    "description": "Data representation of text objects. Not called Text due to JavaScript already having a Text class.",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Label"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 138,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/data/label.js~Label",
    "longname": "src/js/data/label.js~Label#constructor",
    "access": null,
    "description": "Constructs a Label instance.",
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Label"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the label."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the label."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge"
        ],
        "spread": false,
        "optional": false,
        "name": "parentObject",
        "description": "Node or Edge associated with the Label."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 139,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "x",
    "memberof": "src/js/data/label.js~Label",
    "longname": "src/js/data/label.js~Label#x",
    "access": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 140,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "y",
    "memberof": "src/js/data/label.js~Label",
    "longname": "src/js/data/label.js~Label#y",
    "access": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "parentObject",
    "memberof": "src/js/data/label.js~Label",
    "longname": "src/js/data/label.js~Label#parentObject",
    "access": null,
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 142,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "containsPoint",
    "memberof": "src/js/data/label.js~Label",
    "longname": "src/js/data/label.js~Label#containsPoint",
    "access": null,
    "description": "Check if the label contains the given point.",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the label contains the point."
    },
    "generator": false
  },
  {
    "__docId__": 143,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "font",
    "memberof": "src/js/data/label.js~Label",
    "longname": "src/js/data/label.js~Label#font",
    "access": null,
    "description": "Returns the font properties concatenated to match the CanvasRenderingContext2D.font property.",
    "lineNumber": 77,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "String that can be used to set the canvas font property."
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 144,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setPos",
    "memberof": "src/js/data/label.js~Label",
    "longname": "src/js/data/label.js~Label#setPos",
    "access": null,
    "description": "Update the label's position.",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "The new x-coordinate."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "The new y-coordinate."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 145,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "x",
    "memberof": "src/js/data/label.js~Label",
    "longname": "src/js/data/label.js~Label#x",
    "access": null,
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 146,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "y",
    "memberof": "src/js/data/label.js~Label",
    "longname": "src/js/data/label.js~Label#y",
    "access": null,
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "draw",
    "memberof": "src/js/data/label.js~Label",
    "longname": "src/js/data/label.js~Label#draw",
    "access": null,
    "description": "Draw the label on the given canvas context.",
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Canvas 2D context."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 148,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "textMetric",
    "memberof": "src/js/data/label.js~Label",
    "longname": "src/js/data/label.js~Label#textMetric",
    "access": null,
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 149,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "drawBox",
    "memberof": "src/js/data/label.js~Label",
    "longname": "src/js/data/label.js~Label#drawBox",
    "access": null,
    "description": "Draw a box around the label's selection area on the given canvas context.",
    "lineNumber": 118,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Canvas 2D context."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 150,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/data/node/circle-node.js",
    "memberof": null,
    "longname": "src/js/data/node/circle-node.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Node from './node';\nimport Label from '../label';\n\n/**\n * Node subclass for circle nodes.\n * @class CircleNode\n */\nclass CircleNode extends Node {\n\n  radius = 30;\n\n  /**\n   * Constructs a CircleNode instance.\n   * @param  {number} x - x-coordinate of the node.\n   * @param  {number} y - y-coordinate of the node.\n   * @constructs CircleNode\n   */\n  constructor(x, y) {\n    super(x, y);\n    this.label = new Label(this.x + this.radius + 4, this.y, this);\n  }\n\n  /**\n   * Check if the node contains the given point.\n   * @param  {number} x - x-coordinate of the point.\n   * @param  {number} y - y-coordinate of the point.\n   * @return {boolean} - Whether or not the node contains the point.\n   * @override\n   */\n  containsPoint(x, y) {\n    return this.distanceToPoint(x, y) <= this.radius;\n  }\n\n  /**\n   * Find the distance from the node's coordinates to a given point.\n   * @param  {number} x - x-coordinate of the point.\n   * @param  {number} y - y-coordinate of the point.\n   * @returns {number} - The distance to the point.\n   * @override\n   */\n  distanceToPoint(x, y) {\n    let dx = x - this.x;\n    let dy = y - this.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  /**\n   * Find the point on the edge of the node in the direction of the given point.\n   * @param  {number} x - x-coordinate of the point.\n   * @param  {number} y - y-coordinate of the point.\n   * @returns {Object} - The edge point in the direction of the given point.\n   * @property {number} x - x-coordinate of the edge point.\n   * @property {number} y - y-coordinate of the edge point.\n   * @override\n   */\n  edgePointInDirection(x, y) {\n    if (x === this.x && y === this.y) {\n      throw new Error('Point is at origin of Node');\n    }\n    let dx = x - this.x;\n    let dy = y - this.y;\n    let distance = Math.sqrt(dx * dx + dy * dy);\n    return {\n      x: this.x + dx * this.radius / distance,\n      y: this.y + dy * this.radius / distance\n    };\n  }\n\n  /**\n   * Draw the node on the given canvas context.\n   * @param  {CanvasRenderingContext2D} context - Canvas 2D context.\n   * @override\n   */\n  draw(context) {\n    context.fillStyle = this.fillColor;\n    context.strokeStyle = this.isSelected ? this.selectedColor : this.color;\n    context.lineWidth = this.lineWidth;\n\n    // Create a new path\n    context.beginPath();\n\n    // Create an arc with center at (x, y)\n    context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n    // Draw to the canvas\n    context.fill();\n    context.stroke();\n\n    if (this.nodeLabel !== '') {\n      this.drawLabel(context);\n    }\n\n    if (this.isAcceptingState) {\n      this.drawAcceptingState(context);\n    }\n\n    if (this.isStartingState) {\n      this.drawStartingState(context);\n    }\n  }\n\n  /**\n   * Draw additional objects to display the node as an accepting state on the given canvas context.\n   * @param {CanvasRenderingContext2D} context - Canvas 2D context.\n   */\n  drawAcceptingState(context) {\n    context.fillStyle = this.fillColor;\n    context.strokeStyle = this.isSelected ? this.selectedColor : this.color;\n    context.moveTo(this.x + this.radius * 0.75, this.y);\n    context.arc(this.x, this.y, this.radius * 0.75, 0, 2 * Math.PI);\n    context.fill();\n    context.stroke();\n  }\n\n  /**\n   * Draw additional objects to display the node as a starting state on the given canvas context.\n   * @param {CanvasRenderingContext2D} context - Canvas 2D context.\n   */\n  drawStartingState(context) {\n    let endpoint = this.getAnglePoint(225);\n    context.fillStyle = this.isSelected ? this.selectedColor : this.color;\n    context.strokeStyle = this.isSelected ? this.selectedColor : this.color;\n    context.moveTo(endpoint.x - 30, endpoint.y - 30);\n    context.lineTo(endpoint.x, endpoint.y);\n    context.stroke();\n    context.beginPath();\n    context.moveTo(endpoint.x, endpoint.y);\n    context.lineTo(endpoint.x - 6 - 3, endpoint.y - 6 + 3);\n    context.lineTo(endpoint.x - 6, endpoint.y - 6);\n    context.lineTo(endpoint.x - 6 + 3, endpoint.y - 6 - 3);\n    context.closePath();\n    context.fill();\n  }\n\n  /**\n   * Get the point on the edge of the node at the given angle.\n   * @param  {number} angle - The angle (clockwise from +x axis).\n   * @returns {Object} - The edge point in the direction of the given angle.\n   * @property {number} x - x-coordinate of the edge point.\n   * @property {number} y - y-coordinate of the edge point.\n   * @override\n   */\n  getAnglePoint(angle) {\n    return {\n      x: this.x + this.radius * Math.cos(angle * Math.PI / 180),\n      y: this.y + this.radius * Math.sin(angle * Math.PI / 180)\n    };\n  }\n\n}\n\nexport { CircleNode };\nexport default CircleNode;\n"
  },
  {
    "__docId__": 151,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "CircleNode",
    "memberof": "src/js/data/node/circle-node.js",
    "longname": "src/js/data/node/circle-node.js~CircleNode",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/data/node/circle-node.js",
    "importStyle": "CircleNode",
    "description": "Node subclass for circle nodes.",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CircleNode"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/data/node/node.js~Node"
    ]
  },
  {
    "__docId__": 152,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/data/node/circle-node.js~CircleNode",
    "longname": "src/js/data/node/circle-node.js~CircleNode#constructor",
    "access": null,
    "description": "Constructs a CircleNode instance.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "CircleNode"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the node."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the node."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 153,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "label",
    "memberof": "src/js/data/node/circle-node.js~CircleNode",
    "longname": "src/js/data/node/circle-node.js~CircleNode#label",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "containsPoint",
    "memberof": "src/js/data/node/circle-node.js~CircleNode",
    "longname": "src/js/data/node/circle-node.js~CircleNode#containsPoint",
    "access": null,
    "description": "Check if the node contains the given point.",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the node contains the point."
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 155,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "distanceToPoint",
    "memberof": "src/js/data/node/circle-node.js~CircleNode",
    "longname": "src/js/data/node/circle-node.js~CircleNode#distanceToPoint",
    "access": null,
    "description": "Find the distance from the node's coordinates to a given point.",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} - The distance to the point."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The distance to the point."
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 156,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "edgePointInDirection",
    "memberof": "src/js/data/node/circle-node.js~CircleNode",
    "longname": "src/js/data/node/circle-node.js~CircleNode#edgePointInDirection",
    "access": null,
    "description": "Find the point on the edge of the node in the direction of the given point.",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} - The edge point in the direction of the given point."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the point."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the edge point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the edge point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The edge point in the direction of the given point."
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 157,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "draw",
    "memberof": "src/js/data/node/circle-node.js~CircleNode",
    "longname": "src/js/data/node/circle-node.js~CircleNode#draw",
    "access": null,
    "description": "Draw the node on the given canvas context.",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Canvas 2D context."
      }
    ],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 158,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "drawAcceptingState",
    "memberof": "src/js/data/node/circle-node.js~CircleNode",
    "longname": "src/js/data/node/circle-node.js~CircleNode#drawAcceptingState",
    "access": null,
    "description": "Draw additional objects to display the node as an accepting state on the given canvas context.",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Canvas 2D context."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 159,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "drawStartingState",
    "memberof": "src/js/data/node/circle-node.js~CircleNode",
    "longname": "src/js/data/node/circle-node.js~CircleNode#drawStartingState",
    "access": null,
    "description": "Draw additional objects to display the node as a starting state on the given canvas context.",
    "lineNumber": 118,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Canvas 2D context."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 160,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAnglePoint",
    "memberof": "src/js/data/node/circle-node.js~CircleNode",
    "longname": "src/js/data/node/circle-node.js~CircleNode#getAnglePoint",
    "access": null,
    "description": "Get the point on the edge of the node at the given angle.",
    "lineNumber": 142,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} - The edge point in the direction of the given angle."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "angle",
        "description": "The angle (clockwise from +x axis)."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the edge point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the edge point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The edge point in the direction of the given angle."
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 161,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/data/node/diamond-node.js",
    "memberof": null,
    "longname": "src/js/data/node/diamond-node.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import PolygonNode from './polygon-node';\n\n/**\n * Node subclass for diamond nodes.\n * @class DiamondNode\n */\nclass DiamondNode extends PolygonNode {\n\n  /**\n   * Constructs a DiamondNode instance.\n   * @param  {number} x - x-coordinate of the node.\n   * @param  {number} y - y-coordinate of the node.\n   * @constructs DiamondNode\n   */\n  constructor(x, y) {\n    super(x, y);\n    this.inscribed = [ 0, 90, 180, 270 ];\n    this.separation = 90;\n  }\n\n}\n\nexport { DiamondNode };\nexport default DiamondNode;\n"
  },
  {
    "__docId__": 162,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DiamondNode",
    "memberof": "src/js/data/node/diamond-node.js",
    "longname": "src/js/data/node/diamond-node.js~DiamondNode",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/data/node/diamond-node.js",
    "importStyle": "DiamondNode",
    "description": "Node subclass for diamond nodes.",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DiamondNode"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/data/node/polygon-node.js~PolygonNode"
    ]
  },
  {
    "__docId__": 163,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/data/node/diamond-node.js~DiamondNode",
    "longname": "src/js/data/node/diamond-node.js~DiamondNode#constructor",
    "access": null,
    "description": "Constructs a DiamondNode instance.",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "DiamondNode"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the node."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the node."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 164,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "inscribed",
    "memberof": "src/js/data/node/diamond-node.js~DiamondNode",
    "longname": "src/js/data/node/diamond-node.js~DiamondNode#inscribed",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "separation",
    "memberof": "src/js/data/node/diamond-node.js~DiamondNode",
    "longname": "src/js/data/node/diamond-node.js~DiamondNode#separation",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/data/node/hexagon-node.js",
    "memberof": null,
    "longname": "src/js/data/node/hexagon-node.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import PolygonNode from './polygon-node';\n\n/**\n * Node subclass for diamond nodes.\n * @class HexagonNode\n */\nclass HexagonNode extends PolygonNode {\n\n  /**\n   * Constructs a HexagonNode instance.\n   * @param  {number} x - x-coordinate of the node.\n   * @param  {number} y - y-coordinate of the node.\n   * @constructs HexagonNode\n   */\n  constructor(x, y) {\n    super(x, y);\n    this.inscribed = [ 0, 60, 120, 180, 240, 300 ];\n    this.separation = 60;\n  }\n\n}\n\nexport { HexagonNode };\nexport default HexagonNode;\n"
  },
  {
    "__docId__": 167,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "HexagonNode",
    "memberof": "src/js/data/node/hexagon-node.js",
    "longname": "src/js/data/node/hexagon-node.js~HexagonNode",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/data/node/hexagon-node.js",
    "importStyle": "HexagonNode",
    "description": "Node subclass for diamond nodes.",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "HexagonNode"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/data/node/polygon-node.js~PolygonNode"
    ]
  },
  {
    "__docId__": 168,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/data/node/hexagon-node.js~HexagonNode",
    "longname": "src/js/data/node/hexagon-node.js~HexagonNode#constructor",
    "access": null,
    "description": "Constructs a HexagonNode instance.",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "HexagonNode"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the node."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the node."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 169,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "inscribed",
    "memberof": "src/js/data/node/hexagon-node.js~HexagonNode",
    "longname": "src/js/data/node/hexagon-node.js~HexagonNode#inscribed",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "separation",
    "memberof": "src/js/data/node/hexagon-node.js~HexagonNode",
    "longname": "src/js/data/node/hexagon-node.js~HexagonNode#separation",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 171,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/data/node/node.js",
    "memberof": null,
    "longname": "src/js/data/node/node.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Data representation of a graph node.\n * @class Node\n */\nclass Node {\n\n  static numNodes = 0;\n  id = Node.numNodes++;\n\n  // graph data\n  x;\n  y;\n  edges = new Set();\n  isAcceptingState = false;  // boolean for DFA/NFA purposes, indicated by double circle\n  isStartingState = false;  // boolean for DFA/NFA purposes, idicated by incoming arrow\n\n  // status\n  isSelected = false;\n\n  // label\n  label;\n\n  // appearance\n  color = '#000000'; // string Format as hex Color\n  fillColor = '#FFFFFF'; // string Format as hex Color\n  selectedColor = '#FF0000';\n  lineWidth = 1; // numerical value for thickenss of line\n\n  /**\n   * Constructs a Node instance. Should not be called directly.\n   * @param  {number} x - x-coordinate of the node.\n   * @param  {number} y - y-coordinate of the node.\n   * @constructs Node\n   */\n  constructor(x, y) {\n    if (typeof x === 'undefined' || typeof y === 'undefined') {\n      throw Error(`Node constructor requires two arguments: x, y. Actually passed in: ${x}, ${y}`);\n    }\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Update the node position.\n   * @param {number} x - The new x-coordinate.\n   * @param {number} y - The new y-coordinate.\n   */\n  setPos(x, y) {\n    this.label.x += (x - this.x);\n    this.label.y += (y - this.y);\n    this.x = x;\n    this.y = y;\n    for (let edge of this.edges) {\n      edge.updateEndpoints();\n    }\n  }\n\n  /**\n   * Check if the node contains the given point.\n   * @param  {number} x - x-coordinate of the point.\n   * @param  {number} y - y-coordinate of the point.\n   * @throws {Error} - Throws error if called.\n   * @abstract\n   */\n  containsPoint(x, y) {\n    throw Error('Can\\'t call methods from abstract Node class.');\n  }\n\n  /**\n   * Find the distance from the node's coordinates to a given point.\n   * @param  {number} x - x-coordinate of the point.\n   * @param  {number} y - y-coordinate of the point.\n   * @throws {Error} - Throws error if called.\n   * @abstract\n   */\n  distanceToPoint(x, y) {\n    throw Error('Can\\'t call methods from abstract Node class.');\n  }\n\n  /**\n   * Find the point on the edge of the node in the direction of the given point.\n   * @param  {number} x - x-coordinate of the point.\n   * @param  {number} y - y-coordinate of the point.\n   * @throws {Error} - Throws error if called.\n   * @abstract\n   */\n  edgePointInDirection(x, y) {\n    throw Error('Can\\'t call methods from abstract Node class.');\n  }\n\n  /**\n   * Draw the node on the given canvas context.\n   * @param  {CanvasRenderingContext2D} context - Canvas 2D context.\n   * @throws {Error} - Throws error if called.\n   * @abstract\n   */\n  draw(context) {\n    throw Error('Can\\'t call methods from abstract Node class.');\n  }\n\n  /**\n   * Get the point on the edge of the node at the given angle.\n   * @param  {number} angle - The angle (clockwise from +x axis).\n   * @throws {Error} - Throws error if called.\n   * @abstract\n   */\n  getAnglePoint(angle) {\n    throw Error('Can\\'t call methods from abstract Node class.');\n  }\n\n  /**\n   * Draw the Label object associated with this node.\n   * @param  {CanvasRenderingContext2D} context - Canvas 2D context.\n   */\n  drawLabel(context) {\n    this.label.draw(context);\n  }\n\n}\n\nexport { Node };\nexport default Node;\n"
  },
  {
    "__docId__": 172,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Node",
    "memberof": "src/js/data/node/node.js",
    "longname": "src/js/data/node/node.js~Node",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/data/node/node.js",
    "importStyle": "Node",
    "description": "Data representation of a graph node.",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Node"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 173,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/data/node/node.js~Node",
    "longname": "src/js/data/node/node.js~Node#constructor",
    "access": null,
    "description": "Constructs a Node instance. Should not be called directly.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Node"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the node."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the node."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 174,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "x",
    "memberof": "src/js/data/node/node.js~Node",
    "longname": "src/js/data/node/node.js~Node#x",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "y",
    "memberof": "src/js/data/node/node.js~Node",
    "longname": "src/js/data/node/node.js~Node#y",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setPos",
    "memberof": "src/js/data/node/node.js~Node",
    "longname": "src/js/data/node/node.js~Node#setPos",
    "access": null,
    "description": "Update the node position.",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "The new x-coordinate."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "The new y-coordinate."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 177,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "x",
    "memberof": "src/js/data/node/node.js~Node",
    "longname": "src/js/data/node/node.js~Node#x",
    "access": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "y",
    "memberof": "src/js/data/node/node.js~Node",
    "longname": "src/js/data/node/node.js~Node#y",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 179,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "containsPoint",
    "memberof": "src/js/data/node/node.js~Node",
    "longname": "src/js/data/node/node.js~Node#containsPoint",
    "access": null,
    "description": "Check if the node contains the given point.",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the point."
      }
    ],
    "abstract": true,
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Throws error if called."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 180,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "distanceToPoint",
    "memberof": "src/js/data/node/node.js~Node",
    "longname": "src/js/data/node/node.js~Node#distanceToPoint",
    "access": null,
    "description": "Find the distance from the node's coordinates to a given point.",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the point."
      }
    ],
    "abstract": true,
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Throws error if called."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 181,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "edgePointInDirection",
    "memberof": "src/js/data/node/node.js~Node",
    "longname": "src/js/data/node/node.js~Node#edgePointInDirection",
    "access": null,
    "description": "Find the point on the edge of the node in the direction of the given point.",
    "lineNumber": 87,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the point."
      }
    ],
    "abstract": true,
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Throws error if called."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 182,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "draw",
    "memberof": "src/js/data/node/node.js~Node",
    "longname": "src/js/data/node/node.js~Node#draw",
    "access": null,
    "description": "Draw the node on the given canvas context.",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Canvas 2D context."
      }
    ],
    "abstract": true,
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Throws error if called."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 183,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAnglePoint",
    "memberof": "src/js/data/node/node.js~Node",
    "longname": "src/js/data/node/node.js~Node#getAnglePoint",
    "access": null,
    "description": "Get the point on the edge of the node at the given angle.",
    "lineNumber": 107,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "angle",
        "description": "The angle (clockwise from +x axis)."
      }
    ],
    "abstract": true,
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Throws error if called."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 184,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "drawLabel",
    "memberof": "src/js/data/node/node.js~Node",
    "longname": "src/js/data/node/node.js~Node#drawLabel",
    "access": null,
    "description": "Draw the Label object associated with this node.",
    "lineNumber": 115,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Canvas 2D context."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 185,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/data/node/octagon-node.js",
    "memberof": null,
    "longname": "src/js/data/node/octagon-node.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import PolygonNode from './polygon-node';\n\n/**\n * Node subclass for diamond nodes.\n * @class OctagonNode\n */\nclass OctagonNode extends PolygonNode {\n\n  /**\n   * Constructs a OctagonNode instance.\n   * @param  {number} x - x-coordinate of the node.\n   * @param  {number} y - y-coordinate of the node.\n   * @constructs OctagonNode\n   */\n  constructor(x, y) {\n    super(x, y);\n    this.inscribed = [ 22.5, 67.5, 112.5, 157.5, 202.5, 247.5, 292.5, 337.5 ];\n    this.separation = 45;\n  }\n\n}\n\nexport { OctagonNode };\nexport default OctagonNode;\n"
  },
  {
    "__docId__": 186,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "OctagonNode",
    "memberof": "src/js/data/node/octagon-node.js",
    "longname": "src/js/data/node/octagon-node.js~OctagonNode",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/data/node/octagon-node.js",
    "importStyle": "OctagonNode",
    "description": "Node subclass for diamond nodes.",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "OctagonNode"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/data/node/polygon-node.js~PolygonNode"
    ]
  },
  {
    "__docId__": 187,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/data/node/octagon-node.js~OctagonNode",
    "longname": "src/js/data/node/octagon-node.js~OctagonNode#constructor",
    "access": null,
    "description": "Constructs a OctagonNode instance.",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "OctagonNode"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the node."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the node."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 188,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "inscribed",
    "memberof": "src/js/data/node/octagon-node.js~OctagonNode",
    "longname": "src/js/data/node/octagon-node.js~OctagonNode#inscribed",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "separation",
    "memberof": "src/js/data/node/octagon-node.js~OctagonNode",
    "longname": "src/js/data/node/octagon-node.js~OctagonNode#separation",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/data/node/pentagon-node.js",
    "memberof": null,
    "longname": "src/js/data/node/pentagon-node.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import PolygonNode from './polygon-node';\n\n/**\n * Node subclass for diamond nodes.\n * @class PentagonNode\n */\nclass PentagonNode extends PolygonNode {\n\n  /**\n   * Constructs a PentagonNode instance.\n   * @param  {number} x - x-coordinate of the node.\n   * @param  {number} y - y-coordinate of the node.\n   * @constructs PentagonNode\n   */\n  constructor(x, y) {\n    super(x, y);\n    this.inscribed = [ 54, 126, 198, 270, 342 ];\n    this.separation = 72;\n  }\n\n}\n\nexport { PentagonNode };\nexport default PentagonNode;\n"
  },
  {
    "__docId__": 191,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PentagonNode",
    "memberof": "src/js/data/node/pentagon-node.js",
    "longname": "src/js/data/node/pentagon-node.js~PentagonNode",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/data/node/pentagon-node.js",
    "importStyle": "PentagonNode",
    "description": "Node subclass for diamond nodes.",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PentagonNode"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/data/node/polygon-node.js~PolygonNode"
    ]
  },
  {
    "__docId__": 192,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/data/node/pentagon-node.js~PentagonNode",
    "longname": "src/js/data/node/pentagon-node.js~PentagonNode#constructor",
    "access": null,
    "description": "Constructs a PentagonNode instance.",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "PentagonNode"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the node."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the node."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 193,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "inscribed",
    "memberof": "src/js/data/node/pentagon-node.js~PentagonNode",
    "longname": "src/js/data/node/pentagon-node.js~PentagonNode#inscribed",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 194,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "separation",
    "memberof": "src/js/data/node/pentagon-node.js~PentagonNode",
    "longname": "src/js/data/node/pentagon-node.js~PentagonNode#separation",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 195,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/data/node/polygon-node.js",
    "memberof": null,
    "longname": "src/js/data/node/polygon-node.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Node from './node';\r\nimport Label from '../label';\r\n\r\n/**\r\n * Node subclass for polygon nodes.\r\n * @class PolygonNode\r\n */\r\nclass PolygonNode extends Node {\r\n\r\n  radius = 30;\r\n\r\n  inscribed = [];\r\n  separation;\r\n\r\n  /**\r\n   * Constructs a PolygonNode instance. Should not be called directly.\r\n   * @param  {number} x - x-coordinate of the node.\r\n   * @param  {number} y - y-coordinate of the node.\r\n   * @constructs PolygonNode\r\n   */\r\n  constructor(x, y) {\r\n    super(x, y);\r\n    this.label = new Label(this.x + this.radius + 4, this.y, this);\r\n  }\r\n\r\n  /**\r\n   * Check if the node contains the given point.\r\n   * @param  {number} x - x-coordinate of the point.\r\n   * @param  {number} y - y-coordinate of the point.\r\n   * @return {boolean} - Whether or not the node contains the point.\r\n   * @override\r\n   */\r\n  containsPoint(x, y) {\r\n    return this.distanceToPoint(x, y) <= this.radius;\r\n  }\r\n\r\n  /**\r\n   * Find the distance from the node's coordinates to a given point.\r\n   * @param  {number} x - x-coordinate of the point.\r\n   * @param  {number} y - y-coordinate of the point.\r\n   * @returns {number} - The distance to the point.\r\n   * @override\r\n   */\r\n  distanceToPoint(x, y) {\r\n    let dx = x - this.x;\r\n    let dy = y - this.y;\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n  }\r\n\r\n  /**\r\n   * Find the point on the edge of the node in the direction of the given point.\r\n   * @param  {number} x - x-coordinate of the point.\r\n   * @param  {number} y - y-coordinate of the point.\r\n   * @returns {Object} - The edge point in the direction of the given point.\r\n   * @property {number} x - x-coordinate of the edge point.\r\n   * @property {number} y - y-coordinate of the edge point.\r\n   * @override\r\n   */\r\n  edgePointInDirection(x, y) {\r\n    if (x === this.x && y === this.y) {\r\n      throw new Error('Point is at origin of Node');\r\n    }\r\n    let dx = x - this.x;\r\n    let dy = y - this.y;\r\n    let distance = Math.sqrt(dx * dx + dy * dy);\r\n    return {\r\n      x: this.x + dx * this.radius / distance,\r\n      y: this.y + dy * this.radius / distance\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Draw the node on the given canvas context.\r\n   * @param  {CanvasRenderingContext2D} context - Canvas 2D context.\r\n   * @override\r\n   */\r\n  draw(context) {\r\n    // let xOffSet = 0;\r\n    // let yOffSet = 0;\r\n    context.fillStyle = this.fillColor;\r\n    context.strokeStyle = this.isSelected ? this.selectedColor : this.color;\r\n    context.lineWidth = this.lineWidth;\r\n\r\n    // Create a new path\r\n    context.beginPath();\r\n\r\n    // Create a square around (this.x, this.y)\r\n    context.moveTo(this.x + this.radius * Math.cos(this.inscribed[0] * Math.PI / 180),\r\n                   this.y + this.radius * Math.sin(this.inscribed[0] * Math.PI / 180));\r\n    // console.log(this.radius*Math.cos(this.inscribed[0]*Math.PI/180));\r\n    for (let i = 1; i < this.inscribed.length; i++) {\r\n      context.lineTo(this.x + this.radius * Math.cos(this.inscribed[i] * Math.PI / 180),\r\n                     this.y + this.radius * Math.sin(this.inscribed[i] * Math.PI / 180));\r\n    }\r\n    context.closePath();\r\n\r\n    // Draw to the canvas\r\n    context.fill();\r\n    context.stroke();\r\n\r\n\r\n    if (this.nodeLabel !== '') {\r\n      this.drawLabel(context);\r\n    }\r\n\r\n    if (this.isAcceptingState) {\r\n      this.drawAcceptingState(context);\r\n    }\r\n\r\n    if (this.isStartingState) {\r\n      this.drawStartingState(context);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Draw additional objects to display the node as an accepting state on the given canvas context.\r\n   * @param {CanvasRenderingContext2D} context - Canvas 2D context.\r\n   */\r\n  drawAcceptingState(context) {\r\n    context.fillStyle = this.fillColor;\r\n    context.strokeStyle = this.isSelected ? this.selectedColor : this.color;\r\n    context.beginPath();\r\n    context.moveTo(this.x + 0.75 * this.radius * Math.cos(this.inscribed[0] * Math.PI / 180),\r\n                   this.y + 0.75 * this.radius * Math.sin(this.inscribed[0] * Math.PI / 180));\r\n    for (let j = 1; j < this.inscribed.length; j++) {\r\n      context.lineTo(this.x + 0.75 * this.radius * Math.cos(this.inscribed[j] * Math.PI / 180),\r\n                     this.y + 0.75 * this.radius * Math.sin(this.inscribed[j] * Math.PI / 180));\r\n    }\r\n    context.closePath();\r\n    context.fill();\r\n    context.stroke();\r\n  }\r\n\r\n  /**\r\n   * Draw additional objects to display the node as a starting state on the given canvas context.\r\n   * @param {CanvasRenderingContext2D} context - Canvas 2D context.\r\n   */\r\n  drawStartingState(context) {\r\n    let endpoint = this.getAnglePoint(225);\r\n    context.fillStyle = this.isSelected ? this.selectedColor : this.color;\r\n    context.strokeStyle = this.isSelected ? this.selectedColor : this.color;\r\n    context.moveTo(endpoint.x - 30, endpoint.y - 30);\r\n    context.lineTo(endpoint.x, endpoint.y);\r\n    context.stroke();\r\n    context.beginPath();\r\n    context.moveTo(endpoint.x, endpoint.y);\r\n    context.lineTo(endpoint.x - 6 - 3, endpoint.y - 6 + 3);\r\n    context.lineTo(endpoint.x - 6, endpoint.y - 6);\r\n    context.lineTo(endpoint.x - 6 + 3, endpoint.y - 6 - 3);\r\n    context.closePath();\r\n    context.fill();\r\n  }\r\n\r\n  /**\r\n   * Get the point on the edge of the node at the given angle.\r\n   * @param  {number} arbangle - The angle (clockwise from +x axis).\r\n   * @returns {Object} - The edge point in the direction of the given angle.\r\n   * @property {number} x - x-coordinate of the edge point.\r\n   * @property {number} y - y-coordinate of the edge point.\r\n   * @override\r\n   */\r\n  getAnglePoint(arbangle) {\r\n    let frac;\r\n    let directionX;\r\n    let directionY;\r\n    let angle = (arbangle + 360) % 360;\r\n    for (let i = 0; i < this.inscribed.length - 1; i++) {\r\n      if (angle >= this.inscribed[i] && angle <= this.inscribed[i + 1]) {\r\n        directionX = this.radius * Math.cos(this.inscribed[i + 1] * Math.PI / 180) -\r\n                     this.radius * Math.cos(this.inscribed[i] * Math.PI / 180);\r\n        directionY = this.radius * Math.sin(this.inscribed[i + 1] * Math.PI / 180) -\r\n                     this.radius * Math.sin(this.inscribed[i] * Math.PI / 180);\r\n        frac = (angle - this.inscribed[i]) / this.separation;\r\n        return {\r\n          x: this.x + this.radius * Math.cos(this.inscribed[i] * Math.PI / 180) + directionX * frac,\r\n          y: this.y + this.radius * Math.sin(this.inscribed[i] * Math.PI / 180) + directionY * frac\r\n        };\r\n      }\r\n    }\r\n    if (angle > this.inscribed[this.inscribed.length - 1]) {\r\n      frac = (angle - this.inscribed[this.inscribed.length - 1]) / this.separation;\r\n    } else {\r\n      frac = (360 - this.inscribed[this.inscribed.length - 1] + angle) / this.separation;\r\n    }\r\n    directionX = this.radius * Math.cos(this.inscribed[0] * Math.PI / 180) -\r\n                 this.radius * Math.cos(this.inscribed[this.inscribed.length - 1] * Math.PI / 180);\r\n    directionY = this.radius * Math.sin(this.inscribed[0] * Math.PI / 180) -\r\n                 this.radius * Math.sin(this.inscribed[this.inscribed.length - 1] * Math.PI / 180);\r\n    return {\r\n      x: this.x + this.radius * Math.cos(this.inscribed[this.inscribed.length - 1] * Math.PI / 180) + directionX * frac,\r\n      y: this.y + this.radius * Math.sin(this.inscribed[this.inscribed.length - 1] * Math.PI / 180) + directionY * frac\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport { PolygonNode };\r\nexport default PolygonNode;\r\n"
  },
  {
    "__docId__": 196,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PolygonNode",
    "memberof": "src/js/data/node/polygon-node.js",
    "longname": "src/js/data/node/polygon-node.js~PolygonNode",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/data/node/polygon-node.js",
    "importStyle": "PolygonNode",
    "description": "Node subclass for polygon nodes.",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PolygonNode"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/data/node/node.js~Node"
    ]
  },
  {
    "__docId__": 197,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/data/node/polygon-node.js~PolygonNode",
    "longname": "src/js/data/node/polygon-node.js~PolygonNode#constructor",
    "access": null,
    "description": "Constructs a PolygonNode instance. Should not be called directly.",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "PolygonNode"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the node."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the node."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 198,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "label",
    "memberof": "src/js/data/node/polygon-node.js~PolygonNode",
    "longname": "src/js/data/node/polygon-node.js~PolygonNode#label",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "containsPoint",
    "memberof": "src/js/data/node/polygon-node.js~PolygonNode",
    "longname": "src/js/data/node/polygon-node.js~PolygonNode#containsPoint",
    "access": null,
    "description": "Check if the node contains the given point.",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the node contains the point."
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 200,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "distanceToPoint",
    "memberof": "src/js/data/node/polygon-node.js~PolygonNode",
    "longname": "src/js/data/node/polygon-node.js~PolygonNode#distanceToPoint",
    "access": null,
    "description": "Find the distance from the node's coordinates to a given point.",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} - The distance to the point."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The distance to the point."
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 201,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "edgePointInDirection",
    "memberof": "src/js/data/node/polygon-node.js~PolygonNode",
    "longname": "src/js/data/node/polygon-node.js~PolygonNode#edgePointInDirection",
    "access": null,
    "description": "Find the point on the edge of the node in the direction of the given point.",
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} - The edge point in the direction of the given point."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the point."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the edge point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the edge point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The edge point in the direction of the given point."
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 202,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "draw",
    "memberof": "src/js/data/node/polygon-node.js~PolygonNode",
    "longname": "src/js/data/node/polygon-node.js~PolygonNode#draw",
    "access": null,
    "description": "Draw the node on the given canvas context.",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Canvas 2D context."
      }
    ],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 203,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "drawAcceptingState",
    "memberof": "src/js/data/node/polygon-node.js~PolygonNode",
    "longname": "src/js/data/node/polygon-node.js~PolygonNode#drawAcceptingState",
    "access": null,
    "description": "Draw additional objects to display the node as an accepting state on the given canvas context.",
    "lineNumber": 119,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Canvas 2D context."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 204,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "drawStartingState",
    "memberof": "src/js/data/node/polygon-node.js~PolygonNode",
    "longname": "src/js/data/node/polygon-node.js~PolygonNode#drawStartingState",
    "access": null,
    "description": "Draw additional objects to display the node as a starting state on the given canvas context.",
    "lineNumber": 138,
    "params": [
      {
        "nullable": null,
        "types": [
          "CanvasRenderingContext2D"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Canvas 2D context."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 205,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAnglePoint",
    "memberof": "src/js/data/node/polygon-node.js~PolygonNode",
    "longname": "src/js/data/node/polygon-node.js~PolygonNode#getAnglePoint",
    "access": null,
    "description": "Get the point on the edge of the node at the given angle.",
    "lineNumber": 162,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} - The edge point in the direction of the given angle."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "arbangle",
        "description": "The angle (clockwise from +x axis)."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the edge point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the edge point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The edge point in the direction of the given angle."
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 206,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/data/node/square-node.js",
    "memberof": null,
    "longname": "src/js/data/node/square-node.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import PolygonNode from './polygon-node';\n\n/**\n * Node subclass for diamond nodes.\n * @class SquareNode\n */\nclass SquareNode extends PolygonNode {\n\n  /**\n   * Constructs a SquareNode instance.\n   * @param  {number} x - x-coordinate of the node.\n   * @param  {number} y - y-coordinate of the node.\n   * @constructs SquareNode\n   */\n  constructor(x, y) {\n    super(x, y);\n    this.inscribed = [ 45, 135, 225, 315 ];\n    this.separation = 90;\n  }\n\n}\n\nexport { SquareNode };\nexport default SquareNode;\n"
  },
  {
    "__docId__": 207,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SquareNode",
    "memberof": "src/js/data/node/square-node.js",
    "longname": "src/js/data/node/square-node.js~SquareNode",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/data/node/square-node.js",
    "importStyle": "SquareNode",
    "description": "Node subclass for diamond nodes.",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SquareNode"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/data/node/polygon-node.js~PolygonNode"
    ]
  },
  {
    "__docId__": 208,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/data/node/square-node.js~SquareNode",
    "longname": "src/js/data/node/square-node.js~SquareNode#constructor",
    "access": null,
    "description": "Constructs a SquareNode instance.",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "SquareNode"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the node."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the node."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 209,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "inscribed",
    "memberof": "src/js/data/node/square-node.js~SquareNode",
    "longname": "src/js/data/node/square-node.js~SquareNode#inscribed",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 210,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "separation",
    "memberof": "src/js/data/node/square-node.js~SquareNode",
    "longname": "src/js/data/node/square-node.js~SquareNode#separation",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 211,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/data/node/triangle-node.js",
    "memberof": null,
    "longname": "src/js/data/node/triangle-node.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import PolygonNode from './polygon-node';\n\n/**\n * Node subclass for diamond nodes.\n * @class TriangleNode\n */\nclass TriangleNode extends PolygonNode {\n\n  /**\n   * Constructs a TriangleNode instance.\n   * @param  {number} x - x-coordinate of the node.\n   * @param  {number} y - y-coordinate of the node.\n   * @constructs TriangleNode\n   */\n  constructor(x, y) {\n    super(x, y);\n    this.inscribed = [ 30, 150, 270 ];\n    this.separation = 120;\n  }\n\n}\n\nexport { TriangleNode };\nexport default TriangleNode;\n"
  },
  {
    "__docId__": 212,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TriangleNode",
    "memberof": "src/js/data/node/triangle-node.js",
    "longname": "src/js/data/node/triangle-node.js~TriangleNode",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/data/node/triangle-node.js",
    "importStyle": "TriangleNode",
    "description": "Node subclass for diamond nodes.",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TriangleNode"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/data/node/polygon-node.js~PolygonNode"
    ]
  },
  {
    "__docId__": 213,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/data/node/triangle-node.js~TriangleNode",
    "longname": "src/js/data/node/triangle-node.js~TriangleNode#constructor",
    "access": null,
    "description": "Constructs a TriangleNode instance.",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "TriangleNode"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the node."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the node."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 214,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "inscribed",
    "memberof": "src/js/data/node/triangle-node.js~TriangleNode",
    "longname": "src/js/data/node/triangle-node.js~TriangleNode#inscribed",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 215,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "separation",
    "memberof": "src/js/data/node/triangle-node.js~TriangleNode",
    "longname": "src/js/data/node/triangle-node.js~TriangleNode#separation",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 216,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/tool/algorithm-tool.js",
    "memberof": null,
    "longname": "src/js/tool/algorithm-tool.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Tool from '../tool/tool';\r\nimport Node from '../data/node/node';\r\nimport Edge from '../data/edge/edge';\r\nimport TraversalAlgorithm from '../algorithm/traversal-algorithm';\r\nimport ui from '../ui/ui';\r\n\r\n/**\r\n * Tool for running algorithms.\r\n * @class AlgorithmTool\r\n */\r\nclass AlgorithmTool extends Tool {\r\n\r\n  sidebarType = 'algorithm';\r\n\r\n  currentMode = 'traversal';\r\n  static modes = {\r\n    traversal: TraversalAlgorithm\r\n  };\r\n\r\n  optionMap = {\r\n    traversal: {\r\n      label: 'Traversal'\r\n    }\r\n  };\r\n\r\n  optionContent = {\r\n    html: '<span class=\"content\"></span>',\r\n    init: (optionElement, mode) => {\r\n      let content = optionElement.querySelector('.content');\r\n      content.textContent = this.optionMap[mode].label;\r\n    }\r\n  };\r\n\r\n  currentInput = null;\r\n\r\n  /**\r\n   * Get the mode inputs from the current algorithm.\r\n   * @return {Object.<string,*>} - Object containing stored input values.\r\n   */\r\n  get modeInputs() {\r\n    return ui.sidebar.content.curAlgorithm.inputs;\r\n  }\r\n\r\n  /**\r\n   * Get the mode input types from the current algorithm.\r\n   * @return {Array.<InputType>} - Array of input definitions.\r\n   */\r\n  get modeInputTypes() {\r\n    return ui.sidebar.content.curAlgorithm.inputTypes;\r\n  }\r\n\r\n  /**\r\n   * Returns a boolean indicating whether or not the mode-specific inputs should be submitted together.\r\n   * @return {boolean} - Whether or not the mode-specific inputs should be submitted together.\r\n   */\r\n  submitModeInputs() {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Returns a string that will be displayed on the submit button if submitModeInputs() returns true;\r\n   * @return {string} - Text to display on submit button for mode-specific inputs.\r\n   */\r\n  submitModeInputsText() {\r\n    return 'Generate results';\r\n  }\r\n\r\n  /**\r\n   * Callback function that is called after submitting mode-specific inputs.\r\n   */\r\n  submitModeInputsCallback() {\r\n    ui.sidebar.content.run();\r\n  }\r\n\r\n  /**\r\n   * Called when switching to a different tool to cancel any incomplete actions. Cancel any active input selection.\r\n   * @override\r\n   */\r\n  cancel() {\r\n    this.currentInput = null;\r\n  }\r\n\r\n  /**\r\n   * Called when the mode is changed. Set the algorithm in the sidebar to a new instance of the current algorithm.\r\n   * @param  {string} mode - Mode name.\r\n   * @override\r\n   */\r\n  changeMode(mode) {\r\n    this.currentMode = mode;\r\n    ui.sidebar.content.setAlgorithm(AlgorithmTool.modes[mode]);\r\n  }\r\n\r\n  /**\r\n   * Handler for object selection. Used to select graph objects for algorithm inputs.\r\n   * @param  {Event} event - Event object from event listener.\r\n   * @param  {Graph} graph - The current graph object.\r\n   * @param  {(Node|Edge|Label)} obj - Selected graph component.\r\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\r\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\r\n   * @override\r\n   */\r\n  selectObject(event, graph, obj, x, y) {\r\n    if (obj instanceof Node || obj instanceof Edge) {\r\n      let inputType = this.modeInputTypes.filter((field) => field.name === this.currentInput.name);\r\n      ui.topBar.updateGraphInput(this.currentInput, obj, !inputType[0].test(obj));\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { AlgorithmTool };\r\nexport default AlgorithmTool;\r\n"
  },
  {
    "__docId__": 217,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AlgorithmTool",
    "memberof": "src/js/tool/algorithm-tool.js",
    "longname": "src/js/tool/algorithm-tool.js~AlgorithmTool",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/tool/algorithm-tool.js",
    "importStyle": "AlgorithmTool",
    "description": "Tool for running algorithms.",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "AlgorithmTool"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/tool/tool.js~Tool"
    ]
  },
  {
    "__docId__": 218,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "modeInputs",
    "memberof": "src/js/tool/algorithm-tool.js~AlgorithmTool",
    "longname": "src/js/tool/algorithm-tool.js~AlgorithmTool#modeInputs",
    "access": null,
    "description": "Get the mode inputs from the current algorithm.",
    "lineNumber": 40,
    "return": {
      "nullable": null,
      "types": [
        "Object.<string,*>"
      ],
      "spread": false,
      "description": "Object containing stored input values."
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 219,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "modeInputTypes",
    "memberof": "src/js/tool/algorithm-tool.js~AlgorithmTool",
    "longname": "src/js/tool/algorithm-tool.js~AlgorithmTool#modeInputTypes",
    "access": null,
    "description": "Get the mode input types from the current algorithm.",
    "lineNumber": 48,
    "return": {
      "nullable": null,
      "types": [
        "Array.<InputType>"
      ],
      "spread": false,
      "description": "Array of input definitions."
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 220,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "submitModeInputs",
    "memberof": "src/js/tool/algorithm-tool.js~AlgorithmTool",
    "longname": "src/js/tool/algorithm-tool.js~AlgorithmTool#submitModeInputs",
    "access": null,
    "description": "Returns a boolean indicating whether or not the mode-specific inputs should be submitted together.",
    "lineNumber": 56,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the mode-specific inputs should be submitted together."
    },
    "generator": false
  },
  {
    "__docId__": 221,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "submitModeInputsText",
    "memberof": "src/js/tool/algorithm-tool.js~AlgorithmTool",
    "longname": "src/js/tool/algorithm-tool.js~AlgorithmTool#submitModeInputsText",
    "access": null,
    "description": "Returns a string that will be displayed on the submit button if submitModeInputs() returns true;",
    "lineNumber": 64,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Text to display on submit button for mode-specific inputs."
    },
    "generator": false
  },
  {
    "__docId__": 222,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "submitModeInputsCallback",
    "memberof": "src/js/tool/algorithm-tool.js~AlgorithmTool",
    "longname": "src/js/tool/algorithm-tool.js~AlgorithmTool#submitModeInputsCallback",
    "access": null,
    "description": "Callback function that is called after submitting mode-specific inputs.",
    "lineNumber": 71,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 223,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "cancel",
    "memberof": "src/js/tool/algorithm-tool.js~AlgorithmTool",
    "longname": "src/js/tool/algorithm-tool.js~AlgorithmTool#cancel",
    "access": null,
    "description": "Called when switching to a different tool to cancel any incomplete actions. Cancel any active input selection.",
    "lineNumber": 79,
    "params": [],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 224,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "currentInput",
    "memberof": "src/js/tool/algorithm-tool.js~AlgorithmTool",
    "longname": "src/js/tool/algorithm-tool.js~AlgorithmTool#currentInput",
    "access": null,
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 225,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "changeMode",
    "memberof": "src/js/tool/algorithm-tool.js~AlgorithmTool",
    "longname": "src/js/tool/algorithm-tool.js~AlgorithmTool#changeMode",
    "access": null,
    "description": "Called when the mode is changed. Set the algorithm in the sidebar to a new instance of the current algorithm.",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": "Mode name."
      }
    ],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 226,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "currentMode",
    "memberof": "src/js/tool/algorithm-tool.js~AlgorithmTool",
    "longname": "src/js/tool/algorithm-tool.js~AlgorithmTool#currentMode",
    "access": null,
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 227,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectObject",
    "memberof": "src/js/tool/algorithm-tool.js~AlgorithmTool",
    "longname": "src/js/tool/algorithm-tool.js~AlgorithmTool#selectObject",
    "access": null,
    "description": "Handler for object selection. Used to select graph objects for algorithm inputs.",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Selected graph component."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 228,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/tool/edge-tool.js",
    "memberof": null,
    "longname": "src/js/tool/edge-tool.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Tool from '../tool/tool';\nimport Node from '../data/node/node';\nimport SolidEdge from '../data/edge/solid-edge';\nimport DashedEdge from '../data/edge/dashed-edge';\nimport CircleNode from '../data/node/circle-node';\n\n/**\n * Tool for adding edges to the graph.\n * @class EdgeTool\n */\nclass EdgeTool extends Tool {\n\n  currentMode = 'solid';\n  static modes = {\n    solid: SolidEdge,\n    dashed: DashedEdge\n  };\n\n  optionMap = {\n    solid: {\n      label: 'Solid'\n    },\n    dashed: {\n      label: 'Dashed'\n    }\n  };\n\n  optionContent = {\n    html: '<canvas class=\"canvas-preview\" width=\"50\" height=\"50\"></canvas>',\n    init: (optionElement, mode) => {\n      let canvas = optionElement.querySelector('canvas');\n      let context = canvas.getContext('2d');\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      let node1 = new CircleNode(12.5, 37.5);\n      let node2 = new CircleNode(37.5, 12.5);\n      let edge = new EdgeTool.modes[mode](node1, node2);\n      for (let field of Object.keys(this.inputs)) {\n        edge[field] = this.inputs[field];\n      }\n      edge.draw(context);\n    }\n  };\n\n  inputs = {\n    isDirected: false,\n    color: '#000000',\n    lineWidth: 1\n  };\n\n  inputTypes = [\n    {\n      type: 'boolean',\n      name: 'isDirected',\n      displayName: 'Directed'\n    },\n    {\n      type: 'color',\n      name: 'color',\n      displayName: 'Color'\n    },\n    {\n      type: 'number',\n      name: 'lineWidth',\n      displayName: 'Width'\n    }\n  ];\n\n  start = null;\n  dest = null;\n\n  /**\n   * Cancel any\n   * @override\n   */\n  cancel() {\n    this.deselect();\n  }\n\n  /**\n   * Deselect the selected node (if any).\n   */\n  deselect() {\n    if (this.start) {\n      this.start.isSelected = false;\n    }\n    this.start = null;\n    this.dest = null;\n  }\n\n  /**\n   * Called when a node is selected. Determines whether an edge should be added or not.\n   * @param  {Graph} graph - The current Graph object.\n   * @param  {Node} node - The selected node.\n   */\n  selectNode(graph, node) {\n    let EdgeClass = EdgeTool.modes[this.currentMode];\n    if (this.start === null) {\n      this.start = node;\n      this.start.isSelected = true;\n    } else {\n      this.dest = node;\n      if (this.start.id === this.dest.id) {\n        // check for existing self-loop\n        for (let edge of this.start.edges) {\n          if (edge.startNode.id === edge.destNode.id) {\n            this.dest = null;\n            return;\n          }\n        }\n      }\n      let edge = new EdgeClass(this.start, this.dest);\n      for (let field of Object.keys(this.inputs)) {\n        if (field === 'isDirected' && this.start === this.dest) {\n          continue;\n        }\n        edge[field] = this.inputs[field];\n      }\n      graph.addEdge(edge);\n      this.start.isSelected = false;\n      this.start = null;\n      this.dest = null;\n    }\n  }\n\n  /**\n   * Handler for object selection. For this tool, only nodes can be selected. When a second node is selected, an edge is created and the tool state is reset.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {(Node|Edge|Label)} obj - Selected graph component.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   * @override\n   */\n  selectObject(event, graph, obj, x, y) {\n    if (obj instanceof Node) {\n      this.selectNode(graph, obj);\n    }\n  }\n\n  /**\n   * Handler for clicking empty space. Deselect any selected nodes.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   * @override\n   */\n  selectNone(event, graph, x, y) {\n    this.deselect();\n  }\n\n}\n\nexport { EdgeTool };\nexport default EdgeTool;\n"
  },
  {
    "__docId__": 229,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "EdgeTool",
    "memberof": "src/js/tool/edge-tool.js",
    "longname": "src/js/tool/edge-tool.js~EdgeTool",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/tool/edge-tool.js",
    "importStyle": "EdgeTool",
    "description": "Tool for adding edges to the graph.",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "EdgeTool"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/tool/tool.js~Tool"
    ]
  },
  {
    "__docId__": 230,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "cancel",
    "memberof": "src/js/tool/edge-tool.js~EdgeTool",
    "longname": "src/js/tool/edge-tool.js~EdgeTool#cancel",
    "access": null,
    "description": "Cancel any",
    "lineNumber": 75,
    "params": [],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 231,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "deselect",
    "memberof": "src/js/tool/edge-tool.js~EdgeTool",
    "longname": "src/js/tool/edge-tool.js~EdgeTool#deselect",
    "access": null,
    "description": "Deselect the selected node (if any).",
    "lineNumber": 82,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 232,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "start",
    "memberof": "src/js/tool/edge-tool.js~EdgeTool",
    "longname": "src/js/tool/edge-tool.js~EdgeTool#start",
    "access": null,
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 233,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "dest",
    "memberof": "src/js/tool/edge-tool.js~EdgeTool",
    "longname": "src/js/tool/edge-tool.js~EdgeTool#dest",
    "access": null,
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 234,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectNode",
    "memberof": "src/js/tool/edge-tool.js~EdgeTool",
    "longname": "src/js/tool/edge-tool.js~EdgeTool#selectNode",
    "access": null,
    "description": "Called when a node is selected. Determines whether an edge should be added or not.",
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current Graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "The selected node."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 235,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "start",
    "memberof": "src/js/tool/edge-tool.js~EdgeTool",
    "longname": "src/js/tool/edge-tool.js~EdgeTool#start",
    "access": null,
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 236,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "dest",
    "memberof": "src/js/tool/edge-tool.js~EdgeTool",
    "longname": "src/js/tool/edge-tool.js~EdgeTool#dest",
    "access": null,
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 237,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "dest",
    "memberof": "src/js/tool/edge-tool.js~EdgeTool",
    "longname": "src/js/tool/edge-tool.js~EdgeTool#dest",
    "access": null,
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 238,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "start",
    "memberof": "src/js/tool/edge-tool.js~EdgeTool",
    "longname": "src/js/tool/edge-tool.js~EdgeTool#start",
    "access": null,
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 239,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "dest",
    "memberof": "src/js/tool/edge-tool.js~EdgeTool",
    "longname": "src/js/tool/edge-tool.js~EdgeTool#dest",
    "access": null,
    "description": null,
    "lineNumber": 121,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 240,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectObject",
    "memberof": "src/js/tool/edge-tool.js~EdgeTool",
    "longname": "src/js/tool/edge-tool.js~EdgeTool#selectObject",
    "access": null,
    "description": "Handler for object selection. For this tool, only nodes can be selected. When a second node is selected, an edge is created and the tool state is reset.",
    "lineNumber": 134,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Selected graph component."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 241,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectNone",
    "memberof": "src/js/tool/edge-tool.js~EdgeTool",
    "longname": "src/js/tool/edge-tool.js~EdgeTool#selectNone",
    "access": null,
    "description": "Handler for clicking empty space. Deselect any selected nodes.",
    "lineNumber": 148,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 242,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/tool/erase-tool.js",
    "memberof": null,
    "longname": "src/js/tool/erase-tool.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Tool } from '../tool/tool';\nimport { Node } from '../data/node/node';\nimport { Edge } from '../data/edge/edge';\n\n/**\n * Eraser Tool for removing nodes and edges from the graph using the mouse pointer.\n * @class EraseTool\n */\nclass EraseTool extends Tool {\n\n   /**\n   * Commits to object selection when called by mouse handler\n   * @param {Object} event mouse event\n   * @param {Object} graph the current graph object\n   * @param {Object} obj the selectable object\n   * @param {number} x the mouse cursor's x position\n   * @param {number} y the mouse cursor's y position\n   * @returns {bool} true this tool needs selection data\n   */\n  preSelectObject(event, graph, obj, x, y) {\n    return true;\n  }\n\n   /**\n   * Refuses to commit to object drag when called by mouse handler\n   * @param {Object} event mouse event\n   * @param {Object} graph the current graph object\n   * @param {Object} srcObj the selectable object\n   * @param {number} x the mouse cursor's x position\n   * @param {number} y the mouse cursor's y position\n   * @returns {bool} false this tool does not need drag data\n   */\n  preDragObject(event, graph, srcObj, x, y) {\n    return false;\n  }\n\n   /**\n   * Deletes the selected object\n   * @param {Object} event mouse event\n   * @param {Object} graph the current graph object\n   * @param {Object} obj the object to delete\n   * @param {number} x the mouse cursor's x position\n   * @param {number} y the mouse cursor's y position\n   */\n  selectObject(event, graph, obj, x, y) {\n    if (obj instanceof Node) {\n      graph.removeNode(obj);\n    } else if (obj instanceof Edge) {\n      graph.removeEdge(obj);\n    }\n  }\n\n   /**\n   * Deletes the dragged-over object\n   * @param {Object} event mouse event\n   * @param {Object} graph the current graph object\n   * @param {Object} obj the object to delete\n   * @param {number} x the mouse cursor's x position\n   * @param {number} y the mouse cursor's y position\n   */\n  dragOverObject(event, graph, obj, x, y) {\n    if (obj instanceof Node) {\n      graph.removeNode(obj);\n    } else if (obj instanceof Edge) {\n      graph.removeEdge(obj);\n    }\n  }\n\n}\n\nexport { EraseTool };\nexport default EraseTool;\n"
  },
  {
    "__docId__": 243,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "EraseTool",
    "memberof": "src/js/tool/erase-tool.js",
    "longname": "src/js/tool/erase-tool.js~EraseTool",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/tool/erase-tool.js",
    "importStyle": "EraseTool",
    "description": "Eraser Tool for removing nodes and edges from the graph using the mouse pointer.",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "EraseTool"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/tool/tool.js~Tool"
    ]
  },
  {
    "__docId__": 244,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "preSelectObject",
    "memberof": "src/js/tool/erase-tool.js~EraseTool",
    "longname": "src/js/tool/erase-tool.js~EraseTool#preSelectObject",
    "access": null,
    "description": "Commits to object selection when called by mouse handler",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{bool} true this tool needs selection data"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "mouse event"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "the current graph object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "the selectable object"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "the mouse cursor's x position"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "the mouse cursor's y position"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "bool"
      ],
      "spread": false,
      "description": "true this tool needs selection data"
    },
    "generator": false
  },
  {
    "__docId__": 245,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "preDragObject",
    "memberof": "src/js/tool/erase-tool.js~EraseTool",
    "longname": "src/js/tool/erase-tool.js~EraseTool#preDragObject",
    "access": null,
    "description": "Refuses to commit to object drag when called by mouse handler",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{bool} false this tool does not need drag data"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "mouse event"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "the current graph object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "srcObj",
        "description": "the selectable object"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "the mouse cursor's x position"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "the mouse cursor's y position"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "bool"
      ],
      "spread": false,
      "description": "false this tool does not need drag data"
    },
    "generator": false
  },
  {
    "__docId__": 246,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectObject",
    "memberof": "src/js/tool/erase-tool.js~EraseTool",
    "longname": "src/js/tool/erase-tool.js~EraseTool#selectObject",
    "access": null,
    "description": "Deletes the selected object",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "mouse event"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "the current graph object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "the object to delete"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "the mouse cursor's x position"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "the mouse cursor's y position"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 247,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dragOverObject",
    "memberof": "src/js/tool/erase-tool.js~EraseTool",
    "longname": "src/js/tool/erase-tool.js~EraseTool#dragOverObject",
    "access": null,
    "description": "Deletes the dragged-over object",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "mouse event"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "the current graph object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "the object to delete"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "the mouse cursor's x position"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "the mouse cursor's y position"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 248,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/tool/move-tool.js",
    "memberof": null,
    "longname": "src/js/tool/move-tool.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Tool from '../tool/tool';\nimport Node from '../data/node/node';\nimport Label from '../data/label';\n\n/**\n * Tool for moving graph objects. No longer used directly.\n * @class MoveTool\n */\nclass MoveTool extends Tool {\n\n  objStartX;\n  objStartY;\n  startX;\n  startY;\n\n  /**\n   * Returns a boolean indicating whether or not the tool should be able to handle dragging. Stores the dragged object location and mouse location.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {(Node|Edge|Label)} srcObj - Dragged graph component.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   * @return {boolean} - Whether or not the tool should handle dragging.\n   * @override\n   */\n  preDragObject(event, graph, srcObj, x, y) {\n    this.startX = x;\n    this.startY = y;\n    this.objStartX = srcObj.x;\n    this.objStartY = srcObj.y;\n    return true;\n  }\n\n  /**\n   * Handler for object dragging. Updates the object's position to the mouse's current position.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {(Node|Edge|Label)} obj - Dragged graph component.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   * @override\n   */\n  dragObject(event, graph, obj, x, y) {\n    if (obj instanceof Node || obj instanceof Label) {\n      obj.setPos(x - (this.startX - this.objStartX), y - (this.startY - this.objStartY));\n    }\n  }\n\n  /**\n   * Handler for object dropping on another object. Attempts to drop the dragged object on the object at the mouse's position. If the drop is not allowed, the dragged object is reset to its original position.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {(Node|Edge|Label)} droppedObj - Dropped graph component.\n   * @param  {(Node|Edge|Label)} destObj - Graph component that the object was dropped onto.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   * @override\n   */\n  dropOnObject(event, graph, droppedObj, destObj, x, y) {\n    if (droppedObj instanceof Node && destObj instanceof Node) {\n      // stop dragging, and reset to starting position\n      this.resetObjectPosition(droppedObj);\n    } else {\n      this.dropOnNone(event, graph, droppedObj, x, y);\n    }\n  }\n\n  /**\n   * Handler for dropping object on empty space. Attempts to drop the dragged object at the mouse's position. If the drop is not allowed, the dragged object is reset to its original position.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {(Node|Edge|Label)} droppedObj - Dropped graph component.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   * @override\n   */\n  dropOnNone(event, graph, droppedObj, x, y) {\n    // check for overlap\n    if (droppedObj instanceof Node) {\n      if (graph.isNodeCollision(droppedObj, x, y)) {\n        this.resetObjectPosition(droppedObj);\n      } else {\n        droppedObj.setPos(x - (this.startX - this.objStartX), y - (this.startY - this.objStartY));\n        this.startX = null;\n        this.startY = null;\n      }\n    }\n  }\n\n  /**\n   * Resets the dragged objects position. This is called when the object cannot be dropped at the current position.\n   * @param {(Node|Edge|Label)} object - The object that was dropped.\n   */\n  resetObjectPosition(object) {\n    object.setPos(this.objStartX, this.objStartY);\n    this.objStartX = null;\n    this.objStartY = null;\n    this.startX = null;\n    this.startY = null;\n  }\n\n}\n\nexport { MoveTool };\nexport default MoveTool;\n"
  },
  {
    "__docId__": 249,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MoveTool",
    "memberof": "src/js/tool/move-tool.js",
    "longname": "src/js/tool/move-tool.js~MoveTool",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/tool/move-tool.js",
    "importStyle": "MoveTool",
    "description": "Tool for moving graph objects. No longer used directly.",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MoveTool"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/tool/tool.js~Tool"
    ]
  },
  {
    "__docId__": 250,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "preDragObject",
    "memberof": "src/js/tool/move-tool.js~MoveTool",
    "longname": "src/js/tool/move-tool.js~MoveTool#preDragObject",
    "access": null,
    "description": "Returns a boolean indicating whether or not the tool should be able to handle dragging. Stores the dragged object location and mouse location.",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "srcObj",
        "description": "Dragged graph component."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the tool should handle dragging."
    },
    "override": true,
    "generator": false
  },
  {
    "__docId__": 251,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "startX",
    "memberof": "src/js/tool/move-tool.js~MoveTool",
    "longname": "src/js/tool/move-tool.js~MoveTool#startX",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 252,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "startY",
    "memberof": "src/js/tool/move-tool.js~MoveTool",
    "longname": "src/js/tool/move-tool.js~MoveTool#startY",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 253,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "objStartX",
    "memberof": "src/js/tool/move-tool.js~MoveTool",
    "longname": "src/js/tool/move-tool.js~MoveTool#objStartX",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 254,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "objStartY",
    "memberof": "src/js/tool/move-tool.js~MoveTool",
    "longname": "src/js/tool/move-tool.js~MoveTool#objStartY",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 255,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dragObject",
    "memberof": "src/js/tool/move-tool.js~MoveTool",
    "longname": "src/js/tool/move-tool.js~MoveTool#dragObject",
    "access": null,
    "description": "Handler for object dragging. Updates the object's position to the mouse's current position.",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Dragged graph component."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 256,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dropOnObject",
    "memberof": "src/js/tool/move-tool.js~MoveTool",
    "longname": "src/js/tool/move-tool.js~MoveTool#dropOnObject",
    "access": null,
    "description": "Handler for object dropping on another object. Attempts to drop the dragged object on the object at the mouse's position. If the drop is not allowed, the dragged object is reset to its original position.",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "droppedObj",
        "description": "Dropped graph component."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "destObj",
        "description": "Graph component that the object was dropped onto."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 257,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dropOnNone",
    "memberof": "src/js/tool/move-tool.js~MoveTool",
    "longname": "src/js/tool/move-tool.js~MoveTool#dropOnNone",
    "access": null,
    "description": "Handler for dropping object on empty space. Attempts to drop the dragged object at the mouse's position. If the drop is not allowed, the dragged object is reset to its original position.",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "droppedObj",
        "description": "Dropped graph component."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 258,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "startX",
    "memberof": "src/js/tool/move-tool.js~MoveTool",
    "longname": "src/js/tool/move-tool.js~MoveTool#startX",
    "access": null,
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 259,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "startY",
    "memberof": "src/js/tool/move-tool.js~MoveTool",
    "longname": "src/js/tool/move-tool.js~MoveTool#startY",
    "access": null,
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 260,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resetObjectPosition",
    "memberof": "src/js/tool/move-tool.js~MoveTool",
    "longname": "src/js/tool/move-tool.js~MoveTool#resetObjectPosition",
    "access": null,
    "description": "Resets the dragged objects position. This is called when the object cannot be dropped at the current position.",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "The object that was dropped."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 261,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "objStartX",
    "memberof": "src/js/tool/move-tool.js~MoveTool",
    "longname": "src/js/tool/move-tool.js~MoveTool#objStartX",
    "access": null,
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 262,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "objStartY",
    "memberof": "src/js/tool/move-tool.js~MoveTool",
    "longname": "src/js/tool/move-tool.js~MoveTool#objStartY",
    "access": null,
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 263,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "startX",
    "memberof": "src/js/tool/move-tool.js~MoveTool",
    "longname": "src/js/tool/move-tool.js~MoveTool#startX",
    "access": null,
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 264,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "startY",
    "memberof": "src/js/tool/move-tool.js~MoveTool",
    "longname": "src/js/tool/move-tool.js~MoveTool#startY",
    "access": null,
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 265,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/tool/node-tool.js",
    "memberof": null,
    "longname": "src/js/tool/node-tool.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Tool from '../tool/tool';\nimport Node from '../data/node/node';\nimport CircleNode from '../data/node/circle-node';\nimport TriangleNode from '../data/node/triangle-node';\nimport SquareNode from '../data/node/square-node';\nimport DiamondNode from '../data/node/diamond-node';\nimport PentagonNode from '../data/node/pentagon-node';\nimport HexagonNode from '../data/node/hexagon-node';\nimport OctagonNode from '../data/node/octagon-node';\n\n/**\n * Tool for adding nodes to the graph.\n * @class NodeTool\n */\nclass NodeTool extends Tool {\n\n  currentMode = 'circle';\n  static modes = {\n    circle: CircleNode,\n    triangle: TriangleNode,\n    square: SquareNode,\n    diamond: DiamondNode,\n    pentagon: PentagonNode,\n    hexagon: HexagonNode,\n    octagon: OctagonNode\n  };\n\n  optionMap = {\n    circle: {\n      label: 'Circle'\n    },\n    triangle: {\n      label: 'Triangle'\n    },\n    square: {\n      label: 'Square'\n    },\n    diamond: {\n      label: 'Diamond'\n    },\n    pentagon: {\n      label: 'Pentagon'\n    },\n    hexagon: {\n      label: 'Hexagon'\n    },\n    octagon: {\n      label: 'Octagon'\n    }\n  };\n\n  optionContent = {\n    html: '<canvas class=\"canvas-preview\" width=\"50\" height=\"50\"></canvas>',\n    init: (optionElement, mode) => {\n      let canvas = optionElement.querySelector('canvas');\n      let context = canvas.getContext('2d');\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      let node = new NodeTool.modes[mode](25, 25);\n      for (let field of Object.keys(this.inputs)) {\n        node[field] = this.inputs[field];\n      }\n      node.radius = 15;\n      node.draw(context);\n    }\n  };\n\n  inputs = {\n    isAcceptingState: false,\n    isStartingState: false,\n    radius: 30,\n    color: '#000000',\n    fillColor: '#ffffff',\n    lineWidth: 1\n  };\n\n  inputTypes = [\n    {\n      type: 'boolean',\n      name: 'isAcceptingState',\n      displayName: 'Accepting State'\n    },\n    {\n      type: 'boolean',\n      name: 'isStartingState',\n      displayName: 'Starting State'\n    },\n    {\n      type: 'number',\n      name: 'radius',\n      displayName: 'Radius'\n    },\n    {\n      type: 'color',\n      name: 'color',\n      displayName: 'Line Color'\n    },\n    {\n      type: 'color',\n      name: 'fillColor',\n      displayName: 'Fill Color'\n    },\n    {\n      type: 'number',\n      name: 'lineWidth',\n      displayName: 'Line Width'\n    }\n  ];\n\n  /**\n   * Handler for object selection. Attempts to create a node at the mouse's location.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {(Node|Edge|Label)} obj - Selected graph component.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  selectObject(event, graph, obj, x, y) {\n    if (!(obj instanceof Node)) {\n      this.selectNone(event, graph, x, y);\n    }\n  }\n\n  /**\n   * Handler for clicking empty space. Attempts to create a node at the mouse's location.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  selectNone(event, graph, x, y) {\n    this.addNode(this.currentMode, graph, x, y);\n  }\n\n  /**\n   * Handler for dropping object on empty space. The dropped object is ignored and attempts to create a node at the mouse's location.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {(Node|Edge|Label)} droppedObj - Dropped graph component.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  dropOnNone(event, graph, droppedObj, x, y) {\n    this.selectNone(event, graph, x, y);\n  }\n\n  /**\n   * Helper function for creating a node can be added at the given position.\n   * @param {string} mode - Name of the current mode.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {number} x - x-coordinate (in canvas coordinates) of the point to create the node.\n   * @param  {number} y - y-coordinate (in canvas coordinates) of the point to create the node.\n   */\n  addNode(mode, graph, x, y) {\n    let NodeClass = NodeTool.modes[mode];\n    let node = new NodeClass(x, y);\n    for (let field of Object.keys(this.inputs)) {\n      node[field] = this.inputs[field];\n    }\n    if (!graph.isNodeCollision(node, x, y)) {\n      graph.addNode(node);\n    }\n  }\n\n}\n\nexport { NodeTool };\nexport default NodeTool;\n"
  },
  {
    "__docId__": 266,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "NodeTool",
    "memberof": "src/js/tool/node-tool.js",
    "longname": "src/js/tool/node-tool.js~NodeTool",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/tool/node-tool.js",
    "importStyle": "NodeTool",
    "description": "Tool for adding nodes to the graph.",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "NodeTool"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/tool/tool.js~Tool"
    ]
  },
  {
    "__docId__": 267,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectObject",
    "memberof": "src/js/tool/node-tool.js~NodeTool",
    "longname": "src/js/tool/node-tool.js~NodeTool#selectObject",
    "access": null,
    "description": "Handler for object selection. Attempts to create a node at the mouse's location.",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Selected graph component."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 268,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectNone",
    "memberof": "src/js/tool/node-tool.js~NodeTool",
    "longname": "src/js/tool/node-tool.js~NodeTool#selectNone",
    "access": null,
    "description": "Handler for clicking empty space. Attempts to create a node at the mouse's location.",
    "lineNumber": 130,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 269,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dropOnNone",
    "memberof": "src/js/tool/node-tool.js~NodeTool",
    "longname": "src/js/tool/node-tool.js~NodeTool#dropOnNone",
    "access": null,
    "description": "Handler for dropping object on empty space. The dropped object is ignored and attempts to create a node at the mouse's location.",
    "lineNumber": 142,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "droppedObj",
        "description": "Dropped graph component."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 270,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addNode",
    "memberof": "src/js/tool/node-tool.js~NodeTool",
    "longname": "src/js/tool/node-tool.js~NodeTool#addNode",
    "access": null,
    "description": "Helper function for creating a node can be added at the given position.",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": "Name of the current mode."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate (in canvas coordinates) of the point to create the node."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate (in canvas coordinates) of the point to create the node."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 271,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/tool/pan-tool.js",
    "memberof": null,
    "longname": "src/js/tool/pan-tool.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Tool from '../tool/tool';\nimport ui from '../ui/ui';\n\n/**\n * Tool for panning the canvas. No longer used directly.\n * @class PanTool\n */\nclass PanTool extends Tool {\n\n  startPosition = {};\n\n  /**\n   * Called before the selectNone() handler. Stores the initial position of the mouse and the display location of the canvas.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   * @override\n   */\n  preSelectNone(event, graph, x, y) {\n    this.startPosition.dx = ui.canvas.dx;\n    this.startPosition.dy = ui.canvas.dy;\n    this.startPosition.x = event.clientX;\n    this.startPosition.y = event.clientY;\n  }\n\n  /**\n   * Handler for object dragging. Ignores the object and calls dragNone().\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {(Node|Edge|Label)} srcObj - Dragged graph component.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   * @override\n   */\n  dragObject(event, graph, srcObj, x, y) {\n    this.dragNone(event, graph, x, y);\n  }\n\n  /**\n   * Handler for object dropping on another object. Ignores the object and calls dropOnNone().\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {(Node|Edge|Label)} droppedObj - Dropped graph component.\n   * @param  {(Node|Edge|Label)} destObj - Graph component that the object was dropped onto.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   * @override\n   */\n  dropOnObject(event, graph, droppedObj, destObj, x, y) {\n    this.dropOnNone(event, graph, droppedObj, x, y);\n  }\n\n  /**\n   * Handler for dragging mouse on empty space. Updates the canvas position based on the current mouse position.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   * @override\n   */\n  dragNone(event, graph, x, y) {\n    let scale = ui.canvas.scale;\n    ui.canvas.dx = this.startPosition.dx + (this.startPosition.x - event.clientX) / scale;\n    ui.canvas.dy = this.startPosition.dy + (this.startPosition.y - event.clientY) / scale;\n    ui.canvas.update();\n  }\n\n  /**\n   * Handler for dropping object on empty space. Clears the stored mouse and canvas positions.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {(Node|Edge|Label)} droppedObj - Dropped graph component.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   * @override\n   */\n  dropOnNone(event, graph, droppedObj, x, y) {\n    this.startPosition = {};\n  }\n\n}\n\nexport { PanTool };\nexport default PanTool;\n"
  },
  {
    "__docId__": 272,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PanTool",
    "memberof": "src/js/tool/pan-tool.js",
    "longname": "src/js/tool/pan-tool.js~PanTool",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/tool/pan-tool.js",
    "importStyle": "PanTool",
    "description": "Tool for panning the canvas. No longer used directly.",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PanTool"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/tool/tool.js~Tool"
    ]
  },
  {
    "__docId__": 273,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "preSelectNone",
    "memberof": "src/js/tool/pan-tool.js~PanTool",
    "longname": "src/js/tool/pan-tool.js~PanTool#preSelectNone",
    "access": null,
    "description": "Called before the selectNone() handler. Stores the initial position of the mouse and the display location of the canvas.",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 274,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dragObject",
    "memberof": "src/js/tool/pan-tool.js~PanTool",
    "longname": "src/js/tool/pan-tool.js~PanTool#dragObject",
    "access": null,
    "description": "Handler for object dragging. Ignores the object and calls dragNone().",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "srcObj",
        "description": "Dragged graph component."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 275,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dropOnObject",
    "memberof": "src/js/tool/pan-tool.js~PanTool",
    "longname": "src/js/tool/pan-tool.js~PanTool#dropOnObject",
    "access": null,
    "description": "Handler for object dropping on another object. Ignores the object and calls dropOnNone().",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "droppedObj",
        "description": "Dropped graph component."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "destObj",
        "description": "Graph component that the object was dropped onto."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 276,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dragNone",
    "memberof": "src/js/tool/pan-tool.js~PanTool",
    "longname": "src/js/tool/pan-tool.js~PanTool#dragNone",
    "access": null,
    "description": "Handler for dragging mouse on empty space. Updates the canvas position based on the current mouse position.",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 277,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dropOnNone",
    "memberof": "src/js/tool/pan-tool.js~PanTool",
    "longname": "src/js/tool/pan-tool.js~PanTool#dropOnNone",
    "access": null,
    "description": "Handler for dropping object on empty space. Clears the stored mouse and canvas positions.",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "droppedObj",
        "description": "Dropped graph component."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 278,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "startPosition",
    "memberof": "src/js/tool/pan-tool.js~PanTool",
    "longname": "src/js/tool/pan-tool.js~PanTool#startPosition",
    "access": null,
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 279,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/tool/select-move-tool.js",
    "memberof": null,
    "longname": "src/js/tool/select-move-tool.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import MoveTool from './move-tool';\r\nimport SelectTool from './select-tool';\r\nimport Tool from './tool';\r\n\r\n/**\r\n * Tool combining functionality of SelectTool and MoveTool.\r\n * @class SelectMoveTool\r\n */\r\nclass SelectMoveTool extends Tool {\r\n\r\n  sidebarType = 'select';\r\n  selectTool = new SelectTool();\r\n  moveTool = new MoveTool();\r\n\r\n  /**\r\n   * Called when switching to a different tool to cancel any incomplete actions. Cancels SelectTool actions.\r\n   */\r\n  cancel() {\r\n    this.selectTool.cancel();\r\n  }\r\n\r\n  /**\r\n   * Handler for object selection. Calls selectObject() of SelectTool.\r\n   * @param  {Event} event - Event object from event listener.\r\n   * @param  {Graph} graph - The current graph object.\r\n   * @param  {(Node|Edge|Label)} obj - Selected graph component.\r\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\r\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\r\n   */\r\n  selectObject(event, graph, obj, x, y) {\r\n    this.selectTool.selectObject(...arguments);\r\n  }\r\n\r\n  /**\r\n   * Handler for clicking empty space. Calls selectNone() of SelectTool.\r\n   * @param  {Event} event - Event object from event listener.\r\n   * @param  {Graph} graph - The current graph object.\r\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\r\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\r\n   */\r\n  selectNone(event, graph, x, y) {\r\n    this.selectTool.selectNone(...arguments);\r\n  }\r\n\r\n  /**\r\n   * Returns a boolean indicating whether or not the tool should be able to handle dragging. Calls preDragObject() of MoveTool.\r\n   * @param  {Event} event - Event object from event listener.\r\n   * @param  {Graph} graph - The current graph object.\r\n   * @param  {(Node|Edge|Label)} srcObj - Dragged graph component.\r\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\r\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\r\n   * @return {boolean} - Whether or not the tool should handle dragging.\r\n   */\r\n  preDragObject(event, graph, srcObj, x, y) {\r\n    return this.moveTool.preDragObject(...arguments);\r\n  }\r\n\r\n  /**\r\n   * Handler for object dragging. Calls selectObject() of SelectTool and dragObject() of MoveTool.\r\n   * @param  {Event} event - Event object from event listener.\r\n   * @param  {Graph} graph - The current graph object.\r\n   * @param  {(Node|Edge|Label)} obj - Dragged graph component.\r\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\r\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\r\n   */\r\n  dragObject(event, graph, obj, x, y) {\r\n    this.selectTool.selectObject(event, graph, obj, x, y);\r\n    this.moveTool.dragObject(...arguments);\r\n  }\r\n\r\n  /**\r\n   * Handler for object dropping on another object. Calls dropOnObject() of MoveTool.\r\n   * @param  {Event} event - Event object from event listener.\r\n   * @param  {Graph} graph - The current graph object.\r\n   * @param  {(Node|Edge|Label)} droppedObj - Dropped graph component.\r\n   * @param  {(Node|Edge|Label)} destObj - Graph component that the object was dropped onto.\r\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\r\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\r\n   */\r\n  dropOnObject(event, graph, droppedObj, destObj, x, y) {\r\n    this.moveTool.dropOnObject(...arguments);\r\n  }\r\n\r\n  /**\r\n   * Handler for dropping object on empty space. Calls dropOnNone() of MoveTool.\r\n   * @param  {Event} event - Event object from event listener.\r\n   * @param  {Graph} graph - The current graph object.\r\n   * @param  {(Node|Edge|Label)} droppedObj - Dropped graph component.\r\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\r\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\r\n   */\r\n  dropOnNone(event, graph, droppedObj, x, y) {\r\n    this.moveTool.dropOnNone(...arguments);\r\n  }\r\n\r\n}\r\n\r\nexport { SelectMoveTool };\r\nexport default SelectMoveTool;\r\n"
  },
  {
    "__docId__": 280,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SelectMoveTool",
    "memberof": "src/js/tool/select-move-tool.js",
    "longname": "src/js/tool/select-move-tool.js~SelectMoveTool",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/tool/select-move-tool.js",
    "importStyle": "SelectMoveTool",
    "description": "Tool combining functionality of SelectTool and MoveTool.",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SelectMoveTool"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/tool/tool.js~Tool"
    ]
  },
  {
    "__docId__": 281,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "cancel",
    "memberof": "src/js/tool/select-move-tool.js~SelectMoveTool",
    "longname": "src/js/tool/select-move-tool.js~SelectMoveTool#cancel",
    "access": null,
    "description": "Called when switching to a different tool to cancel any incomplete actions. Cancels SelectTool actions.",
    "lineNumber": 18,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 282,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectObject",
    "memberof": "src/js/tool/select-move-tool.js~SelectMoveTool",
    "longname": "src/js/tool/select-move-tool.js~SelectMoveTool#selectObject",
    "access": null,
    "description": "Handler for object selection. Calls selectObject() of SelectTool.",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Selected graph component."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 283,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectNone",
    "memberof": "src/js/tool/select-move-tool.js~SelectMoveTool",
    "longname": "src/js/tool/select-move-tool.js~SelectMoveTool#selectNone",
    "access": null,
    "description": "Handler for clicking empty space. Calls selectNone() of SelectTool.",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 284,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "preDragObject",
    "memberof": "src/js/tool/select-move-tool.js~SelectMoveTool",
    "longname": "src/js/tool/select-move-tool.js~SelectMoveTool#preDragObject",
    "access": null,
    "description": "Returns a boolean indicating whether or not the tool should be able to handle dragging. Calls preDragObject() of MoveTool.",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "srcObj",
        "description": "Dragged graph component."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the tool should handle dragging."
    },
    "generator": false
  },
  {
    "__docId__": 285,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dragObject",
    "memberof": "src/js/tool/select-move-tool.js~SelectMoveTool",
    "longname": "src/js/tool/select-move-tool.js~SelectMoveTool#dragObject",
    "access": null,
    "description": "Handler for object dragging. Calls selectObject() of SelectTool and dragObject() of MoveTool.",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Dragged graph component."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 286,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dropOnObject",
    "memberof": "src/js/tool/select-move-tool.js~SelectMoveTool",
    "longname": "src/js/tool/select-move-tool.js~SelectMoveTool#dropOnObject",
    "access": null,
    "description": "Handler for object dropping on another object. Calls dropOnObject() of MoveTool.",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "droppedObj",
        "description": "Dropped graph component."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "destObj",
        "description": "Graph component that the object was dropped onto."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 287,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dropOnNone",
    "memberof": "src/js/tool/select-move-tool.js~SelectMoveTool",
    "longname": "src/js/tool/select-move-tool.js~SelectMoveTool#dropOnNone",
    "access": null,
    "description": "Handler for dropping object on empty space. Calls dropOnNone() of MoveTool.",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "droppedObj",
        "description": "Dropped graph component."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 288,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/tool/select-tool.js",
    "memberof": null,
    "longname": "src/js/tool/select-tool.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Tool from '../tool/tool';\nimport Label from '../data/label';\n\n/**\n * Tool for selecting objects. No longer used directly.\n * @class SelectTool\n */\nclass SelectTool extends Tool {\n\n  sidebarType = 'select';\n\n  selectedObject = null;\n\n  /**\n   * Called when switching to a different tool to cancel any incomplete actions. Cancels object selection.\n   */\n  cancel() {\n    this.selectNone();\n  }\n\n  /**\n   * Handler for object selection. Select (or deselect if it is currently selected) the object by updating the value of the object's field isSelected.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {(Node|Edge|Label)} obj - Selected graph component.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  selectObject(event, graph, obj, x, y) {\n    if (this.selectedObject) {\n      this.selectedObject.isSelected = false;\n    }\n\n    let targetObject;\n    if (obj instanceof Label) {\n      if (obj.parentObject.containsPoint(x, y)) {\n        targetObject = obj.parentObject;\n      } else {\n        this.selectNone(event, graph, x, y);\n        return;\n      }\n    } else {\n      targetObject = obj;\n    }\n    targetObject.isSelected = true;\n    this.selectedObject = targetObject;\n  }\n\n  /**\n   * Handler for clicking empty space. Deselects the selected object (if there is one).\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  selectNone(event, graph, x, y) {\n    if (this.selectedObject) {\n      this.selectedObject.isSelected = false;\n      this.selectedObject = null;\n    }\n  }\n\n}\n\nexport { SelectTool };\nexport default SelectTool;\n"
  },
  {
    "__docId__": 289,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SelectTool",
    "memberof": "src/js/tool/select-tool.js",
    "longname": "src/js/tool/select-tool.js~SelectTool",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/tool/select-tool.js",
    "importStyle": "SelectTool",
    "description": "Tool for selecting objects. No longer used directly.",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SelectTool"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/tool/tool.js~Tool"
    ]
  },
  {
    "__docId__": 290,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "cancel",
    "memberof": "src/js/tool/select-tool.js~SelectTool",
    "longname": "src/js/tool/select-tool.js~SelectTool#cancel",
    "access": null,
    "description": "Called when switching to a different tool to cancel any incomplete actions. Cancels object selection.",
    "lineNumber": 17,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 291,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectObject",
    "memberof": "src/js/tool/select-tool.js~SelectTool",
    "longname": "src/js/tool/select-tool.js~SelectTool#selectObject",
    "access": null,
    "description": "Handler for object selection. Select (or deselect if it is currently selected) the object by updating the value of the object's field isSelected.",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Selected graph component."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 292,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selectedObject",
    "memberof": "src/js/tool/select-tool.js~SelectTool",
    "longname": "src/js/tool/select-tool.js~SelectTool#selectedObject",
    "access": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 293,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectNone",
    "memberof": "src/js/tool/select-tool.js~SelectTool",
    "longname": "src/js/tool/select-tool.js~SelectTool#selectNone",
    "access": null,
    "description": "Handler for clicking empty space. Deselects the selected object (if there is one).",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 294,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selectedObject",
    "memberof": "src/js/tool/select-tool.js~SelectTool",
    "longname": "src/js/tool/select-tool.js~SelectTool#selectedObject",
    "access": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 295,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/tool/tool.js",
    "memberof": null,
    "longname": "src/js/tool/tool.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Abstract superclass for all tool classes.\n * @class Tool\n */\nclass Tool {\n\n  sidebarType = 'display';\n\n  currentMode;\n  modes;\n\n  optionMap;\n  optionContent;\n\n  inputs;\n  inputTypes;\n\n  modeInputs;\n  modeInputTypes;\n\n  /**\n   * Constructs a Tool instance. Should not be called directly.\n   * @constructs Tool\n   */\n  constructor() {}\n\n  /**\n   * Returns a boolean indicating whether or not the tool has modes.\n   * @return {boolean} - Whether or not the tool has modes.\n   */\n  hasModes() {\n    return typeof this.currentMode !== 'undefined'\n        && typeof this.constructor.modes !== 'undefined'\n        && typeof this.optionMap !== 'undefined'\n        && typeof this.optionContent !== 'undefined';\n  }\n\n  /**\n   * Returns a boolean indicating whether or not the tool has inputs.\n   * @return {boolean} - Whether or not the tool has inputs.\n   */\n  hasInputs() {\n    return typeof this.inputs !== 'undefined'\n        && typeof this.inputTypes !== 'undefined';\n  }\n\n  /**\n   * Returns a boolean indicating whether or not the tool has mode-specific inputs.\n   * @return {boolean} - Whether or not the tool has mode-specific inputs.\n   */\n  hasModeInputs() {\n    return typeof this.modeInputs !== 'undefined'\n        && typeof this.modeInputTypes !== 'undefined';\n  }\n\n  /**\n   * Called when the mode is changed.\n   * @param  {string} mode - Name of the new mode.\n   */\n  changeMode(mode) {\n    this.currentMode = mode;\n  }\n\n  /**\n   * Called when changing to this tool (if necessary).\n   */\n  activate() {}\n\n  /**\n   * Called when switching to a different tool to cancel any incomplete actions.\n   */\n  cancel() {}\n\n  /**\n   * Returns a boolean indicating whether or not the tool should be able to handle selection.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {(Node|Edge|Label)} obj - Selected graph component.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   * @return {boolean} - Whether or not the tool should handle selection.\n   */\n  preSelectObject(event, graph, obj, x, y) {\n    return true;\n  }\n\n  /**\n   * Returns a boolean indicating whether or not the tool should be able to handle dragging.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {(Node|Edge|Label)} srcObj - Dragged graph component.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   * @return {boolean} - Whether or not the tool should handle dragging.\n   */\n  preDragObject(event, graph, srcObj, x, y) {\n    return true;\n  }\n\n  /**\n   * Handler for object selection.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {(Node|Edge|Label)} obj - Selected graph component.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  selectObject(event, graph, obj, x, y) {}\n\n  /**\n   * Handler for object dragging.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {(Node|Edge|Label)} srcObj - Dragged graph component.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  dragObject(event, graph, srcObj, x, y) {}\n\n  /**\n   * Handler for object dropping on another object.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {(Node|Edge|Label)} droppedObj - Dropped graph component.\n   * @param  {(Node|Edge|Label)} destObj - Graph component that the object was dropped onto.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  dropOnObject(event, graph, droppedObj, destObj, x, y) {}\n\n  /**\n   * Handler for dragging mouse over an object.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {(Node|Edge|Label)} obj - The object that the mouse is dragged over.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  dragOverObject(event, graph, obj, x, y) {\n    this.dragNone(event, graph, x, y);\n  }\n\n  /**\n   * Handler for aborted selections.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  abortSelect(event, graph, x, y) {}\n\n  /**\n   * Called before the selectNone() handler.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  preSelectNone(event, graph, x, y) {}\n\n  /**\n   * Called before the dragNone() handler.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  preDragNone(event, graph, x, y) {}\n\n  /**\n   * Handler for clicking empty space.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  selectNone(event, graph, x, y) {}\n\n  /**\n   * Handler for dragging mouse on empty space.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  dragNone(event, graph, x, y) {}\n\n  /**\n   * Handler for dropping object on empty space.\n   * @param  {Event} event - Event object from event listener.\n   * @param  {Graph} graph - The current graph object.\n   * @param  {(Node|Edge|Label)} droppedObj - Dropped graph component.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  dropOnNone(event, graph, droppedObj, x, y) {}\n\n}\n\nexport { Tool };\nexport default Tool;\n"
  },
  {
    "__docId__": 296,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Tool",
    "memberof": "src/js/tool/tool.js",
    "longname": "src/js/tool/tool.js~Tool",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/tool/tool.js",
    "importStyle": "Tool",
    "description": "Abstract superclass for all tool classes.",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Tool"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 297,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/tool/tool.js~Tool",
    "longname": "src/js/tool/tool.js~Tool#constructor",
    "access": null,
    "description": "Constructs a Tool instance. Should not be called directly.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Tool"
      }
    ],
    "params": [],
    "generator": false
  },
  {
    "__docId__": 298,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hasModes",
    "memberof": "src/js/tool/tool.js~Tool",
    "longname": "src/js/tool/tool.js~Tool#hasModes",
    "access": null,
    "description": "Returns a boolean indicating whether or not the tool has modes.",
    "lineNumber": 31,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the tool has modes."
    },
    "generator": false
  },
  {
    "__docId__": 299,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hasInputs",
    "memberof": "src/js/tool/tool.js~Tool",
    "longname": "src/js/tool/tool.js~Tool#hasInputs",
    "access": null,
    "description": "Returns a boolean indicating whether or not the tool has inputs.",
    "lineNumber": 42,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the tool has inputs."
    },
    "generator": false
  },
  {
    "__docId__": 300,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hasModeInputs",
    "memberof": "src/js/tool/tool.js~Tool",
    "longname": "src/js/tool/tool.js~Tool#hasModeInputs",
    "access": null,
    "description": "Returns a boolean indicating whether or not the tool has mode-specific inputs.",
    "lineNumber": 51,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the tool has mode-specific inputs."
    },
    "generator": false
  },
  {
    "__docId__": 301,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "changeMode",
    "memberof": "src/js/tool/tool.js~Tool",
    "longname": "src/js/tool/tool.js~Tool#changeMode",
    "access": null,
    "description": "Called when the mode is changed.",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": "Name of the new mode."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 302,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "currentMode",
    "memberof": "src/js/tool/tool.js~Tool",
    "longname": "src/js/tool/tool.js~Tool#currentMode",
    "access": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 303,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "activate",
    "memberof": "src/js/tool/tool.js~Tool",
    "longname": "src/js/tool/tool.js~Tool#activate",
    "access": null,
    "description": "Called when changing to this tool (if necessary).",
    "lineNumber": 67,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 304,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "cancel",
    "memberof": "src/js/tool/tool.js~Tool",
    "longname": "src/js/tool/tool.js~Tool#cancel",
    "access": null,
    "description": "Called when switching to a different tool to cancel any incomplete actions.",
    "lineNumber": 72,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 305,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "preSelectObject",
    "memberof": "src/js/tool/tool.js~Tool",
    "longname": "src/js/tool/tool.js~Tool#preSelectObject",
    "access": null,
    "description": "Returns a boolean indicating whether or not the tool should be able to handle selection.",
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Selected graph component."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the tool should handle selection."
    },
    "generator": false
  },
  {
    "__docId__": 306,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "preDragObject",
    "memberof": "src/js/tool/tool.js~Tool",
    "longname": "src/js/tool/tool.js~Tool#preDragObject",
    "access": null,
    "description": "Returns a boolean indicating whether or not the tool should be able to handle dragging.",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "srcObj",
        "description": "Dragged graph component."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the tool should handle dragging."
    },
    "generator": false
  },
  {
    "__docId__": 307,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectObject",
    "memberof": "src/js/tool/tool.js~Tool",
    "longname": "src/js/tool/tool.js~Tool#selectObject",
    "access": null,
    "description": "Handler for object selection.",
    "lineNumber": 108,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Selected graph component."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 308,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dragObject",
    "memberof": "src/js/tool/tool.js~Tool",
    "longname": "src/js/tool/tool.js~Tool#dragObject",
    "access": null,
    "description": "Handler for object dragging.",
    "lineNumber": 118,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "srcObj",
        "description": "Dragged graph component."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 309,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dropOnObject",
    "memberof": "src/js/tool/tool.js~Tool",
    "longname": "src/js/tool/tool.js~Tool#dropOnObject",
    "access": null,
    "description": "Handler for object dropping on another object.",
    "lineNumber": 129,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "droppedObj",
        "description": "Dropped graph component."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "destObj",
        "description": "Graph component that the object was dropped onto."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 310,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dragOverObject",
    "memberof": "src/js/tool/tool.js~Tool",
    "longname": "src/js/tool/tool.js~Tool#dragOverObject",
    "access": null,
    "description": "Handler for dragging mouse over an object.",
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "The object that the mouse is dragged over."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 311,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "abortSelect",
    "memberof": "src/js/tool/tool.js~Tool",
    "longname": "src/js/tool/tool.js~Tool#abortSelect",
    "access": null,
    "description": "Handler for aborted selections.",
    "lineNumber": 150,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 312,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "preSelectNone",
    "memberof": "src/js/tool/tool.js~Tool",
    "longname": "src/js/tool/tool.js~Tool#preSelectNone",
    "access": null,
    "description": "Called before the selectNone() handler.",
    "lineNumber": 159,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 313,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "preDragNone",
    "memberof": "src/js/tool/tool.js~Tool",
    "longname": "src/js/tool/tool.js~Tool#preDragNone",
    "access": null,
    "description": "Called before the dragNone() handler.",
    "lineNumber": 168,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 314,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectNone",
    "memberof": "src/js/tool/tool.js~Tool",
    "longname": "src/js/tool/tool.js~Tool#selectNone",
    "access": null,
    "description": "Handler for clicking empty space.",
    "lineNumber": 177,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 315,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dragNone",
    "memberof": "src/js/tool/tool.js~Tool",
    "longname": "src/js/tool/tool.js~Tool#dragNone",
    "access": null,
    "description": "Handler for dragging mouse on empty space.",
    "lineNumber": 186,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 316,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dropOnNone",
    "memberof": "src/js/tool/tool.js~Tool",
    "longname": "src/js/tool/tool.js~Tool#dropOnNone",
    "access": null,
    "description": "Handler for dropping object on empty space.",
    "lineNumber": 196,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from event listener."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "droppedObj",
        "description": "Dropped graph component."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 317,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/ui/canvas.js",
    "memberof": null,
    "longname": "src/js/ui/canvas.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import MouseHandler from '../util/mouse-handler';\nimport ContextMenu from '../ui/context-menu';\n\nconst SCALE_MODIFIER = 0.9;\n\n/**\n * Front end canvas frame which reacts to mouse-clicks upon it\n * @class Canvas\n */\nclass Canvas {\n\n  /**\n   * An instance of the UI\n   * @type {UI}\n   */\n  ui;\n\n  /**\n   * An instance of the canvas element on the browser\n   * @type {HTMLCanvasElement}\n   */\n  canvas;\n\n  /**\n   * An instance of a rendering context\n   * @type {CanvasRenderingContext2D}\n   */\n  context;\n\n  /**\n   * A number value which remembers the zoom factor\n   * @type {Number}\n   */\n  scaleValue = 1;\n\n  /**\n   * A number value which remembers the centered horizontal position on the graph\n   * @type {Number}\n   */\n  dx = 0;\n\n  /**\n   * A number value which remembers the centered vertical position on the graph\n   * @type {Number}\n   */\n  dy = 0;\n\n  /**\n   * An instance of the mouseHandler which interfaces the canvas with the graph\n   * @type {MouseHandler}\n   */\n  mouseHandler;\n\n  /**\n   * An instance of the contextMenu\n   * @type {ContextMenu}\n   */\n  contextMenu;\n\n  /**\n   * Constructor for the Canvas object\n   * @param {UI} ui - refers to the master ui object\n   */\n  constructor(ui) {\n    this.ui = ui;\n    this.canvas = document.getElementById('canvas');\n    this.context = this.canvas.getContext('2d');\n  }\n\n  /**\n   * Initializes the mouse handler, context menu, and other listeners\n   * @param {Graph} graph - refers to the master graph object\n   */\n  init(graph) {\n    this.mouseHandler = new MouseHandler(graph);\n    this.contextMenu = new ContextMenu(this.ui, this.mouseHandler);\n    this.initListeners();\n  }\n\n  resetGraph(newGraph) {\n    this.mouseHandler.resetGraph(newGraph);\n  }\n\n  resize(event) {\n    this.context.canvas.width = window.innerWidth;\n    this.context.canvas.height = window.innerHeight;\n    this.update();\n  }\n\n  get scale() {\n    return this.scaleValue;\n  }\n\n  set scale(scale) {\n    this.scaleValue = scale;\n    this.ui.statusBar.updateZoom(scale);\n  }\n\n  reset() {\n    this.dx = 0;\n    this.dy = 0;\n    this.scale = 1;\n    this.update();\n    this.ui.statusBar.updateMouse(0, 0);\n  }\n\n  clear() {\n    this.context.clearRect(this.dx, this.dy, this.canvas.width / this.scale, this.canvas.height / this.scale);\n  }\n\n  /**\n   * Functions gets the x-position of the click event on the full canvas\n   * @param {HTMLEvent} event - the click event which triggered this call\n   * @return {Number} x - The x-position of the click event on the full canvas\n   */\n  getCanvasX(event) {\n    let canvasX;\n    if (event.target === this.canvas) {\n      canvasX = event.offsetX;\n    } else {\r\n      canvasX = event.pageX - this.canvas.offsetLeft;\r\n    }\n    let x = canvasX / this.scale + this.dx;\n    return x;\n  }\n\n  /**\n   * Functions gets the y-position of the click event on the full canvas\n   * @param {HTMLEvent} event - the click event which triggered this call\n   * @return {Number} y - The y-position of the click event on the full canvas\n   */\n  getCanvasY(event) {\n    let canvasY;\n    if (event.target === this.canvas) {\n      canvasY = event.offsetY;\n    } else {\r\n      canvasY = event.pageY - this.canvas.offsetTop;\r\n    }\n    let y = canvasY / this.scale + this.dy;\n    return y;\n  }\n\n  update() {\n    // reset the transformations done to the canvas\n    this.context.resetTransform();\n\n    // context.setTransform(xScale, xSkew, ySkew, yScale, dx, dy) applies\n    // the translation before the scale.\n    // This is not what we want, since the scale is done relative to (0,0)\n    // and the position displayed at the top-left corner will no longer\n    // be (dx,dy), which means the coordinates under the mouse will change.\n\n    // scale both x- and y-axis\n    this.context.scale(this.scale, this.scale);\n\n    // context.translate(a, b) translates the canvas origin by (a,b).\n    // Since (dx,dy) are the coordinates calculated for the new origin, the\n    // canvas needs to be translated by (-dx,-dy).\n    this.context.translate(-1 * this.dx, -1 * this.dy);\n  }\n\n  /**\n   * Creates all the listeners for every event which happens upon the canvas\n   * Based on the event it calls the relevant function\n   */\n  initListeners() {\n    this.canvas.addEventListener('mousedown', (event) => {\n      event.stopPropagation();\n      let x = this.getCanvasX(event);\n      let y = this.getCanvasY(event);\n\n      if (event.button === 0 && !this.contextMenu.isDisplayed) {\n        this.mouseHandler.downListener(event, this.ui.toolbar.currentTool, x, y);\n      } else if (event.button === 2) {\n        this.mouseHandler.rightDownListener(event, x, y);\n      }\n\n      if (this.contextMenu.isDisplayed) {\n        this.contextMenu.toggleContextMenu();\n      }\n    });\n\n    window.addEventListener('mouseup', (event) => {\n      event.stopPropagation();\n      let x = this.getCanvasX(event);\n      let y = this.getCanvasY(event);\n\n      if (event.button === 0) {\n        this.mouseHandler.upListener(event, this.ui.toolbar.currentTool, x, y);\n      } else if (event.button === 2) {\n        this.mouseHandler.rightUpListener(event, x, y);\n      }\n    });\n\n    window.addEventListener('mousemove', (event) => {\n      event.stopPropagation();\n      let x = this.getCanvasX(event);\n      let y = this.getCanvasY(event);\n\n      if (event.button === 0 && event.buttons !== 2) {\n        this.mouseHandler.moveListener(event, this.ui.toolbar.currentTool, x, y);\n      } else if (event.button === 2 || event.buttons === 2) {\n        this.mouseHandler.rightMoveListener(event, x, y);\n      }\n    });\n\n    window.addEventListener('contextmenu', (event) => {\n      if (event.target === this.canvas) {\n        // prevent default context menu\n        event.preventDefault();\n      }\n      event.stopPropagation();\n      let x = this.getCanvasX(event);\n      let y = this.getCanvasY(event);\n\n      this.mouseHandler.contextmenuEventListener(event, x, y, this.contextMenu);\n    });\n\n    this.canvas.addEventListener('wheel', (event) => {\n      event.stopPropagation();\n      // prevent page scrolling (the default scroll behavior)\n      event.preventDefault();\n\n      // store the current scale value\n      let oldScale = this.scale;\n\n      // get the amount the mousewheel was scrolled\n      let delta = event.deltaY;\n      if (delta > 0) {\n        // scroll down\n        this.scale = Math.max(this.scale * SCALE_MODIFIER, 0.1);\n      } else if (delta < 0) {\n        // scroll up\n        this.scale = Math.min(this.scale / SCALE_MODIFIER, 10);\n      }\n\n      // get the mouse position (relative to the canvas element)\n      let mouseX = event.offsetX;\n      let mouseY = event.offsetY;\n\n      // Calculate the new position of the displayed origin (top left corner).\n      // (dx,dy) are the coordinates of the top-left corner.\n      // (x1,y1) and (x2,y2) are the coordinates at the mouse position before\n      // and after changing the scale, respectively.\n      //\n      // With the old scale value:\n      //     dx1 = dx\n      //     dy1 = dy\n      //     x1 = dx + mouseX / oldScale\n      //     y1 = dy + mouseY / oldScale\n      //\n      // With new scale:\n      //     dx2 = dx + mouseX / oldScale - mouseX / scale\n      //     dy2 = dy + mouseY / oldScale - mouseY / scale\n      //     x2 = dx2 + mouseX / scale\n      //        = dx + mouseX / oldScale - mouseX / scale + mouseX / scale\n      //        = dx + mouseX / oldScale\n      //        = x1\n      //     y2 = dy2 + mouseY / scale\n      //        = dy + mouseY / oldScale - mouseY / scale + mouseY / scale\n      //        = dy + mouseY / oldScale\n      //        = y1\n      //\n      // Note that (x1,y1) = (x2,y2) which means the coordinates under\n      // the mouse stays the same.\n      this.dx += mouseX / oldScale - mouseX / this.scale;\n      this.dy += mouseY / oldScale - mouseY / this.scale;\n\n      this.update();\n\n      this.ui.statusBar.updateZoom(this.scale);\n    });\n\n    document.addEventListener('selectstart', (event) => {\n      event.stopPropagation();\n      event.preventDefault();\n      return false;\n    });\n\n    document.addEventListener('dblclick', (event) => {\n      event.stopPropagation();\n      event.preventDefault();\n      return false;\n    });\n  }\n}\n\nexport { Canvas };\nexport default Canvas;\n"
  },
  {
    "__docId__": 318,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "SCALE_MODIFIER",
    "memberof": "src/js/ui/canvas.js",
    "longname": "src/js/ui/canvas.js~SCALE_MODIFIER",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/canvas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 319,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Canvas",
    "memberof": "src/js/ui/canvas.js",
    "longname": "src/js/ui/canvas.js~Canvas",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/ui/canvas.js",
    "importStyle": "Canvas",
    "description": "Front end canvas frame which reacts to mouse-clicks upon it",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Canvas"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 320,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#constructor",
    "access": null,
    "description": "Constructor for the Canvas object",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "UI"
        ],
        "spread": false,
        "optional": false,
        "name": "ui",
        "description": "refers to the master ui object"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 321,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "ui",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#ui",
    "access": null,
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 322,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "canvas",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#canvas",
    "access": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 323,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "context",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#context",
    "access": null,
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 324,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "init",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#init",
    "access": null,
    "description": "Initializes the mouse handler, context menu, and other listeners",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "refers to the master graph object"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 325,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "mouseHandler",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#mouseHandler",
    "access": null,
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 326,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "contextMenu",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#contextMenu",
    "access": null,
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 327,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resetGraph",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#resetGraph",
    "access": null,
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "params": [
      {
        "name": "newGraph",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 328,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resize",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#resize",
    "access": null,
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 329,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "scale",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#scale",
    "access": null,
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 330,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "scale",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#scale",
    "access": null,
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 331,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "scaleValue",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#scaleValue",
    "access": null,
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 332,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "reset",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#reset",
    "access": null,
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 333,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "dx",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#dx",
    "access": null,
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 334,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "dy",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#dy",
    "access": null,
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 335,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "scale",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#scale",
    "access": null,
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 336,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clear",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#clear",
    "access": null,
    "description": null,
    "lineNumber": 107,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 337,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getCanvasX",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#getCanvasX",
    "access": null,
    "description": "Functions gets the x-position of the click event on the full canvas",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "the click event which triggered this call"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "x - The x-position of the click event on the full canvas"
    },
    "generator": false
  },
  {
    "__docId__": 338,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getCanvasY",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#getCanvasY",
    "access": null,
    "description": "Functions gets the y-position of the click event on the full canvas",
    "lineNumber": 132,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "the click event which triggered this call"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "y - The y-position of the click event on the full canvas"
    },
    "generator": false
  },
  {
    "__docId__": 339,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#update",
    "access": null,
    "description": null,
    "lineNumber": 143,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 340,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "initListeners",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#initListeners",
    "access": null,
    "description": "Creates all the listeners for every event which happens upon the canvas\nBased on the event it calls the relevant function",
    "lineNumber": 166,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 341,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "scale",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#scale",
    "access": null,
    "description": null,
    "lineNumber": 231,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 342,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "scale",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#scale",
    "access": null,
    "description": null,
    "lineNumber": 234,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 343,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "dx",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#dx",
    "access": null,
    "description": null,
    "lineNumber": 266,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 344,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "dy",
    "memberof": "src/js/ui/canvas.js~Canvas",
    "longname": "src/js/ui/canvas.js~Canvas#dy",
    "access": null,
    "description": null,
    "lineNumber": 267,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 345,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/ui/context-menu.js",
    "memberof": null,
    "longname": "src/js/ui/context-menu.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Node from '../data/node/node';\r\nimport Edge from '../data/edge/edge';\r\n\r\nconst MENU_TOGGLE_CLASS = 'context-menu--active';\r\n\r\nconst MENU_SECTION_CLASS = 'context-menu__section';\r\nconst MENU_SECTION_VISIBILITY_CLASS = 'context-menu__section--visible';\r\nconst MENU_SECTION_NAME_ATTRIBUTE = 'data-name';\r\n\r\nconst MENU_ITEM_TYPE_ATTRIBUTE = 'data-type';\r\nconst MENU_ITEM_DATA_ATTRIBUTE = 'data-data';\r\n\r\n/**\r\n * The context menu html object which reacts to context clicks\r\n * @class ContextMenu\r\n */\r\nclass ContextMenu {\r\n\r\n  /**\r\n   * An instance of the UI\r\n   * @type {UI}\r\n   */\r\n  ui;\r\n\r\n  /**\r\n   * An instance of the mouseHandler which interfaces the canvas with the graph\r\n   * @type {MouseHandler}\r\n   */\r\n  mouseHandler;\r\n\r\n  /**\r\n   * An instance of the HTMLElement for the context menu\r\n   * @type {HTMLElement}\r\n   */\r\n  contextMenu;\r\n\r\n  /**\r\n   * A boolean variable which tracks whether or not the context menu is displayed\r\n   * @type {Boolean}\r\n   */\r\n  isDisplayed = false;\r\n\r\n  /**\r\n   * A number variable which tracks the x-position of the context menu\r\n   * @type {Number}\r\n   */\r\n  menuPosX;\r\n\r\n  /**\r\n   * A number variable which tracks the y-position of the context menu\r\n   * @type {Number}\r\n   */\r\n  menuPosY;\r\n\r\n  /**\r\n   * The currently selected component, can either be a node, an edge, or null\r\n   * @type {Object}\r\n   */\r\n  component;\r\n\r\n  /**\r\n   * Constructor for the context menu class\r\n   * @param {UI} ui -  reference to the master UI object\r\n   * @param {MouseHandler} mouseHandler - reference to the master mouseHandler object\r\n   */\r\n  constructor(ui, mouseHandler) {\r\n    this.ui = ui;\r\n    this.mouseHandler = mouseHandler;\r\n    this.contextMenu = document.getElementById('context-menu');\r\n    this.initListeners();\r\n  }\r\n\r\n  /**\r\n   * Initializes the listeners for clicks upon the context-menu element\r\n   */\r\n  initListeners() {\r\n    this.contextMenu.addEventListener('mouseup', (event) => {\r\n      let type = event.target.getAttribute(MENU_ITEM_TYPE_ATTRIBUTE);\r\n      let value = event.target.getAttribute(MENU_ITEM_DATA_ATTRIBUTE);\r\n\r\n      if (type === 'add') {\r\n        this.mouseHandler.contextAdd(value, this.menuPosX, this.menuPosY);\r\n      } else if (type === 'toggle') {\r\n        this.mouseHandler.contextToggle(value);\r\n      } else if (type === 'delete') {\r\n        this.mouseHandler.contextDelete();\r\n      } else if (type === 'edit') {\r\n        this.mouseHandler.contextSelect(event, this.ui.toolbar.currentTool, this.menuPosX, this.menuPosY);\r\n      } else if (type === 'save') {\r\n        let downloadLink = document.createElement('a');\r\n        downloadLink.href = this.ui.canvas.canvas.toDataURL('image/png');\r\n        downloadLink.download = 'canvas.png';\r\n        downloadLink.target = '_blank';\r\n        document.body.appendChild(downloadLink);\r\n        downloadLink.dispatchEvent(new MouseEvent('click'));\r\n        document.body.removeChild(downloadLink);\r\n      }\r\n\r\n      if (event.button !== 2) {\r\n        this.toggleContextMenu();\r\n      }\r\n    });\r\n\r\n    this.contextMenu.addEventListener('contextmenu', (event) => {\r\n      event.preventDefault();\r\n      this.toggleContextMenu();\r\n    });\r\n\r\n    document.addEventListener('click', (event) => {\r\n      if (!this.contextMenu.contains(event.target)) {\r\n        if (this.isDisplayed) {\r\n          this.toggleContextMenu();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleContextMenu() {\r\n    if (this.isDisplayed) {\r\n      this.contextMenu.classList.remove(MENU_TOGGLE_CLASS);\r\n    } else {\r\n      this.contextMenu.classList.add(MENU_TOGGLE_CLASS);\r\n    }\r\n    this.isDisplayed = !this.isDisplayed;\r\n  }\r\n\r\n  /**\r\n   * Repositions the context menu based on where the click was adjusting for clicks that might place the context menu off screen\r\n   * @param {HTMLEvent} event - click event that toggles the context menu opening\r\n   */\r\n  repositionMenu(event) {\r\n    let xpos = event.clientX;\r\n    let ypos = event.clientY;\r\n\r\n    this.contextMenu.style.left = xpos + 'px';\r\n    this.contextMenu.style.top = ypos + 'px';\r\n\r\n    let distanceRight = document.body.offsetWidth - xpos - this.contextMenu.offsetWidth;\r\n    let distanceBottom = document.body.offsetHeight - ypos - this.contextMenu.offsetHeight;\r\n\r\n    if (distanceRight < 0) {\r\n      this.contextMenu.style.left = `${xpos + distanceRight}px`;\r\n    }\r\n    if (distanceBottom < 0) {\r\n      this.contextMenu.style.top = `${ypos - this.contextMenu.offsetHeight}px`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Function called by canvas when context menu click happens\r\n   * @param {HTMLEvent} event - click event that toggles the context menu opening\r\n   * @param {Number} x - x position of the click event\r\n   * @param {Number} y - y position of the click event\r\n   */\r\n  contextmenuEventListener(event, x, y) {\r\n    this.menuPosX = x;\r\n    this.menuPosY = y;\r\n\r\n    this.component = this.mouseHandler.contextComponent(event, this.menuPosX, this.menuPosY);\r\n\r\n    this.toggleContextMenu();\r\n\r\n    // hide all menu sections\r\n    let sectionElements = this.contextMenu.querySelectorAll(`.${MENU_SECTION_CLASS}`);\r\n    for (let i = 0; i < sectionElements.length; i++) {\r\n      sectionElements[i].classList.remove(MENU_SECTION_VISIBILITY_CLASS);\r\n    }\r\n\r\n    // populate array with names of menu sections to be displayed\r\n    let sections = [];\r\n    if (this.component !== null) {\r\n      sections.push('component');\r\n      if (this.component instanceof Node) {\r\n        sections.push('node');\r\n      } else if (this.component instanceof Edge) {\r\n        sections.push('edge');\r\n      }\r\n    } else {\r\n      sections.push('default');\r\n    }\r\n    sections.push('action');\r\n\r\n    // make menu sections visible\r\n    for (let section of sections) {\r\n      let sectionElement = this.contextMenu.querySelector(`.${MENU_SECTION_CLASS}[${MENU_SECTION_NAME_ATTRIBUTE}=\"${section}\"]`);\r\n      sectionElement.classList.add(MENU_SECTION_VISIBILITY_CLASS);\r\n    }\r\n\r\n    this.repositionMenu(event);\r\n  }\r\n\r\n}\r\n\r\nexport { ContextMenu };\r\nexport default ContextMenu;\r\n"
  },
  {
    "__docId__": 346,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "MENU_TOGGLE_CLASS",
    "memberof": "src/js/ui/context-menu.js",
    "longname": "src/js/ui/context-menu.js~MENU_TOGGLE_CLASS",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/context-menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 347,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "MENU_SECTION_CLASS",
    "memberof": "src/js/ui/context-menu.js",
    "longname": "src/js/ui/context-menu.js~MENU_SECTION_CLASS",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/context-menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 348,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "MENU_SECTION_VISIBILITY_CLASS",
    "memberof": "src/js/ui/context-menu.js",
    "longname": "src/js/ui/context-menu.js~MENU_SECTION_VISIBILITY_CLASS",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/context-menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 349,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "MENU_SECTION_NAME_ATTRIBUTE",
    "memberof": "src/js/ui/context-menu.js",
    "longname": "src/js/ui/context-menu.js~MENU_SECTION_NAME_ATTRIBUTE",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/context-menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 350,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "MENU_ITEM_TYPE_ATTRIBUTE",
    "memberof": "src/js/ui/context-menu.js",
    "longname": "src/js/ui/context-menu.js~MENU_ITEM_TYPE_ATTRIBUTE",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/context-menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 351,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "MENU_ITEM_DATA_ATTRIBUTE",
    "memberof": "src/js/ui/context-menu.js",
    "longname": "src/js/ui/context-menu.js~MENU_ITEM_DATA_ATTRIBUTE",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/context-menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 352,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ContextMenu",
    "memberof": "src/js/ui/context-menu.js",
    "longname": "src/js/ui/context-menu.js~ContextMenu",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/ui/context-menu.js",
    "importStyle": "ContextMenu",
    "description": "The context menu html object which reacts to context clicks",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "ContextMenu"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 353,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/ui/context-menu.js~ContextMenu",
    "longname": "src/js/ui/context-menu.js~ContextMenu#constructor",
    "access": null,
    "description": "Constructor for the context menu class",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "UI"
        ],
        "spread": false,
        "optional": false,
        "name": "ui",
        "description": "reference to the master UI object"
      },
      {
        "nullable": null,
        "types": [
          "MouseHandler"
        ],
        "spread": false,
        "optional": false,
        "name": "mouseHandler",
        "description": "reference to the master mouseHandler object"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 354,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "ui",
    "memberof": "src/js/ui/context-menu.js~ContextMenu",
    "longname": "src/js/ui/context-menu.js~ContextMenu#ui",
    "access": null,
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 355,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "mouseHandler",
    "memberof": "src/js/ui/context-menu.js~ContextMenu",
    "longname": "src/js/ui/context-menu.js~ContextMenu#mouseHandler",
    "access": null,
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 356,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "contextMenu",
    "memberof": "src/js/ui/context-menu.js~ContextMenu",
    "longname": "src/js/ui/context-menu.js~ContextMenu#contextMenu",
    "access": null,
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 357,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "initListeners",
    "memberof": "src/js/ui/context-menu.js~ContextMenu",
    "longname": "src/js/ui/context-menu.js~ContextMenu#initListeners",
    "access": null,
    "description": "Initializes the listeners for clicks upon the context-menu element",
    "lineNumber": 76,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 358,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toggleContextMenu",
    "memberof": "src/js/ui/context-menu.js~ContextMenu",
    "longname": "src/js/ui/context-menu.js~ContextMenu#toggleContextMenu",
    "access": null,
    "description": null,
    "lineNumber": 118,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 359,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "isDisplayed",
    "memberof": "src/js/ui/context-menu.js~ContextMenu",
    "longname": "src/js/ui/context-menu.js~ContextMenu#isDisplayed",
    "access": null,
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 360,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "repositionMenu",
    "memberof": "src/js/ui/context-menu.js~ContextMenu",
    "longname": "src/js/ui/context-menu.js~ContextMenu#repositionMenu",
    "access": null,
    "description": "Repositions the context menu based on where the click was adjusting for clicks that might place the context menu off screen",
    "lineNumber": 131,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "click event that toggles the context menu opening"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 361,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "contextmenuEventListener",
    "memberof": "src/js/ui/context-menu.js~ContextMenu",
    "longname": "src/js/ui/context-menu.js~ContextMenu#contextmenuEventListener",
    "access": null,
    "description": "Function called by canvas when context menu click happens",
    "lineNumber": 155,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "click event that toggles the context menu opening"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x position of the click event"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y position of the click event"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 362,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "menuPosX",
    "memberof": "src/js/ui/context-menu.js~ContextMenu",
    "longname": "src/js/ui/context-menu.js~ContextMenu#menuPosX",
    "access": null,
    "description": null,
    "lineNumber": 156,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 363,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "menuPosY",
    "memberof": "src/js/ui/context-menu.js~ContextMenu",
    "longname": "src/js/ui/context-menu.js~ContextMenu#menuPosY",
    "access": null,
    "description": null,
    "lineNumber": 157,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 364,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "component",
    "memberof": "src/js/ui/context-menu.js~ContextMenu",
    "longname": "src/js/ui/context-menu.js~ContextMenu#component",
    "access": null,
    "description": null,
    "lineNumber": 159,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 365,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/ui/dropdown.js",
    "memberof": null,
    "longname": "src/js/ui/dropdown.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "const DROPDOWN_CLASS = 'dropdown';\r\nconst DROPDOWN_HIDDEN_CLASS = 'dropdown--hidden';\r\nconst DROPDOWN_TOGGLE_CLASS = 'dropdown--active';\r\n\r\nconst DROPDOWN_SELECT_CLASS = 'dropdown__select';\r\n\r\nconst DROPDOWN_DISPLAY_CLASS = 'dropdown__select__display';\r\n\r\nconst DROPDOWN_MENU_CLASS = 'dropdown__menu';\r\nconst DROPDOWN_MENU_TOGGLE_CLASS = 'dropdown__menu--active';\r\n\r\nconst DROPDOWN_OPTIONLIST_CLASS = 'dropdown__menu__list';\r\n\r\nconst DROPDOWN_OPTION_CLASS = 'dropdown__menu__list__item';\r\nconst DROPDOWN_OPTION_SELECTED_CLASS = 'dropdown__menu__list__item--selected';\r\nconst DROPDOWN_OPTION_INDEX_ATTRIBUTE = 'data-index';\r\nconst DROPDOWN_OPTION_VALUE_ATTRIBUTE = 'data-value';\r\nconst DROPDOWN_OPTION_LABEL_ATTRIBUTE = 'data-label';\r\n\r\n/**\r\n * Class to create custom dropdown menus, backed by HTML <select> objects.\r\n * @class Dropdown\r\n */\r\nclass Dropdown {\r\n\r\n  // <select> element that contains the values of the dropdown\r\n  selectElement;\r\n\r\n  // map of option names to objects containing labels for the options\r\n  optionMap;\r\n\r\n  // map of option names to objects containing html content and init() functions\r\n  optionContent;\r\n\r\n  // container element that is a common ancestor for all other dropdown elements\r\n  container;\r\n\r\n  // the element that displays the selected option\r\n  display;\r\n\r\n  // dropdown menu that contains all the options\r\n  menu;\r\n\r\n  // parent element of all the dropdown options\r\n  optionlist;\r\n\r\n  // boolean indicating whether or not the dropdown menu is being displayed\r\n  isDisplayingMenu = false;\r\n\r\n  // the current selected dropdown option\r\n  selectedOption = null;\r\n\r\n  /**\r\n   * Constructs a Dropdown object.\r\n   * @param  {Element} selectElement - Select DOM element.\r\n   */\r\n  constructor(selectElement) {\r\n    this.selectElement = selectElement;\r\n    this.createDropdown();\r\n  }\r\n\r\n  /**\r\n   * Returns the value of the selected option.\r\n   * @return {string} - Value of the selected option.\r\n   */\r\n  get value() {\r\n    if (!this.selectOption) {\r\n      throw Error('No option is selected');\r\n    }\r\n    return this.selectElement.options[this.selectOption.getAttribute(DROPDOWN_OPTION_INDEX_ATTRIBUTE)];\r\n  }\r\n\r\n  /**\r\n   * Returns an HTML string containing all the options for the dropdown menu.\r\n   * @return {string} - HTML string containing all the options for the dropdown menu.\r\n   */\r\n  getOptionsHtml() {\r\n    let options = this.selectElement.children;\r\n    let optionsHtml = '';\r\n    for (let i = 0; i < options.length; i++) {\r\n      let option = options[i];\r\n      optionsHtml += `\r\n        <li class=\"${DROPDOWN_OPTION_CLASS} ${this.selectElement.value === option.value ? DROPDOWN_OPTION_SELECTED_CLASS : ''}\"\r\n            ${DROPDOWN_OPTION_INDEX_ATTRIBUTE}=\"${option.index}\"\r\n            ${DROPDOWN_OPTION_VALUE_ATTRIBUTE}=\"${option.value}\"\r\n            ${DROPDOWN_OPTION_LABEL_ATTRIBUTE}=\"${this.optionMap[option.text].label}\">\r\n          ${this.optionContent.html}\r\n        </li>`;\r\n    }\r\n    return optionsHtml;\r\n  }\r\n\r\n  /**\r\n   * Creates a dropdown menu by appending HTML as a sibling of the select element.\r\n   */\r\n  createDropdown() {\r\n    let optionsHtml = this.getOptionsHtml();\r\n    let dropdownHtml = `\r\n      <div class=\"${DROPDOWN_CLASS}\">\r\n        <div class=\"${DROPDOWN_SELECT_CLASS}\">\r\n          <div class=\"${DROPDOWN_DISPLAY_CLASS}\"></div>\r\n          <div class=\"dropdown__select__arrow\">\r\n            <span></span>\r\n          </div>\r\n        </div>\r\n        <div class=\"${DROPDOWN_MENU_CLASS}\">\r\n          <ul class=\"${DROPDOWN_OPTIONLIST_CLASS}\">\r\n            ${optionsHtml}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    let ancestor = this.selectElement.parentNode;\r\n\r\n    let div = document.createElement('div');\r\n    div.innerHTML = dropdownHtml;\r\n    ancestor.appendChild(div.children[0]);\r\n\r\n    this.container = ancestor.querySelector(`.${DROPDOWN_CLASS}`);\r\n    this.display = ancestor.querySelector(`.${DROPDOWN_DISPLAY_CLASS}`);\r\n    this.menu = ancestor.querySelector(`.${DROPDOWN_MENU_CLASS}`);\r\n    this.optionlist = ancestor.querySelector(`.${DROPDOWN_OPTIONLIST_CLASS}`);\r\n\r\n    this.updateOptionContent();\r\n\r\n    this.initListeners();\r\n  }\r\n\r\n  /**\r\n   * Update all the displayed dropdown options using their respective init() functions in the \"optionContent\" field.\r\n   */\r\n  updateOptionContent() {\r\n    let options = this.optionlist.querySelectorAll(`.${DROPDOWN_OPTION_CLASS}`);\r\n    for (let i = 0; i < options.length; i++) {\r\n      let option = options[i];\r\n      if (option === this.selectedOption) {\r\n        this.optionContent.init(this.display, this.selectedOption.getAttribute(DROPDOWN_OPTION_VALUE_ATTRIBUTE));\r\n      }\r\n      this.optionContent.init(option, option.getAttribute(DROPDOWN_OPTION_VALUE_ATTRIBUTE));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize all event listeners for the dropdown menu.\r\n   */\r\n  initListeners() {\r\n    document.addEventListener('click', (event) => {\r\n      if (!this.container.contains(event.target)) {\r\n        this.hideMenu();\r\n      }\r\n    });\r\n\r\n    this.container.addEventListener('click', (event) => {\r\n      this.toggleMenu();\r\n    });\r\n    this.optionlist.addEventListener('click', (event) => {\r\n      if (event.target.classList.contains(DROPDOWN_OPTION_CLASS)) {\r\n        this.selectOption(event.target);\r\n      }\r\n    });\r\n\r\n    // Create MutationObserver to check for changes in the <select> element options\r\n    let obs = new MutationObserver((mutations, observer) => {\r\n      for (let mutation of mutations) {\r\n        if (mutation.addedNodes || mutation.removedNodes) {\r\n          this.updateOptions();\r\n          break;\r\n        }\r\n      }\r\n    });\r\n    // Observe document\r\n    obs.observe(this.selectElement, {\r\n      childList: true,\r\n      attributes: true,\r\n      characterData: true,\r\n      subtree: true\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update the status of the options and display the selected option. This is called when the options in the <select> element change.\r\n   */\r\n  updateOptions() {\r\n    this.optionlist.innerHTML = this.getOptionsHtml();\r\n\r\n    if (this.optionlist.children.length === 0) {\r\n      this.container.classList.add(DROPDOWN_HIDDEN_CLASS);\r\n    } else {\r\n      this.container.classList.remove(DROPDOWN_HIDDEN_CLASS);\r\n    }\r\n\r\n    let index = this.selectElement.selectedIndex;\r\n    this.selectedOption = this.optionlist.querySelector(`.${DROPDOWN_OPTION_CLASS}[${DROPDOWN_OPTION_INDEX_ATTRIBUTE}=\"${index}\"]`);\r\n    if (this.selectedOption) {\r\n      this.selectedOption.classList.add(DROPDOWN_OPTION_SELECTED_CLASS);\r\n    }\r\n    this.displaySelectedOption();\r\n    this.updateOptionContent();\r\n  }\r\n\r\n  /**\r\n   * Toggle the display of the dropdown menu.\r\n   */\r\n  toggleMenu() {\r\n    if (this.isDisplayingMenu) {\r\n      this.hideMenu();\r\n    } else {\r\n      this.showMenu();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show the dropdown menu.\r\n   */\r\n  showMenu() {\r\n    this.container.classList.add(DROPDOWN_TOGGLE_CLASS);\r\n    this.menu.classList.add(DROPDOWN_MENU_TOGGLE_CLASS);\r\n    this.isDisplayingMenu = true;\r\n  }\r\n\r\n  /**\r\n   * Hide the dropdown menu.\r\n   */\r\n  hideMenu() {\r\n    this.container.classList.remove(DROPDOWN_TOGGLE_CLASS);\r\n    this.menu.classList.remove(DROPDOWN_MENU_TOGGLE_CLASS);\r\n    this.isDisplayingMenu = false;\r\n  }\r\n\r\n  /**\r\n   * Selects an option in the dropdown menu and updates the display.\r\n   * @param  {Element} optionElement - The option that was selected.\r\n   */\r\n  selectOption(optionElement) {\r\n    if (this.selectedOption) {\r\n      this.selectedOption.classList.remove(DROPDOWN_OPTION_SELECTED_CLASS);\r\n    }\r\n\r\n    this.selectedOption = optionElement;\r\n    this.selectedOption.classList.add(DROPDOWN_OPTION_SELECTED_CLASS);\r\n\r\n    this.selectElement.options[this.selectElement.selectedIndex].selected = false;\r\n    this.selectElement.selectedIndex = this.selectedOption.getAttribute(DROPDOWN_OPTION_INDEX_ATTRIBUTE);\r\n    this.selectElement.options[this.selectElement.selectedIndex].selected = true;\r\n\r\n    // Dispatch the 'change' event since modifying selectedIndex doesn't do it automatically\r\n    let event = new Event('change');\r\n    this.selectElement.dispatchEvent(event);\r\n\r\n    this.displaySelectedOption();\r\n  }\r\n\r\n  /**\r\n   * Display the selected dropdown option by copying the content to the dropdown display area. If the content includes a canvas, the content of the canvas will be copied as well.\r\n   */\r\n  displaySelectedOption() {\r\n    if (this.selectedOption) {\r\n      this.display.innerHTML = this.selectedOption.innerHTML;\r\n\r\n      let srcCanvas = this.selectedOption.querySelector('canvas');\r\n      let destCanvas = this.display.querySelector('canvas');\r\n      if (srcCanvas && destCanvas) {\r\n        let destCtx = destCanvas.getContext('2d');\r\n        destCtx.clearRect(0, 0, destCanvas.width, destCanvas.height);\r\n        destCtx.drawImage(srcCanvas, 0, 0);\r\n      }\r\n    } else {\r\n      this.display.innerHTML = '';\r\n    }\r\n  }\r\n}\r\n\r\nexport { Dropdown };\r\nexport default Dropdown;\r\n"
  },
  {
    "__docId__": 366,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DROPDOWN_CLASS",
    "memberof": "src/js/ui/dropdown.js",
    "longname": "src/js/ui/dropdown.js~DROPDOWN_CLASS",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/dropdown.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 367,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DROPDOWN_HIDDEN_CLASS",
    "memberof": "src/js/ui/dropdown.js",
    "longname": "src/js/ui/dropdown.js~DROPDOWN_HIDDEN_CLASS",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/dropdown.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 368,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DROPDOWN_TOGGLE_CLASS",
    "memberof": "src/js/ui/dropdown.js",
    "longname": "src/js/ui/dropdown.js~DROPDOWN_TOGGLE_CLASS",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/dropdown.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 369,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DROPDOWN_SELECT_CLASS",
    "memberof": "src/js/ui/dropdown.js",
    "longname": "src/js/ui/dropdown.js~DROPDOWN_SELECT_CLASS",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/dropdown.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 370,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DROPDOWN_DISPLAY_CLASS",
    "memberof": "src/js/ui/dropdown.js",
    "longname": "src/js/ui/dropdown.js~DROPDOWN_DISPLAY_CLASS",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/dropdown.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 371,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DROPDOWN_MENU_CLASS",
    "memberof": "src/js/ui/dropdown.js",
    "longname": "src/js/ui/dropdown.js~DROPDOWN_MENU_CLASS",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/dropdown.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 372,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DROPDOWN_MENU_TOGGLE_CLASS",
    "memberof": "src/js/ui/dropdown.js",
    "longname": "src/js/ui/dropdown.js~DROPDOWN_MENU_TOGGLE_CLASS",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/dropdown.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 373,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DROPDOWN_OPTIONLIST_CLASS",
    "memberof": "src/js/ui/dropdown.js",
    "longname": "src/js/ui/dropdown.js~DROPDOWN_OPTIONLIST_CLASS",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/dropdown.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 374,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DROPDOWN_OPTION_CLASS",
    "memberof": "src/js/ui/dropdown.js",
    "longname": "src/js/ui/dropdown.js~DROPDOWN_OPTION_CLASS",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/dropdown.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 375,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DROPDOWN_OPTION_SELECTED_CLASS",
    "memberof": "src/js/ui/dropdown.js",
    "longname": "src/js/ui/dropdown.js~DROPDOWN_OPTION_SELECTED_CLASS",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/dropdown.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 376,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DROPDOWN_OPTION_INDEX_ATTRIBUTE",
    "memberof": "src/js/ui/dropdown.js",
    "longname": "src/js/ui/dropdown.js~DROPDOWN_OPTION_INDEX_ATTRIBUTE",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/dropdown.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 377,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DROPDOWN_OPTION_VALUE_ATTRIBUTE",
    "memberof": "src/js/ui/dropdown.js",
    "longname": "src/js/ui/dropdown.js~DROPDOWN_OPTION_VALUE_ATTRIBUTE",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/dropdown.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 378,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DROPDOWN_OPTION_LABEL_ATTRIBUTE",
    "memberof": "src/js/ui/dropdown.js",
    "longname": "src/js/ui/dropdown.js~DROPDOWN_OPTION_LABEL_ATTRIBUTE",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/dropdown.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 379,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Dropdown",
    "memberof": "src/js/ui/dropdown.js",
    "longname": "src/js/ui/dropdown.js~Dropdown",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/ui/dropdown.js",
    "importStyle": "Dropdown",
    "description": "Class to create custom dropdown menus, backed by HTML <select> objects.",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Dropdown"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 380,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/ui/dropdown.js~Dropdown",
    "longname": "src/js/ui/dropdown.js~Dropdown#constructor",
    "access": null,
    "description": "Constructs a Dropdown object.",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "selectElement",
        "description": "Select DOM element."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 381,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selectElement",
    "memberof": "src/js/ui/dropdown.js~Dropdown",
    "longname": "src/js/ui/dropdown.js~Dropdown#selectElement",
    "access": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 382,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "value",
    "memberof": "src/js/ui/dropdown.js~Dropdown",
    "longname": "src/js/ui/dropdown.js~Dropdown#value",
    "access": null,
    "description": "Returns the value of the selected option.",
    "lineNumber": 66,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Value of the selected option."
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 383,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getOptionsHtml",
    "memberof": "src/js/ui/dropdown.js~Dropdown",
    "longname": "src/js/ui/dropdown.js~Dropdown#getOptionsHtml",
    "access": null,
    "description": "Returns an HTML string containing all the options for the dropdown menu.",
    "lineNumber": 77,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "HTML string containing all the options for the dropdown menu."
    },
    "generator": false
  },
  {
    "__docId__": 384,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createDropdown",
    "memberof": "src/js/ui/dropdown.js~Dropdown",
    "longname": "src/js/ui/dropdown.js~Dropdown#createDropdown",
    "access": null,
    "description": "Creates a dropdown menu by appending HTML as a sibling of the select element.",
    "lineNumber": 96,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 385,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "container",
    "memberof": "src/js/ui/dropdown.js~Dropdown",
    "longname": "src/js/ui/dropdown.js~Dropdown#container",
    "access": null,
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 386,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "display",
    "memberof": "src/js/ui/dropdown.js~Dropdown",
    "longname": "src/js/ui/dropdown.js~Dropdown#display",
    "access": null,
    "description": null,
    "lineNumber": 121,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 387,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "menu",
    "memberof": "src/js/ui/dropdown.js~Dropdown",
    "longname": "src/js/ui/dropdown.js~Dropdown#menu",
    "access": null,
    "description": null,
    "lineNumber": 122,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 388,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "optionlist",
    "memberof": "src/js/ui/dropdown.js~Dropdown",
    "longname": "src/js/ui/dropdown.js~Dropdown#optionlist",
    "access": null,
    "description": null,
    "lineNumber": 123,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 389,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateOptionContent",
    "memberof": "src/js/ui/dropdown.js~Dropdown",
    "longname": "src/js/ui/dropdown.js~Dropdown#updateOptionContent",
    "access": null,
    "description": "Update all the displayed dropdown options using their respective init() functions in the \"optionContent\" field.",
    "lineNumber": 133,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 390,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "initListeners",
    "memberof": "src/js/ui/dropdown.js~Dropdown",
    "longname": "src/js/ui/dropdown.js~Dropdown#initListeners",
    "access": null,
    "description": "Initialize all event listeners for the dropdown menu.",
    "lineNumber": 147,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 391,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateOptions",
    "memberof": "src/js/ui/dropdown.js~Dropdown",
    "longname": "src/js/ui/dropdown.js~Dropdown#updateOptions",
    "access": null,
    "description": "Update the status of the options and display the selected option. This is called when the options in the <select> element change.",
    "lineNumber": 184,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 392,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selectedOption",
    "memberof": "src/js/ui/dropdown.js~Dropdown",
    "longname": "src/js/ui/dropdown.js~Dropdown#selectedOption",
    "access": null,
    "description": null,
    "lineNumber": 194,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 393,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toggleMenu",
    "memberof": "src/js/ui/dropdown.js~Dropdown",
    "longname": "src/js/ui/dropdown.js~Dropdown#toggleMenu",
    "access": null,
    "description": "Toggle the display of the dropdown menu.",
    "lineNumber": 205,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 394,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "showMenu",
    "memberof": "src/js/ui/dropdown.js~Dropdown",
    "longname": "src/js/ui/dropdown.js~Dropdown#showMenu",
    "access": null,
    "description": "Show the dropdown menu.",
    "lineNumber": 216,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 395,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "isDisplayingMenu",
    "memberof": "src/js/ui/dropdown.js~Dropdown",
    "longname": "src/js/ui/dropdown.js~Dropdown#isDisplayingMenu",
    "access": null,
    "description": null,
    "lineNumber": 219,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 396,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hideMenu",
    "memberof": "src/js/ui/dropdown.js~Dropdown",
    "longname": "src/js/ui/dropdown.js~Dropdown#hideMenu",
    "access": null,
    "description": "Hide the dropdown menu.",
    "lineNumber": 225,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 397,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "isDisplayingMenu",
    "memberof": "src/js/ui/dropdown.js~Dropdown",
    "longname": "src/js/ui/dropdown.js~Dropdown#isDisplayingMenu",
    "access": null,
    "description": null,
    "lineNumber": 228,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 398,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectOption",
    "memberof": "src/js/ui/dropdown.js~Dropdown",
    "longname": "src/js/ui/dropdown.js~Dropdown#selectOption",
    "access": null,
    "description": "Selects an option in the dropdown menu and updates the display.",
    "lineNumber": 235,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "optionElement",
        "description": "The option that was selected."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 399,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selectedOption",
    "memberof": "src/js/ui/dropdown.js~Dropdown",
    "longname": "src/js/ui/dropdown.js~Dropdown#selectedOption",
    "access": null,
    "description": null,
    "lineNumber": 240,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 400,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "displaySelectedOption",
    "memberof": "src/js/ui/dropdown.js~Dropdown",
    "longname": "src/js/ui/dropdown.js~Dropdown#displaySelectedOption",
    "access": null,
    "description": "Display the selected dropdown option by copying the content to the dropdown display area. If the content includes a canvas, the content of the canvas will be copied as well.",
    "lineNumber": 257,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 401,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/ui/form.js",
    "memberof": null,
    "longname": "src/js/ui/form.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\r\n * Call to initialize form functionality.\r\n */\r\nexport function init() {\r\n  initListeners();\r\n}\r\n\r\nfunction initListeners() {\r\n  // Create MutationObserver to check for newly added inputs\r\n  let obs = new MutationObserver((mutations, observer) => {\r\n    for (let mutation of mutations) {\r\n      if (mutation.addedNodes) {\r\n        for (let element of mutation.addedNodes) {\r\n          // Check if input was added\r\n          if (element.tagName === 'FIELDSET') {\r\n            let inputs = element.querySelectorAll('input, textarea');\r\n            for (let i = 0; i < inputs.length; i++) {\r\n              let input = inputs[i];\r\n              if (input.value === '') {\r\n                input.classList.add('empty');\r\n              } else {\r\n                input.classList.remove('empty');\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  // Observe document for element addition/removal\r\n  obs.observe(document, {\r\n    childList: true,\r\n    subtree: true\r\n  });\r\n\r\n  document.addEventListener('change', (event) => {\r\n    checkInputEmpty(event);\r\n  });\r\n\r\n  document.addEventListener('input', (event) => {\r\n    checkInputEmpty(event);\r\n  });\r\n\r\n  document.addEventListener('click', (event) => {\r\n    checkLabelClick(event);\r\n  });\r\n}\r\n\r\nfunction checkInputEmpty(event) {\r\n  if (event.target.tagName === 'INPUT' || event.target.tagName === 'TEXTAREA') {\r\n    let input = event.target;\r\n    if (!input.validity.valid) {\r\n      return;\r\n    }\r\n    if (input.value === '') {\r\n      input.classList.add('empty');\r\n    } else {\r\n      input.classList.remove('empty');\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkLabelClick(event) {\r\n  if (event.target.tagName === 'LABEL') {\r\n    let input = event.target.parentNode.querySelector('input, select, textarea');\r\n    let type = input.type;\r\n\r\n    if (type === 'checkbox' || type === 'radio' || type === 'color') {\r\n      input.click();\r\n    } else {\r\n      input.focus();\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Get the value of the given form input.\r\n * @param  {Element} input - Form input DOM element.\r\n * @return {(boolean|number|string)} - Value of the input.\r\n */\r\nexport function getInputValue(input) {\r\n  let value;\r\n  if (input.type === 'checkbox') {\r\n    value = input.checked;\r\n  } else if (input.type === 'number') {\r\n    value = parseInt(input.value, 10);\r\n  } else {\r\n    value = input.value;\r\n  }\r\n  return value;\r\n}\r\n\r\n/**\r\n * Create an html string for a form given an array of field types.\r\n * @param  {Array.<InputType>} fields - Array of input types.\r\n * @return {string} - String containing HTML for the form.\r\n */\r\nexport function createForm(fields) {\r\n  let html = '';\r\n\r\n  for (let field of fields) {\r\n    let fieldHtml;\r\n\r\n    let type = field.type;\r\n    let name = field.name;\r\n    let value = field.value;\r\n    if (type === 'number') {\r\n      if (value !== Math.round(value)) {\r\n        value = value.toFixed(2);\r\n      }\r\n      fieldHtml = `<input type=\"number\" name=\"${name}\" value=\"${value}\" step=\"any\">`;\r\n    } else if (type === 'boolean') {\r\n      fieldHtml = `<input type=\"checkbox\" name=\"${name}\" ${value ? 'checked=\"true\"' : ''}>`;\r\n    } else if (type === 'string') {\r\n      fieldHtml = `<input type=\"text\" name=\"${name}\" value=\"${value}\">`;\r\n    } else if (type === 'color') {\r\n      fieldHtml = `<input type=\"color\" name=\"${name}\" value=\"${value}\">`;\r\n    } else {\r\n      fieldHtml = `<output>${value}</output>`;\r\n    }\r\n\r\n    let displayName = field.displayName;\r\n    html += `<fieldset>${fieldHtml}<label>${displayName}</label></fieldset>`;\r\n  }\r\n\r\n  return html;\r\n}\r\n\r\n/**\r\n * Create a form with inputs for graph elements. Also has options for a button to submit the form.\r\n * @param  {Array.<InputType>} fields - Array of input types.\r\n * @param  {boolean} canSubmit - Whether or not the form can be submitted.\r\n * @param  {string} submitText - Text to be displayed on the submit button.\r\n * @return {string} - String containing HTML for the form.\r\n */\r\nexport function createGraphForm(fields, canSubmit, submitText) {\r\n  let html = '';\r\n\r\n  for (let field of fields) {\r\n    let fieldHtml;\r\n\r\n    let type = field.type;\r\n    let name = field.name;\r\n    let value = field.value;\r\n    let isRequired = field.required;\r\n    let displayName = field.displayName;\r\n\r\n    if (type === 'number') {\r\n      fieldHtml = `<input type=\"number\" name=\"${name}\" value=\"${value}\" step=\"any\" ${isRequired ? 'required' : ''}><label>${displayName}</label>`;\r\n    } else if (type === 'boolean') {\r\n      fieldHtml = `<input type=\"checkbox\" name=\"${name}\" ${value ? 'checked=\"true\"' : ''} ${isRequired ? 'required' : ''}><label>${displayName}</label>`;\r\n    } else if (type === 'string') {\r\n      fieldHtml = `<input type=\"text\" name=\"${name}\" value=\"${value}\" ${isRequired ? 'required' : ''}><label>${displayName}</label>`;\r\n    } else if (type === 'color') {\r\n      fieldHtml = `<input type=\"color\" name=\"${name}\" value=\"${value}\" ${isRequired ? 'required' : ''}><label>${displayName}</label>`;\r\n    } else if (type === 'node' || type === 'edge') {\r\n      fieldHtml = `\r\n        <input type=\"hidden\" name=\"${name}\" data-type=\"${type}\" ${value ? 'value=\"${value.id}\"' : ''} ${isRequired ? 'required' : ''}>\r\n        <label>${displayName}</label>\r\n        <output name=\"${name}\">${value ? type + value.id : '&nbsp;'}</output>\r\n        <button type=\"button\" class=\"input-select-btn btn-raised\">Select</button>\r\n      `;\r\n    }\r\n\r\n    html += `\r\n      <fieldset>\r\n        ${fieldHtml}\r\n      </fieldset>\r\n    `;\r\n  }\r\n\r\n\n  html += `<button type=\"button\" class=\"form__submit-btn btn-raised btn-primary\">${submitText}</button>`;\r\n\n\r\n  return html;\r\n}\r\n\r\n/**\r\n * Get all of the data from a form.\r\n * @param  {Element} form - Form DOM element.\r\n * @param  {Graph} graph - The current graph object.\r\n * @return {Object.<string,*>} - Object containing input names and their associated input values\r\n */\r\nexport function getData(form, graph) {\r\n  let data = {};\r\n  let fieldsets = form.querySelectorAll('fieldset');\r\n\r\n  for (let i = 0; i < fieldsets.length; i++) {\r\n    let inputs = fieldsets[i].querySelectorAll('input, select, textarea');\r\n    let fieldData = getFieldData(inputs, graph);\r\n    for (let field of Object.keys(fieldData)) {\r\n      data[field] = fieldData[field];\r\n    }\r\n  }\r\n  return data;\r\n}\r\n\r\n/**\r\n * Add/remove the CSS class 'error' to the specified form input.\r\n * @param  {Element} form - Form dom element.\r\n * @param  {string} inputName - Name of the input.\r\n * @param  {boolean} showError - Whether or not the input should display an error.\r\n */\r\nexport function displayError(form, inputName, showError) {\r\n  let fieldset = form.querySelector(`[name=\"${inputName}\"]`);\r\n  if (showError) {\r\n    fieldset.classList.add('error');\r\n  } else {\r\n    fieldset.classList.remove('error');\r\n  }\r\n}\r\n\r\nfunction getFieldData(inputs, graph) {\r\n  let data = {};\r\n  for (let i = 0; i < inputs.length; i++) {\r\n    let input = inputs[i];\r\n    let name = input.name;\r\n    let value;\r\n    if (input.tagName === 'INPUT') {\r\n      value = getInputValueLocal(input, graph);\r\n    }\r\n    data[name] = value;\r\n  }\r\n  return data;\r\n}\r\n\r\n/**\r\n * Get the value of a single input. Used when the input could contain a reference to a Node or Edge.\r\n * @param  {Element} input - Form input DOM element.\r\n * @param  {Graph} graph - Graph object.\r\n * @return {(boolean|number|string|Node|Edge)} - The value of the input.\r\n */\r\nexport function getInputValueLocal(input, graph) {\r\n  let value;\r\n  let type = input.getAttribute('type');\r\n  let dataType = input.getAttribute('data-type');\r\n  if (type === 'checkbox') {\r\n    value = input.checked;\r\n  } else if (type === 'number') {\r\n    value = parseInt(input.value, 10);\r\n  } else if (type === 'hidden' && [ 'node', 'edge' ].indexOf(dataType) >= 0) {\r\n    let id = parseInt(input.value, 10);\r\n    if (dataType === 'node') {\r\n      value = getNodeById(graph, id);\r\n    } else if (dataType === 'edge') {\r\n      value = getEdgeById(graph, id);\r\n    }\r\n  } else {\r\n    value = input.value;\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction getNodeById(graph, id) {\r\n  let value = null;\r\n  graph.forEachNode((node) => {\r\n    if (node.id === id) {\r\n      value = node;\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n  return value;\r\n}\r\n\r\nfunction getEdgeById(graph, id) {\r\n  let value = null;\r\n  graph.forEachEdge((edge) => {\r\n    if (edge.id === id) {\r\n      value = edge;\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n  return value;\r\n}\r\n"
  },
  {
    "__docId__": 402,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "init",
    "memberof": "src/js/ui/form.js",
    "longname": "src/js/ui/form.js~init",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/ui/form.js",
    "importStyle": "{init}",
    "description": "Call to initialize form functionality.",
    "lineNumber": 4,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 403,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "initListeners",
    "memberof": "src/js/ui/form.js",
    "longname": "src/js/ui/form.js~initListeners",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/form.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 404,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "checkInputEmpty",
    "memberof": "src/js/ui/form.js",
    "longname": "src/js/ui/form.js~checkInputEmpty",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/form.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 405,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "checkLabelClick",
    "memberof": "src/js/ui/form.js",
    "longname": "src/js/ui/form.js~checkLabelClick",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/form.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 406,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "getInputValue",
    "memberof": "src/js/ui/form.js",
    "longname": "src/js/ui/form.js~getInputValue",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/ui/form.js",
    "importStyle": "{getInputValue}",
    "description": "Get the value of the given form input.",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "input",
        "description": "Form input DOM element."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean",
        "number",
        "string"
      ],
      "spread": false,
      "description": "Value of the input."
    },
    "generator": false
  },
  {
    "__docId__": 407,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "createForm",
    "memberof": "src/js/ui/form.js",
    "longname": "src/js/ui/form.js~createForm",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/ui/form.js",
    "importStyle": "{createForm}",
    "description": "Create an html string for a form given an array of field types.",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array.<InputType>"
        ],
        "spread": false,
        "optional": false,
        "name": "fields",
        "description": "Array of input types."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "String containing HTML for the form."
    },
    "generator": false
  },
  {
    "__docId__": 408,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "createGraphForm",
    "memberof": "src/js/ui/form.js",
    "longname": "src/js/ui/form.js~createGraphForm",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/ui/form.js",
    "importStyle": "{createGraphForm}",
    "description": "Create a form with inputs for graph elements. Also has options for a button to submit the form.",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array.<InputType>"
        ],
        "spread": false,
        "optional": false,
        "name": "fields",
        "description": "Array of input types."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "canSubmit",
        "description": "Whether or not the form can be submitted."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "submitText",
        "description": "Text to be displayed on the submit button."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "String containing HTML for the form."
    },
    "generator": false
  },
  {
    "__docId__": 409,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "getData",
    "memberof": "src/js/ui/form.js",
    "longname": "src/js/ui/form.js~getData",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/ui/form.js",
    "importStyle": "{getData}",
    "description": "Get all of the data from a form.",
    "lineNumber": 186,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "form",
        "description": "Form DOM element."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current graph object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object.<string,*>"
      ],
      "spread": false,
      "description": "Object containing input names and their associated input values"
    },
    "generator": false
  },
  {
    "__docId__": 410,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "displayError",
    "memberof": "src/js/ui/form.js",
    "longname": "src/js/ui/form.js~displayError",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/ui/form.js",
    "importStyle": "{displayError}",
    "description": "Add/remove the CSS class 'error' to the specified form input.",
    "lineNumber": 206,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "form",
        "description": "Form dom element."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "inputName",
        "description": "Name of the input."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "showError",
        "description": "Whether or not the input should display an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 411,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "getFieldData",
    "memberof": "src/js/ui/form.js",
    "longname": "src/js/ui/form.js~getFieldData",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/form.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 215,
    "undocument": true,
    "params": [
      {
        "name": "inputs",
        "types": [
          "*"
        ]
      },
      {
        "name": "graph",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 412,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "getInputValueLocal",
    "memberof": "src/js/ui/form.js",
    "longname": "src/js/ui/form.js~getInputValueLocal",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/ui/form.js",
    "importStyle": "{getInputValueLocal}",
    "description": "Get the value of a single input. Used when the input could contain a reference to a Node or Edge.",
    "lineNumber": 235,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "input",
        "description": "Form input DOM element."
      },
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "Graph object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean",
        "number",
        "string",
        "Node",
        "Edge"
      ],
      "spread": false,
      "description": "The value of the input."
    },
    "generator": false
  },
  {
    "__docId__": 413,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "getNodeById",
    "memberof": "src/js/ui/form.js",
    "longname": "src/js/ui/form.js~getNodeById",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/form.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 256,
    "undocument": true,
    "params": [
      {
        "name": "graph",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 414,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "getEdgeById",
    "memberof": "src/js/ui/form.js",
    "longname": "src/js/ui/form.js~getEdgeById",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/form.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 268,
    "undocument": true,
    "params": [
      {
        "name": "graph",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 415,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/ui/sidebar-algorithm.js",
    "memberof": null,
    "longname": "src/js/ui/sidebar-algorithm.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import SidebarContent from '../ui/sidebar-content';\nimport Node from '../data/node/node';\r\nimport Edge from '../data/edge/edge';\r\nimport Stepper from '../algorithm/stepper';\r\nimport scrollToElement from '../util/scroll-to-element';\r\n\r\n/**\r\n * Sidebar that accompanies the AlgorithmTool.\r\n * @class SidebarAlgorithm\r\n */\r\nclass SidebarAlgorithm extends SidebarContent {\r\n\r\n  /**\r\n   * An instance of a Stepper. Used for stepping through algorithm results.\r\n   * @type {Stepper}\r\n   */\r\n  stepper;\r\n\r\n  /**\r\n   * Instance of the current algorithm.\r\n   * @type {AbstractAlgorithm}\r\n   */\r\n  curAlgorithm;\r\n\r\n  /**\r\n   * Constructor calls the super, creates a new stepper object and then assigns algorithm specific button listeners to the sidebar\r\n   * @param  {Graph} graph - Reference to the master graph object\r\n   * @constructs SidebarAlgorithm\r\n   */\r\n  constructor(graph) {\r\n    super(graph);\r\n    this.graph = graph;\r\n    this.stepper = new Stepper();\r\n    document.getElementById('sidebar').addEventListener('click', (event) => {\r\n      if (event.target.classList.contains('algorithm-next-btn')) {\r\n        this.stepper.stepForward();\r\n        this.updateStepGUI();\r\n      } else if (event.target.classList.contains('algorithm-prev-btn')) {\r\n        this.stepper.stepBackward();\r\n        this.updateStepGUI();\r\n      } else if (event.target.classList.contains('algorithm-play-toggle-btn')) {\r\n        if (this.stepper.interval !== null) {\r\n          this.stepper.pause();\r\n          event.target.textContent = 'Play';\r\n        } else if (this.stepper.interval === null && this.stepper.result !== null) {\r\n          this.stepper.play(() => {\r\n            this.updateStepGUI();\r\n          });\r\n          event.target.textContent = 'Pause';\r\n        }\r\n      } else if (event.target.classList.contains('algorithm-speed-up-btn')) {\r\n        if (this.stepper.speedUp() === true) {\r\n          let speed = this.tabs.getTabContentElement('algorithm').querySelector('.speed-notch--active');\r\n          if (speed) {\r\n            speed.classList.remove('speed-notch--active');\r\n            speed.nextElementSibling.classList.add('speed-notch--active');\r\n          }\r\n        }\r\n      } else if (event.target.classList.contains('algorithm-slow-down-btn')) {\r\n        if (this.stepper.slowDown() === true) {\r\n          let speed = this.tabs.getTabContentElement('algorithm').querySelector('.speed-notch--active');\r\n          if (speed) {\r\n            speed.classList.remove('speed-notch--active');\r\n            speed.previousElementSibling.classList.add('speed-notch--active');\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    document.getElementById('sidebar').addEventListener('mouseover', (event) => {\r\n      this.hoverEvent(true);\r\n    });\r\n\r\n    document.getElementById('sidebar').addEventListener('mouseout', (event) => {\r\n      this.hoverEvent(false);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Called to check for hovering over a graph link (link that associates text with an object in the Graph).\r\n   * @param  {boolean} bool - Whether or not the graph link is currently being hovered over.\r\n   */\r\n  hoverEvent(bool) {\r\n    if (event.target.classList.contains('graph-link')) {\r\n      let type = event.target.getAttribute('data-type');\r\n      let id = event.target.getAttribute('data-id');\r\n      this.toggleHover(type, parseInt(id, 10), bool);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Runs the current algorithm and displays the results in the sidebar.\r\n   */\r\n  run() {\r\n    this.stepper.resetGraph();\r\n    this.curAlgorithm.reset();\r\n    for (let inputName of Object.keys(this.curAlgorithm.inputs)) {\r\n      this.curAlgorithm[inputName] = this.curAlgorithm.inputs[inputName];\r\n    }\r\n\r\n    let hasNextStep = true;\r\n    while (hasNextStep) {\r\n      hasNextStep = this.curAlgorithm.step();\r\n    }\r\n\r\n    this.stepper.setResult(this.curAlgorithm.result);\r\n\r\n    this.updateStepGUI();\r\n\r\n    let stepsHtml = `\r\n      <li class=\"stepper__step stepper__step--active\" data-index=\"-1\">\r\n        <div class=\"stepper__step__header\">\r\n          <div class=\"stepper__step__header__number\"></div><div class=\"stepper__step__header__description\">Initial state</div>\r\n        </div>\r\n        <div class=\"stepper__step__details\">\r\n          <div class=\"stepper__step__details__spacer\"></div>\r\n          <div class=\"stepper__step__details__content\"></div>\r\n        </div>\r\n      </li>\r\n    `;\r\n\r\n    for (let stepIndex = 0; stepIndex < this.stepper.result.timeline.length; stepIndex++) {\r\n      stepsHtml += `\r\n        <li class=\"stepper__step\" data-index=\"${stepIndex}\">\r\n          <div class=\"stepper__step__header\">\r\n            <div class=\"stepper__step__header__number\">${stepIndex + 1}</div><div class=\"stepper__step__header__description\">${this.stepper.result.timeline[stepIndex].description}</div>\r\n          </div>\r\n          <div class=\"stepper__step__details\">\r\n            <div class=\"stepper__step__details__spacer\"></div>\r\n            <div class=\"stepper__step__details__content\"></div>\r\n          </div>\r\n        </li>\r\n      `;\r\n    }\r\n\r\n    stepsHtml += `\r\n      <li class=\"stepper__step\" data-index=\"${this.stepper.result.timeline.length}\">\r\n        <div class=\"stepper__step__header\">\r\n          <div class=\"stepper__step__header__number\"></div><div class=\"stepper__step__header__description\">Finished</div>\r\n        </div>\r\n        <div class=\"stepper__step__details\">\r\n          <div class=\"stepper__step__details__spacer\"></div>\r\n          <div class=\"stepper__step__details__content\"></div>\r\n        </div>\r\n      </li>\r\n    `;\r\n\r\n    let stepper = this.tabs.getTabContentElement('algorithm').querySelector('.stepper');\r\n    stepper.innerHTML = stepsHtml;\r\n\r\n    let prevBtn = document.getElementById('sidebar').querySelector('.algorithm-prev-btn');\r\n    let nextBtn = document.getElementById('sidebar').querySelector('.algorithm-next-btn');\r\n    let playBtn = document.getElementById('sidebar').querySelector('.algorithm-play-toggle-btn');\r\n    let fastBtn = document.getElementById('sidebar').querySelector('.algorithm-speed-up-btn');\r\n    let slowBtn = document.getElementById('sidebar').querySelector('.algorithm-slow-down-btn');\r\n    fastBtn.disabled = false;\r\n    slowBtn.disabled = false;\r\n    prevBtn.disabled = true;\r\n    nextBtn.disabled = false;\r\n    playBtn.disabled = false;\r\n  }\r\n\r\n  /**\r\n   * Update the state of the buttons in the sidebar.\r\n   */\r\n  updateStepGUI() {\r\n    let prevBtn = document.getElementById('sidebar').querySelector('.algorithm-prev-btn');\r\n    let nextBtn = document.getElementById('sidebar').querySelector('.algorithm-next-btn');\r\n    let stepIndex = this.stepper.result.stepIndex;\r\n    let maxStepIndex = this.stepper.result.timeline.length;\r\n    if (stepIndex === maxStepIndex) {\r\n      nextBtn.disabled = true;\r\n    } else if (stepIndex === -1) {\r\n      prevBtn.disabled = true;\r\n    }\r\n    if (stepIndex > -1) {\r\n      prevBtn.disabled = false;\r\n    }\r\n    if (stepIndex < maxStepIndex) {\r\n      nextBtn.disabled = false;\r\n    }\r\n\r\n    let playBtn = document.getElementById('sidebar').querySelector('.algorithm-play-toggle-btn');\r\n    if (stepIndex === maxStepIndex) {\r\n      playBtn.textContent = 'Play';\r\n      playBtn.disabled = true;\r\n    } else if (stepIndex < maxStepIndex) {\r\n      playBtn.disabled = false;\r\n    }\r\n\r\n    let activeStep = this.tabs.getTabContentElement('algorithm').querySelector('.stepper__step--active');\r\n    if (activeStep) {\r\n      activeStep.classList.remove('stepper__step--active');\r\n    }\r\n\r\n    let step = this.tabs.getTabContentElement('algorithm').querySelector(`.stepper__step[data-index=\"${this.stepper.result.stepIndex}\"]`);\r\n    if (step) {\r\n      step.classList.add('stepper__step--active');\r\n      let resultsContainer = document.getElementById('sidebar').querySelector('.algorithm-results');\r\n      scrollToElement(resultsContainer, step.offsetTop - resultsContainer.offsetTop - 10, 100, 'easeInOutSine');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle the hover state of the associated Node or Edge when a graph link is being hovered.\r\n   * @param  {string}  type - String containing the type of the object.\r\n   * @param  {number}  id - ID of the object.\r\n   * @param  {boolean} isHovering - Whether or not the mouse is hovering over the graph link.\r\n   */\r\n  toggleHover(type, id, isHovering) {\r\n    if (type === 'node') {\r\n      this.graph.forEachNode((node) => {\r\n        if (node.id === id) {\r\n          node.isSelected = isHovering;\r\n        }\r\n      });\r\n    } else if (type === 'edge') {\r\n      this.graph.forEachEdge((edge) => {\r\n        if (edge.id === id) {\r\n          edge.isSelected = isHovering;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the sidebar content is switched to this.\r\n   * @override\r\n   */\r\n  display() {\r\n    this.tabs.replaceTabs({\r\n      algorithm: 'Algorithm'\r\n    });\r\n    this.tabs.setTabScroll('algorithm', false);\r\n    this.tabs.selectTab('algorithm');\r\n  }\r\n\r\n  /**\r\n   * Create a graph link element using the specified Node or Edge.\r\n   * @param  {(Node|Edge)} obj - Node or Edge object to create a graph link for.\r\n   * @return {string} - String containing the HTML for the graph link to the specified Node or Edge.\r\n   */\r\n  createLinkElement(obj) {\r\n    let id = obj.id;\r\n    let name;\r\n\r\n    let type;\r\n    if (obj instanceof Node) {\r\n      type = 'node';\r\n      name = `Node ${id}`;\r\n    } else if (obj instanceof Edge) {\r\n      type = 'edge';\r\n      name = `Edge ${id}`;\r\n    }\r\n\r\n    return `\r\n      <div class=\"graph-link\" data-type=\"${type}\" data-id=\"${id}\">${name}</div>\r\n    `;\r\n  }\r\n\r\n  /**\r\n   * Set the current algorithm to a new instance of the given algorithm class.\r\n   * @param {Object} AlgorithmClass - The algorihtm class\r\n   */\r\n  setAlgorithm(AlgorithmClass) {\r\n    this.curAlgorithm = new AlgorithmClass(this.graph);\r\n    this.stepper.reset();\r\n\r\n    let html = `\r\n      <div class=\"algorithm-content\">\r\n        <div class=\"algorithm-controls\">\r\n          <div class=\"algorithm-step-controls\">\r\n            <button type=\"button\" class=\"algorithm-prev-btn btn-raised\" disabled>Previous step</button>\r\n            <button type=\"button\" class=\"algorithm-play-toggle-btn btn-raised\" disabled>Play</button>\r\n            <button type=\"button\" class=\"algorithm-next-btn btn-raised\" disabled>Next step</button>\r\n          </div>\r\n          <div class=\"algorithm-speed\">\r\n            <button type=\"button\" class=\"algorithm-slow-down-btn btn-raised\" disabled>Slower</button>\r\n            <div class=\"speed-notch\"><<</div>\r\n            <div class=\"speed-notch\"><</div>\r\n            <div class=\"speed-notch speed-notch--active\">.</div>\r\n            <div class=\"speed-notch\">></div>\r\n            <div class=\"speed-notch\">>></div>\r\n            <button type=\"button\" class=\"algorithm-speed-up-btn btn-raised\" disabled>Faster</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"algorithm-results\">\r\n          <ul class=\"stepper\"></ul>\r\n        </div>\r\n      </div>\r\n    `;\r\n    this.tabs.getTabContentElement('algorithm').innerHTML = html;\r\n    this.tabs.setTabContent('algorithm', html);\r\n  }\r\n\r\n  /**\r\n   * Reset the graph. Calls resetGraph() of the Stepper instance.\r\n   */\r\n  resetGraph() {\r\n    this.stepper.resetGraph();\r\n  }\r\n\r\n  /**\r\n   * Update does nothing now, at this point might not do anything ever since changing the algorithm type occurs in algorithm-tool and the top-bar.\r\n   */\r\n  update() {}\r\n}\r\n\r\nexport { SidebarAlgorithm };\r\nexport default SidebarAlgorithm;\r\n"
  },
  {
    "__docId__": 416,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SidebarAlgorithm",
    "memberof": "src/js/ui/sidebar-algorithm.js",
    "longname": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/ui/sidebar-algorithm.js",
    "importStyle": "SidebarAlgorithm",
    "description": "Sidebar that accompanies the AlgorithmTool.",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SidebarAlgorithm"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/ui/sidebar-content.js~SidebarContent"
    ]
  },
  {
    "__docId__": 417,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm",
    "longname": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm#constructor",
    "access": null,
    "description": "Constructor calls the super, creates a new stepper object and then assigns algorithm specific button listeners to the sidebar",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "SidebarAlgorithm"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "Reference to the master graph object"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 418,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "graph",
    "memberof": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm",
    "longname": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm#graph",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 419,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "stepper",
    "memberof": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm",
    "longname": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm#stepper",
    "access": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 420,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hoverEvent",
    "memberof": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm",
    "longname": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm#hoverEvent",
    "access": null,
    "description": "Called to check for hovering over a graph link (link that associates text with an object in the Graph).",
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "bool",
        "description": "Whether or not the graph link is currently being hovered over."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 421,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "run",
    "memberof": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm",
    "longname": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm#run",
    "access": null,
    "description": "Runs the current algorithm and displays the results in the sidebar.",
    "lineNumber": 94,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 422,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateStepGUI",
    "memberof": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm",
    "longname": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm#updateStepGUI",
    "access": null,
    "description": "Update the state of the buttons in the sidebar.",
    "lineNumber": 166,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 423,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toggleHover",
    "memberof": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm",
    "longname": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm#toggleHover",
    "access": null,
    "description": "Toggle the hover state of the associated Node or Edge when a graph link is being hovered.",
    "lineNumber": 210,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "String containing the type of the object."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "ID of the object."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isHovering",
        "description": "Whether or not the mouse is hovering over the graph link."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 424,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "display",
    "memberof": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm",
    "longname": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm#display",
    "access": null,
    "description": "Called when the sidebar content is switched to this.",
    "lineNumber": 230,
    "params": [],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 425,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createLinkElement",
    "memberof": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm",
    "longname": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm#createLinkElement",
    "access": null,
    "description": "Create a graph link element using the specified Node or Edge.",
    "lineNumber": 243,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Node or Edge object to create a graph link for."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "String containing the HTML for the graph link to the specified Node or Edge."
    },
    "generator": false
  },
  {
    "__docId__": 426,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setAlgorithm",
    "memberof": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm",
    "longname": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm#setAlgorithm",
    "access": null,
    "description": "Set the current algorithm to a new instance of the given algorithm class.",
    "lineNumber": 265,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "AlgorithmClass",
        "description": "The algorihtm class"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 427,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "curAlgorithm",
    "memberof": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm",
    "longname": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm#curAlgorithm",
    "access": null,
    "description": null,
    "lineNumber": 266,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 428,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resetGraph",
    "memberof": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm",
    "longname": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm#resetGraph",
    "access": null,
    "description": "Reset the graph. Calls resetGraph() of the Stepper instance.",
    "lineNumber": 299,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 429,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm",
    "longname": "src/js/ui/sidebar-algorithm.js~SidebarAlgorithm#update",
    "access": null,
    "description": "Update does nothing now, at this point might not do anything ever since changing the algorithm type occurs in algorithm-tool and the top-bar.",
    "lineNumber": 306,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 430,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/ui/sidebar-content.js",
    "memberof": null,
    "longname": "src/js/ui/sidebar-content.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Tabs from '../ui/tabs';\n\n/**\n * SidebarContent is a super class\n * This class ensures the proper methods are overloaded, takes in a graph to store so it can use it to access\n * metadata, and starts setting up the tab class.\n *\n * Subclasses that extend this superclass must super the constructor and replace the old tabs and content with new tabs\n * and content relevant to their context.  See the sidebar-node and sidebar-edge example classes.\n * @class SidebarContent\n */\nclass SidebarContent {\n\n  /**\n   * The current Graph object.\n   * @type {Graph}\n   */\n  graph;\n\n  /**\n   * Instance of Tabs. Controls and provides helper functions for tab functionality.\n   * @type {Tabs}\n   */\n  tabs;\n\n  /**\n   * Constructs a SidebarContent instance. This should not be called directly.\n   * @param  {Graph} graph - The current Graph object.\n   * @constructs SidebarContent\n   */\n  constructor(graph) {\n    this.graph = graph;\n    let tabContainer = document.getElementById('sidebar').children[0];\n    let tabList = tabContainer.children[0];\n    this.tabs = new Tabs(tabContainer, tabList);\n    this.tabs.init();\n  }\n\n  /**\n   * Change the Graph object reference stored to the new one.\n   * @param  {Graph} newGraph - The new Graph instance.\n   */\n  changeGraph(newGraph) {\n    this.graph = newGraph;\n  }\n\n  /**\n   * Display the sidebar.\n   * @abstract\n   */\n  display() {\n    throw Error('Can\\'t call display from abstract SidebarContent class.');\n  }\n\n  /**\n   * Update the sidebar state.\n   * @abstract\n   */\n  update() {\n    throw Error('Can\\'t call update from abstract SidebarContent class.');\n  }\n}\n\nexport { SidebarContent };\nexport default SidebarContent;\n"
  },
  {
    "__docId__": 431,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SidebarContent",
    "memberof": "src/js/ui/sidebar-content.js",
    "longname": "src/js/ui/sidebar-content.js~SidebarContent",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/ui/sidebar-content.js",
    "importStyle": "SidebarContent",
    "description": "SidebarContent is a super class\nThis class ensures the proper methods are overloaded, takes in a graph to store so it can use it to access\nmetadata, and starts setting up the tab class.\n\nSubclasses that extend this superclass must super the constructor and replace the old tabs and content with new tabs\nand content relevant to their context.  See the sidebar-node and sidebar-edge example classes.",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SidebarContent"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 432,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/ui/sidebar-content.js~SidebarContent",
    "longname": "src/js/ui/sidebar-content.js~SidebarContent#constructor",
    "access": null,
    "description": "Constructs a SidebarContent instance. This should not be called directly.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "SidebarContent"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current Graph object."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 433,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "graph",
    "memberof": "src/js/ui/sidebar-content.js~SidebarContent",
    "longname": "src/js/ui/sidebar-content.js~SidebarContent#graph",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 434,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "tabs",
    "memberof": "src/js/ui/sidebar-content.js~SidebarContent",
    "longname": "src/js/ui/sidebar-content.js~SidebarContent#tabs",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 435,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "changeGraph",
    "memberof": "src/js/ui/sidebar-content.js~SidebarContent",
    "longname": "src/js/ui/sidebar-content.js~SidebarContent#changeGraph",
    "access": null,
    "description": "Change the Graph object reference stored to the new one.",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "newGraph",
        "description": "The new Graph instance."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 436,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "graph",
    "memberof": "src/js/ui/sidebar-content.js~SidebarContent",
    "longname": "src/js/ui/sidebar-content.js~SidebarContent#graph",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 437,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "display",
    "memberof": "src/js/ui/sidebar-content.js~SidebarContent",
    "longname": "src/js/ui/sidebar-content.js~SidebarContent#display",
    "access": null,
    "description": "Display the sidebar.",
    "lineNumber": 51,
    "params": [],
    "abstract": true,
    "generator": false
  },
  {
    "__docId__": 438,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/js/ui/sidebar-content.js~SidebarContent",
    "longname": "src/js/ui/sidebar-content.js~SidebarContent#update",
    "access": null,
    "description": "Update the sidebar state.",
    "lineNumber": 59,
    "params": [],
    "abstract": true,
    "generator": false
  },
  {
    "__docId__": 439,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/ui/sidebar-display.js",
    "memberof": null,
    "longname": "src/js/ui/sidebar-display.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import SidebarContent from '../ui/sidebar-content';\r\nimport * as Form from '../ui/form';\r\n\r\n/**\r\n * Sidebar content class for displaying graph data. This is the default sidebar type.\r\n * @class SidebarDisplay\r\n */\r\nclass SidebarDisplay extends SidebarContent {\r\n\r\n  /**\r\n   * Constructs a SidebarDisplay instance.\r\n   * @param  {Graph} graph - The current Graph object.\r\n   * @constructs SidebarDisplay\r\n   */\r\n  constructor(graph) {\r\n    super(graph);\r\n  }\r\n\r\n  /**\r\n   * Display tabs and update content.\r\n   * @override\r\n   */\r\n  display() {\r\n    this.tabs.replaceTabs({\r\n      data: 'Data'\r\n    });\r\n\r\n    this.tabs.setTabContent('data', '<form></form>');\r\n\r\n    this.update();\r\n    this.tabs.selectTab('data');\r\n  }\r\n\r\n  /**\r\n   * Update the sidebar with data from the graph.\r\n   * @override\r\n   */\r\n  update() {\r\n    let html = Form.createForm([\r\n      {\r\n        type: 'size',\r\n        value: this.graph.nodes.size,\r\n        displayName: 'Nodes'\r\n      },\r\n      {\r\n        type: 'size',\r\n        value: this.graph.edges.size,\r\n        displayName: 'Edges'\r\n      }\r\n    ]);\r\n    this.tabs.getTabContentElement('data').querySelector('form').innerHTML = html;\r\n  }\r\n}\r\n\r\nexport { SidebarDisplay };\r\nexport default SidebarDisplay;\r\n"
  },
  {
    "__docId__": 440,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SidebarDisplay",
    "memberof": "src/js/ui/sidebar-display.js",
    "longname": "src/js/ui/sidebar-display.js~SidebarDisplay",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/ui/sidebar-display.js",
    "importStyle": "SidebarDisplay",
    "description": "Sidebar content class for displaying graph data. This is the default sidebar type.",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SidebarDisplay"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/ui/sidebar-content.js~SidebarContent"
    ]
  },
  {
    "__docId__": 441,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/ui/sidebar-display.js~SidebarDisplay",
    "longname": "src/js/ui/sidebar-display.js~SidebarDisplay#constructor",
    "access": null,
    "description": "Constructs a SidebarDisplay instance.",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "SidebarDisplay"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current Graph object."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 442,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "display",
    "memberof": "src/js/ui/sidebar-display.js~SidebarDisplay",
    "longname": "src/js/ui/sidebar-display.js~SidebarDisplay#display",
    "access": null,
    "description": "Display tabs and update content.",
    "lineNumber": 23,
    "params": [],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 443,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/js/ui/sidebar-display.js~SidebarDisplay",
    "longname": "src/js/ui/sidebar-display.js~SidebarDisplay#update",
    "access": null,
    "description": "Update the sidebar with data from the graph.",
    "lineNumber": 38,
    "params": [],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 444,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/ui/sidebar-select.js",
    "memberof": null,
    "longname": "src/js/ui/sidebar-select.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import SidebarContent from '../ui/sidebar-content';\nimport Node from '../data/node/node';\nimport Edge from '../data/edge/edge';\nimport * as Form from '../ui/form';\n\n/**\n * Sidebar content class for handling selected items. This sidebar is used by the SelectTool.\n * @class SidebarSelect\n */\nclass SidebarSelect extends SidebarContent {\n\n  /**\n   * The current selected object.\n   * @type {(Node|Edge)}\n   */\n  selectedObject = null;\n\n  /**\n   * Constructs a SidebarSelect instance.\n   * @param  {Graph} graph - The current Graph object.\n   * @constructs SidebarSelect\n   */\n  constructor(graph) {\n    super(graph);\n  }\n\n  /**\n   * Called to initially display the sidebar. Also adds event listeners to the forms.\n   * @override\n   */\n  display() {\n    this.tabs.replaceTabs({\n      data: 'Data',\n      label: 'Label'\n    });\n\n    this.tabs.setTabContent('data', '<form></form>');\n    this.tabs.setTabContent('label', '<form></form>');\n    this.tabs.hideTab('label');\n\n    this.update();\n    this.tabs.selectTab('data');\n\n    let forms = document.getElementById('sidebar').querySelectorAll('form');\n\n    for (let i = 0; i < forms.length; i++) {\n      let form = forms[i];\n      form.addEventListener('input', (event) => {\n        this.updateObjectValues(event);\n      });\n\n      form.addEventListener('change', (event) => {\n        this.updateObjectValues(event);\n      });\n    }\n  }\n\n  /**\n   * Update the sidebar with the selected object.\n   * @param  {Node|Edge} obj - The selected Node or Edge.\n   * @override\n   */\n  update(obj) {\n    let html;\n    if (obj instanceof Node) {\n      html = this.displayNode(obj);\n      this.selectedObject = obj;\n      this.tabs.showTab('label');\n    } else if (obj instanceof Edge) {\n      html = this.displayEdge(obj);\n      this.selectedObject = obj;\n      this.tabs.showTab('label');\n    } else {\n      html = this.displayGraph(this.graph);\n      this.selectedObject = null;\n      this.tabs.hideTab('label');\n      this.tabs.selectTab('data');\n    }\n    this.tabs.getTabContentElement('data').querySelector('form').innerHTML = html;\n    if (obj instanceof Node || obj instanceof Edge) {\n      this.tabs.getTabContentElement('label').querySelector('form').innerHTML = this.displayLabel(obj.label);\n    }\n  }\n\n  /**\n   * Called when an 'input' or 'change' event is triggered by a form input. The field associated with that input is updated with the new value of the input.\n   * @param  {Event} event - Event object from the listener.\n   */\n  updateObjectValues(event) {\n    if (this.tabs.getTabContentElement('data').contains(event.target)) {\n      let input = event.target;\n      let name = input.name;\n      let value = Form.getInputValue(input);\n      this.selectedObject[name] = value;\n      if (this.selectedObject instanceof Node) {\n        for (let edge of this.selectedObject.edges) {\n          edge.updateEndpoints();\n        }\n      }\n    } else if (this.tabs.getTabContentElement('label').contains(event.target)) {\n      let input = event.target;\n      let name = input.name;\n      let value = Form.getInputValue(input);\n      this.selectedObject.label[name] = value;\n    }\n  }\n\n  /**\n   * Get HTML for displaying Graph data. This will be used when nothing is selected.\n   * @param  {Graph} graph - The Graph to display data for.\n   * @return {string} - HTML string to set as the sidebar content.\n   */\n  displayGraph(graph) {\n    return Form.createForm([\n      {\n        type: 'size',\n        value: graph.nodes.size,\n        displayName: 'Nodes'\n      },\n      {\n        type: 'size',\n        value: graph.edges.size,\n        displayName: 'Edges'\n      }\n    ]);\n  }\n\n  /**\n   * Get HTML for displaying a form for editing Node fields.\n   * @param  {Node} node - The Node object to display.\n   * @return {string} - HTML string of a form with inputs for the Node's fields.\n   */\n  displayNode(node) {\n    return Form.createForm([\n      {\n        type: 'number',\n        name: 'x',\n        value: node.x,\n        displayName: 'x'\n      },\n      {\n        type: 'number',\n        name: 'y',\n        value: node.y,\n        displayName: 'y'\n      },\n      {\n        type: 'boolean',\n        name: 'isAcceptingState',\n        value: node.isAcceptingState,\n        displayName: 'Accepting State'\n      },\n      {\n        type: 'boolean',\n        name: 'isStartingState',\n        value: node.isStartingState,\n        displayName: 'Starting State'\n      },\n      {\n        type: 'number',\n        name: 'radius',\n        value: node.radius,\n        displayName: 'Radius'\n      },\n      {\n        type: 'color',\n        name: 'color',\n        value: node.color,\n        displayName: 'Line Color'\n      },\n      {\n        type: 'color',\n        name: 'fillColor',\n        value: node.fillColor,\n        displayName: 'Fill Color'\n      },\n      {\n        type: 'number',\n        name: 'lineWidth',\n        value: node.lineWidth,\n        displayName: 'Line Width'\n      }\n    ]);\n  }\n\n  /**\n   * Get HTML for displaying a form for editing Edge fields.\n   * @param  {Edge} edge - The Edge object to display.\n   * @return {string} - HTML string of a form with inputs for the Edge's fields.\n   */\n  displayEdge(edge) {\n    return Form.createForm([\n      {\n        type: 'boolean',\n        name: 'isDirected',\n        value: edge.isDirected,\n        displayName: 'Directed'\n      },\n      {\n        type: 'color',\n        name: 'color',\n        value: edge.color,\n        displayName: 'Color'\n      },\n      {\n        type: 'number',\n        name: 'lineWidth',\n        value: edge.lineWidth,\n        displayName: 'Width'\n      }\n    ]);\n  }\n\n  /**\n   * Get HTML for displaying a form for editing Label fields.\n   * @param  {Label} label - The Label object to display.\n   * @return {string} - HTML string of a form with inputs for the Label's fields.\n   */\n  displayLabel(label) {\n    return Form.createForm([\n      {\n        type: 'number',\n        name: 'x',\n        value: label.x,\n        displayName: 'x'\n      },\n      {\n        type: 'number',\n        name: 'y',\n        value: label.y,\n        displayName: 'y'\n      },\n      {\n        type: 'string',\n        name: 'content',\n        value: label.content,\n        displayName: 'Label'\n      },\n      {\n        type: 'string',\n        name: 'fontSize',\n        value: label.fontSize,\n        displayName: 'Font size'\n      },\n      {\n        type: 'string',\n        name: 'fontFamily',\n        value: label.fontFamily,\n        displayName: 'Font family'\n      },\n      {\n        type: 'color',\n        name: 'color',\n        value: label.color,\n        displayName: 'Color'\n      }\n    ]);\n  }\n}\n\nexport { SidebarSelect };\nexport default SidebarSelect;\n"
  },
  {
    "__docId__": 445,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SidebarSelect",
    "memberof": "src/js/ui/sidebar-select.js",
    "longname": "src/js/ui/sidebar-select.js~SidebarSelect",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/ui/sidebar-select.js",
    "importStyle": "SidebarSelect",
    "description": "Sidebar content class for handling selected items. This sidebar is used by the SelectTool.",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SidebarSelect"
      }
    ],
    "interface": false,
    "extends": [
      "src/js/ui/sidebar-content.js~SidebarContent"
    ]
  },
  {
    "__docId__": 446,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/ui/sidebar-select.js~SidebarSelect",
    "longname": "src/js/ui/sidebar-select.js~SidebarSelect#constructor",
    "access": null,
    "description": "Constructs a SidebarSelect instance.",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "SidebarSelect"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current Graph object."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 447,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "display",
    "memberof": "src/js/ui/sidebar-select.js~SidebarSelect",
    "longname": "src/js/ui/sidebar-select.js~SidebarSelect#display",
    "access": null,
    "description": "Called to initially display the sidebar. Also adds event listeners to the forms.",
    "lineNumber": 31,
    "params": [],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 448,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/js/ui/sidebar-select.js~SidebarSelect",
    "longname": "src/js/ui/sidebar-select.js~SidebarSelect#update",
    "access": null,
    "description": "Update the sidebar with the selected object.",
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "The selected Node or Edge."
      }
    ],
    "override": true,
    "generator": false
  },
  {
    "__docId__": 449,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selectedObject",
    "memberof": "src/js/ui/sidebar-select.js~SidebarSelect",
    "longname": "src/js/ui/sidebar-select.js~SidebarSelect#selectedObject",
    "access": null,
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 450,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selectedObject",
    "memberof": "src/js/ui/sidebar-select.js~SidebarSelect",
    "longname": "src/js/ui/sidebar-select.js~SidebarSelect#selectedObject",
    "access": null,
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 451,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selectedObject",
    "memberof": "src/js/ui/sidebar-select.js~SidebarSelect",
    "longname": "src/js/ui/sidebar-select.js~SidebarSelect#selectedObject",
    "access": null,
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 452,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateObjectValues",
    "memberof": "src/js/ui/sidebar-select.js~SidebarSelect",
    "longname": "src/js/ui/sidebar-select.js~SidebarSelect#updateObjectValues",
    "access": null,
    "description": "Called when an 'input' or 'change' event is triggered by a form input. The field associated with that input is updated with the new value of the input.",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from the listener."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 453,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "displayGraph",
    "memberof": "src/js/ui/sidebar-select.js~SidebarSelect",
    "longname": "src/js/ui/sidebar-select.js~SidebarSelect#displayGraph",
    "access": null,
    "description": "Get HTML for displaying Graph data. This will be used when nothing is selected.",
    "lineNumber": 113,
    "params": [
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The Graph to display data for."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "HTML string to set as the sidebar content."
    },
    "generator": false
  },
  {
    "__docId__": 454,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "displayNode",
    "memberof": "src/js/ui/sidebar-select.js~SidebarSelect",
    "longname": "src/js/ui/sidebar-select.js~SidebarSelect#displayNode",
    "access": null,
    "description": "Get HTML for displaying a form for editing Node fields.",
    "lineNumber": 133,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "The Node object to display."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "HTML string of a form with inputs for the Node's fields."
    },
    "generator": false
  },
  {
    "__docId__": 455,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "displayEdge",
    "memberof": "src/js/ui/sidebar-select.js~SidebarSelect",
    "longname": "src/js/ui/sidebar-select.js~SidebarSelect#displayEdge",
    "access": null,
    "description": "Get HTML for displaying a form for editing Edge fields.",
    "lineNumber": 191,
    "params": [
      {
        "nullable": null,
        "types": [
          "Edge"
        ],
        "spread": false,
        "optional": false,
        "name": "edge",
        "description": "The Edge object to display."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "HTML string of a form with inputs for the Edge's fields."
    },
    "generator": false
  },
  {
    "__docId__": 456,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "displayLabel",
    "memberof": "src/js/ui/sidebar-select.js~SidebarSelect",
    "longname": "src/js/ui/sidebar-select.js~SidebarSelect#displayLabel",
    "access": null,
    "description": "Get HTML for displaying a form for editing Label fields.",
    "lineNumber": 219,
    "params": [
      {
        "nullable": null,
        "types": [
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "label",
        "description": "The Label object to display."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "HTML string of a form with inputs for the Label's fields."
    },
    "generator": false
  },
  {
    "__docId__": 457,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/ui/sidebar.js",
    "memberof": null,
    "longname": "src/js/ui/sidebar.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import SidebarDisplay from '../ui/sidebar-display';\nimport SidebarSelect from '../ui/sidebar-select';\nimport SidebarAlgorithm from '../ui/sidebar-algorithm';\n\n/**\n * This class manages the container for sidebar-content subclasses, and is responsible\n * for managing those subclasses as well.\n * @class Sidebar\n */\nclass Sidebar {\n\n  /**\n   * Reference to the UI instance.\n   * @type {UI}\n   */\n  ui;\n\n  /**\n   * The sidebar element.\n   * @type {Element}\n   */\n  sidebar;\n\n  /**\n   * Map of sidebar names to sidebar content classes.\n   * @type {Object.<string,SidebarContent>}\n   */\n  sidebarTypes;\n\n  /**\n   * Name of the current sidebar content type.\n   * @type {string}\n   */\n  currentSidebar;\n\n  /**\n   * The current SidebarContent instance that is being displayed.\n   * @type {SidebarContent}\n   */\n  content;\n\n  /**\n   * Constructs a Sidebar object.\n   * @param  {UI} ui - Reference to the UI instance.\n   * @constructs Sidebar\n   */\n  constructor(ui) {\n    this.ui = ui;\n    this.sidebar = document.getElementById('sidebar');\n  }\n\n  /**\n   * Initialization function.\n   * @param  {Graph} graph - Graph instance that is used by the sidebar.\n   */\n  init(graph) {\n    this.sidebarTypes = {\n      display: new SidebarDisplay(graph),\n      select: new SidebarSelect(graph),\n      algorithm: new SidebarAlgorithm(graph)\n    };\n  }\n\n  /**\n   * Reset the reference to the graph.\n   * @param {Graph} newGraph - The new Graph object.\n   */\n  resetGraph(newGraph) {\n    this.sidebarTypes.display.changeGraph(newGraph);\n    this.sidebarTypes.select.changeGraph(newGraph);\n    this.sidebarTypes.algorithm.changeGraph(newGraph);\n    this.setSidebar('display');\n    this.updateSidebar(null);\n  }\n\n  /**\n   * Set the sidebar content to the specified type.\n   * @param {string} sidebarType - Name of the sidebar type to display.\n   */\n  setSidebar(sidebarType) {\n    if (this.currentSidebar === sidebarType) {\n      return;\n    }\n    if (this.currentSidebar === 'algorithm') {\n      this.content.resetGraph();\n    }\n    this.content = this.sidebarTypes[sidebarType];\n    this.content.display();\n    this.currentSidebar = sidebarType;\n  }\n\n  /**\n   * Call the current sidebar-content class's update function. Currently, updateSidebar is only from the mouse-handler.\n   * @param  {*} obj - Object to update the sidebar with.\n   */\n  updateSidebar(obj) {\n    this.content.update(obj);\n  }\n}\n\nexport { Sidebar };\nexport default Sidebar;\n"
  },
  {
    "__docId__": 458,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Sidebar",
    "memberof": "src/js/ui/sidebar.js",
    "longname": "src/js/ui/sidebar.js~Sidebar",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/ui/sidebar.js",
    "importStyle": "Sidebar",
    "description": "This class manages the container for sidebar-content subclasses, and is responsible\nfor managing those subclasses as well.",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Sidebar"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 459,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/ui/sidebar.js~Sidebar",
    "longname": "src/js/ui/sidebar.js~Sidebar#constructor",
    "access": null,
    "description": "Constructs a Sidebar object.",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Sidebar"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "UI"
        ],
        "spread": false,
        "optional": false,
        "name": "ui",
        "description": "Reference to the UI instance."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 460,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "ui",
    "memberof": "src/js/ui/sidebar.js~Sidebar",
    "longname": "src/js/ui/sidebar.js~Sidebar#ui",
    "access": null,
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 461,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "sidebar",
    "memberof": "src/js/ui/sidebar.js~Sidebar",
    "longname": "src/js/ui/sidebar.js~Sidebar#sidebar",
    "access": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 462,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "init",
    "memberof": "src/js/ui/sidebar.js~Sidebar",
    "longname": "src/js/ui/sidebar.js~Sidebar#init",
    "access": null,
    "description": "Initialization function.",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "Graph instance that is used by the sidebar."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 463,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "sidebarTypes",
    "memberof": "src/js/ui/sidebar.js~Sidebar",
    "longname": "src/js/ui/sidebar.js~Sidebar#sidebarTypes",
    "access": null,
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 464,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resetGraph",
    "memberof": "src/js/ui/sidebar.js~Sidebar",
    "longname": "src/js/ui/sidebar.js~Sidebar#resetGraph",
    "access": null,
    "description": "Reset the reference to the graph.",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "newGraph",
        "description": "The new Graph object."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 465,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setSidebar",
    "memberof": "src/js/ui/sidebar.js~Sidebar",
    "longname": "src/js/ui/sidebar.js~Sidebar#setSidebar",
    "access": null,
    "description": "Set the sidebar content to the specified type.",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sidebarType",
        "description": "Name of the sidebar type to display."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 466,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "content",
    "memberof": "src/js/ui/sidebar.js~Sidebar",
    "longname": "src/js/ui/sidebar.js~Sidebar#content",
    "access": null,
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 467,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "currentSidebar",
    "memberof": "src/js/ui/sidebar.js~Sidebar",
    "longname": "src/js/ui/sidebar.js~Sidebar#currentSidebar",
    "access": null,
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 468,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateSidebar",
    "memberof": "src/js/ui/sidebar.js~Sidebar",
    "longname": "src/js/ui/sidebar.js~Sidebar#updateSidebar",
    "access": null,
    "description": "Call the current sidebar-content class's update function. Currently, updateSidebar is only from the mouse-handler.",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Object to update the sidebar with."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 469,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/ui/status-bar.js",
    "memberof": null,
    "longname": "src/js/ui/status-bar.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Class for controlling updates to the status bar.\n * @class StatusBar\n */\nclass StatusBar {\n\n  /**\n   * Reference to the UI instance.\n   * @type {UI}\n   */\n  ui;\n\n  /**\n   * The element containing the status bar.\n   * @type {Element}\n   */\n  statusBar;\n\n  /**\n   * Constructs a StatusBar object.\n   * @param  {UI} ui - Reference to the UI instance.\n   * @constructs StatusBar\n   */\n  constructor(ui) {\n    this.ui = ui;\n    this.statusBar = document.getElementById('status-bar');\n    this.initListeners();\n  }\n\n  /**\n   * Initialize the event listeners.\n   */\n  initListeners() {\n    document.getElementById('reset-transform').addEventListener('click', (event) => {\n      this.ui.canvas.reset();\n    });\n  }\n\n  /**\n   * Update the zoom level being displayed.\n   * @param  {number} scale - The current scale of the canvas.\n   */\n  updateZoom(scale) {\n    document.getElementById('zoom-input').value = `${Math.round(scale * 100)}%`;\n  }\n\n  /**\n   * Update the mouse position being displayed.\n   * @param  {number} x - x-coordinate of mouse position in canvas coordinates.\n   * @param  {number} y - y-coordinate of mouse position in canvas coordinates.\n   */\n  updateMouse(x, y) {\n    document.getElementById('mouse-x').textContent = x.toFixed(2);\n    document.getElementById('mouse-y').textContent = y.toFixed(2);\n  }\n\n}\n\nexport { StatusBar };\nexport default StatusBar;\n"
  },
  {
    "__docId__": 470,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "StatusBar",
    "memberof": "src/js/ui/status-bar.js",
    "longname": "src/js/ui/status-bar.js~StatusBar",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/ui/status-bar.js",
    "importStyle": "StatusBar",
    "description": "Class for controlling updates to the status bar.",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "StatusBar"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 471,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/ui/status-bar.js~StatusBar",
    "longname": "src/js/ui/status-bar.js~StatusBar#constructor",
    "access": null,
    "description": "Constructs a StatusBar object.",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "StatusBar"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "UI"
        ],
        "spread": false,
        "optional": false,
        "name": "ui",
        "description": "Reference to the UI instance."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 472,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "ui",
    "memberof": "src/js/ui/status-bar.js~StatusBar",
    "longname": "src/js/ui/status-bar.js~StatusBar#ui",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 473,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "statusBar",
    "memberof": "src/js/ui/status-bar.js~StatusBar",
    "longname": "src/js/ui/status-bar.js~StatusBar#statusBar",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 474,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "initListeners",
    "memberof": "src/js/ui/status-bar.js~StatusBar",
    "longname": "src/js/ui/status-bar.js~StatusBar#initListeners",
    "access": null,
    "description": "Initialize the event listeners.",
    "lineNumber": 33,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 475,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateZoom",
    "memberof": "src/js/ui/status-bar.js~StatusBar",
    "longname": "src/js/ui/status-bar.js~StatusBar#updateZoom",
    "access": null,
    "description": "Update the zoom level being displayed.",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "scale",
        "description": "The current scale of the canvas."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 476,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateMouse",
    "memberof": "src/js/ui/status-bar.js~StatusBar",
    "longname": "src/js/ui/status-bar.js~StatusBar#updateMouse",
    "access": null,
    "description": "Update the mouse position being displayed.",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of mouse position in canvas coordinates."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of mouse position in canvas coordinates."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 477,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/ui/tabs.js",
    "memberof": null,
    "longname": "src/js/ui/tabs.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "const TAB_CLASS = 'tab';\r\nconst TAB_ACTIVE_CLASS = 'active';\r\n\r\nconst TAB_CONTENT_CLASS = 'tab-content';\r\nconst TAB_CONTENT_ACTIVE_CLASS = 'active';\r\n\r\nconst TAB_ATTRIBUTE_NAME = 'data-tab';\r\n\r\n/**\r\n * Class for controlling tabs.\r\n * @class Tabs\r\n */\r\nclass Tabs {\r\n\r\n  /**\r\n   * Constructs a Tabs object.\r\n   * @param  {Element} tabContainer - Container element that holds all the tabs and tab content.\r\n   * @param  {Element} tabList - Parent element of all the tabs.\r\n   * @constructs Tabs\r\n   */\r\n  constructor(tabContainer, tabList) {\r\n    this.tabContainer = tabContainer;\r\n    this.tabList = tabList;\r\n  }\r\n\r\n  /**\r\n   * Initialization function to add click event listeners to the tabs.\r\n   */\r\n  init() {\r\n    this.tabList.addEventListener('click', (event) => {\r\n      if (event.target.classList.contains(TAB_CLASS)) {\r\n        this.selectTab(event.target);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Select a specific tab.\r\n   * @param  {(string|Element)} tab - Name of tab or tab element to be selected.\r\n   */\r\n  selectTab(tab) {\r\n    if (typeof tab === 'string') {\r\n      this.selectTabByName(tab);\r\n    } else if (tab instanceof Element) {\r\n      this.selectTabByTarget(tab);\r\n    } else {\r\n      throw Error(`Cannot select tab: ${tab}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set a particular tab's content as the given HTML string.\r\n   * @param  {(string|Element)} tab - Name of tab or tab element.\r\n   * @param {string} content - HTML string containing the tab's new content.\r\n   */\r\n  setTabContent(tab, content) {\r\n    let tabContentElement = this.getTabContentElement(tab);\r\n    tabContentElement.innerHTML = content;\r\n  }\r\n\r\n  /**\r\n   * Set whether or not the tab should allow scrolling in the tab content element.\r\n   * @param  {(string|Element)} tab - Name of tab or tab element.\r\n   * @param {boolean} shouldScroll - Whether or not the tab content element should allow scrolling.\r\n   */\r\n  setTabScroll(tab, shouldScroll) {\r\n    if (!shouldScroll) {\r\n      this.getTabContentElement(tab).classList.add('no-scroll');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a tab.\r\n   * @param {string} name - Name of the tab. This is used to refer to the tab.\r\n   * @param {string} displayName - String that is displayed on the actual tab.\r\n   */\r\n  addTab(name, displayName) {\r\n    let tabs = this.tabList.children;\r\n    for (let i = 0; i < tabs.length; i++) {\r\n      if (tabs[i].getAttribute(TAB_ATTRIBUTE_NAME) === name) {\r\n        throw Error('Tab with that name already exists');\r\n      }\r\n    }\r\n\r\n    let tab = document.createElement('li');\r\n    tab.classList.add(TAB_CLASS);\r\n    tab.textContent = displayName;\r\n    tab.setAttribute(TAB_ATTRIBUTE_NAME, name);\r\n\r\n    let tabContent = document.createElement('div');\r\n    tabContent.classList.add(TAB_CONTENT_CLASS);\r\n    tabContent.setAttribute(TAB_ATTRIBUTE_NAME, name);\r\n\r\n    this.tabList.appendChild(tab);\r\n    this.tabContainer.appendChild(tabContent);\r\n    this.updateTabListDisplay();\r\n  }\r\n\r\n  /**\r\n   * Remove the specified tab.\r\n   * @param  {string} name - Name of the tab to remove.\r\n   */\r\n  removeTab(name) {\r\n    let tabs = this.tabList.children;\r\n    for (let i = 0; i < tabs.length; i++) {\r\n      if (tabs[i].getAttribute(TAB_ATTRIBUTE_NAME) === name) {\r\n        tabs[i].remove();\r\n        this.getTabContentElement(name).remove();\r\n        this.updateTabListDisplay();\r\n        return;\r\n      }\r\n    }\r\n    throw Error('Tab does not exists');\r\n  }\r\n\r\n  /**\r\n   * Replace all the tabs with new ones.\r\n   * @param  {Object.<string,string>} names - Object with a map of tab names to tab display names.\r\n   */\r\n  replaceTabs(names) {\r\n    while (this.tabList.firstChild) {\r\n      let tab = this.tabList.firstChild;\r\n      this.tabList.removeChild(tab);\r\n      if (tab.nodeType === Node.ELEMENT_NODE) {\r\n        this.getTabContentElement(tab).remove();\r\n      }\r\n    }\r\n\r\n    for (let name of Object.keys(names)) {\r\n      this.addTab(name, names[name]);\r\n    }\r\n\r\n    this.updateTabListDisplay();\r\n  }\r\n\r\n  /**\r\n   * Hide the tab with the specified name.\r\n   * @param  {string} tabName - Name of the tab to hide.\r\n   */\r\n  hideTab(tabName) {\r\n    this.displayTab(tabName, true);\r\n  }\r\n\r\n  /**\r\n   * Show the tab with the specified name.\r\n   * @param  {string} tabName - Name of the tab to show.\r\n   */\r\n  showTab(tabName) {\r\n    this.displayTab(tabName, false);\r\n  }\r\n\r\n  /**\r\n   * Set whether or not a tab should be displayed.\r\n   * @param  {string}  tabName - Name of the tab.\r\n   * @param  {boolean} isHiding - Whether or not the tab should be displayed.\r\n   */\r\n  displayTab(tabName, isHiding) {\r\n    let tabs = this.tabList.querySelectorAll(`.${TAB_CLASS}[${TAB_ATTRIBUTE_NAME}=${tabName}]`);\r\n    for (let i = 0; i < tabs.length; i++) {\r\n      let tab = tabs[i];\r\n      if (isHiding) {\r\n        tab.classList.add('hidden');\r\n      } else {\r\n        tab.classList.remove('hidden');\r\n      }\r\n    }\r\n    this.updateTabListDisplay();\r\n  }\r\n\r\n  /**\r\n   * Update the display status of the tabList element. If there are 1 or fewer tabs, the tabList is hidden.\r\n   */\r\n  updateTabListDisplay() {\r\n    let displayedTabs = this.tabList.querySelectorAll(`.${TAB_CLASS}:not(.hidden)`);\r\n    if (displayedTabs.length <= 1) {\r\n      this.tabContainer.classList.add('hidden-tabs');\r\n    } else {\r\n      this.tabContainer.classList.remove('hidden-tabs');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the element associated with the specified tab.\r\n   * @param  {(string|Element)} tab - Name of tab or tab element.\r\n   * @return {Element} - The element containing the tab content.\r\n   */\r\n  getTabContentElement(tab) {\r\n    let name;\r\n    if (typeof tab === 'string') {\r\n      name = tab;\r\n    } else if (tab instanceof Element) {\r\n      name = tab.getAttribute(TAB_ATTRIBUTE_NAME);\r\n    } else {\r\n      throw Error(`Cannot get tab content for: ${tab}`);\r\n    }\r\n\r\n    return this.getElementByCallback(TAB_CONTENT_CLASS, this.tabContainer, (child) => {\r\n      return child.getAttribute(TAB_ATTRIBUTE_NAME) === name;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Select the tab with the specified name.\r\n   * @param  {string} name - The name of the tab.\r\n   */\r\n  selectTabByName(name) {\r\n    this.selectElementByAttribute(TAB_CLASS, TAB_ACTIVE_CLASS, this.tabList, TAB_ATTRIBUTE_NAME, name);\r\n    this.selectElementByAttribute(TAB_CONTENT_CLASS, TAB_CONTENT_ACTIVE_CLASS, this.tabContainer, TAB_ATTRIBUTE_NAME, name);\r\n  }\r\n\r\n  /**\r\n   * Select the given tab element.\r\n   * @param  {Element} targetElement - The tab element.\r\n   */\r\n  selectTabByTarget(targetElement) {\r\n    if (!targetElement.classList.contains(TAB_CLASS)) {\r\n      throw Error('Target element is not a tab');\r\n    }\r\n\r\n    this.selectElementByTarget(TAB_CLASS, TAB_ACTIVE_CLASS, this.tabList, targetElement);\r\n    this.selectElementByAttribute(TAB_CONTENT_CLASS, TAB_CONTENT_ACTIVE_CLASS, this.tabContainer, TAB_ATTRIBUTE_NAME, targetElement.getAttribute(TAB_ATTRIBUTE_NAME));\r\n  }\r\n\r\n  /**\r\n   * Toggle selection class for an element (and its siblings) with the specified class, parent element, attribute name, and attribute value. Checks for an element with the specified attribute value for the attribute given.\r\n   * @param  {string} className - Name of the class of the element to select.\r\n   * @param  {string} toggleClass - Class that should be toggled to select the element.\r\n   * @param  {Element} parentElement - Parent element of the element to select.\r\n   * @param  {string} attrName - Name of the attribute to check.\r\n   * @param  {string} attrVal - Value of the attribute to match.\r\n   */\r\n  selectElementByAttribute(className, toggleClass, parentElement, attrName, attrVal) {\r\n    this.selectElementByCallback(className, toggleClass, parentElement, (element) => {\r\n      return element.getAttribute(attrName) === attrVal;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle selection class for an element (and its siblings) with the specified class, parent element, and target element. Checks for an element that matches the target element.\r\n   * @param  {string} className - Name of the class of the element to select.\r\n   * @param  {string} toggleClass - Class that should be toggled to select the element.\r\n   * @param  {Element} parentElement - Parent element of the element to select.\r\n   * @param  {Element} targetElement - Element to select (if it exists).\r\n   */\r\n  selectElementByTarget(className, toggleClass, parentElement, targetElement) {\r\n    this.selectElementByCallback(className, toggleClass, parentElement, (element) => {\r\n      return element === targetElement;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle selection class for an element (and its siblings) with the specified class, parent element, and callback function. The callback should return true or false to select or deselect the elements.\r\n   * @param  {string} className - Name of the class of the element to select.\r\n   * @param  {string} toggleClass - Class that should be toggled to select the element.\r\n   * @param  {Element} parentElement - Parent element of the element to select.\r\n   * @param  {function(element: Element): boolean} callback - Callback function that determines whether the element is selected or not.\r\n   */\r\n  selectElementByCallback(className, toggleClass, parentElement, callback) {\r\n    let children = parentElement.children;\r\n    for (let i = 0; i < children.length; i++) {\r\n      let child = children[i];\r\n      if (child.classList.contains(className)) {\r\n        if (callback(child)) {\r\n          child.classList.add(toggleClass);\r\n        } else {\r\n          child.classList.remove(toggleClass);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the element with the specified class name and parent element that meets the criteria of a filter function.\r\n   * @param  {string} className - Name of the element class.\r\n   * @param  {Element} parentElement - Parent element of the element.\r\n   * @param  {function(element: Element): boolean} callback - Callback function that determines whether the element should be returned or not.\r\n   * @return {?Element} - Element if a matching one is found, null otherwise.\r\n   */\r\n  getElementByCallback(className, parentElement, callback) {\r\n    let children = parentElement.children;\r\n    for (let i = 0; i < children.length; i++) {\r\n      let child = children[i];\r\n      if (child.classList.contains(className)) {\r\n        if (callback(child)) {\r\n          return child;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\nexport { Tabs };\r\nexport default Tabs;\r\n"
  },
  {
    "__docId__": 478,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "TAB_CLASS",
    "memberof": "src/js/ui/tabs.js",
    "longname": "src/js/ui/tabs.js~TAB_CLASS",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/tabs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 479,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "TAB_ACTIVE_CLASS",
    "memberof": "src/js/ui/tabs.js",
    "longname": "src/js/ui/tabs.js~TAB_ACTIVE_CLASS",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/tabs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 480,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "TAB_CONTENT_CLASS",
    "memberof": "src/js/ui/tabs.js",
    "longname": "src/js/ui/tabs.js~TAB_CONTENT_CLASS",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/tabs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 481,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "TAB_CONTENT_ACTIVE_CLASS",
    "memberof": "src/js/ui/tabs.js",
    "longname": "src/js/ui/tabs.js~TAB_CONTENT_ACTIVE_CLASS",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/tabs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 482,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "TAB_ATTRIBUTE_NAME",
    "memberof": "src/js/ui/tabs.js",
    "longname": "src/js/ui/tabs.js~TAB_ATTRIBUTE_NAME",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/tabs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 483,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Tabs",
    "memberof": "src/js/ui/tabs.js",
    "longname": "src/js/ui/tabs.js~Tabs",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/ui/tabs.js",
    "importStyle": "Tabs",
    "description": "Class for controlling tabs.",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Tabs"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 484,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/ui/tabs.js~Tabs",
    "longname": "src/js/ui/tabs.js~Tabs#constructor",
    "access": null,
    "description": "Constructs a Tabs object.",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Tabs"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "tabContainer",
        "description": "Container element that holds all the tabs and tab content."
      },
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "tabList",
        "description": "Parent element of all the tabs."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 485,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "tabContainer",
    "memberof": "src/js/ui/tabs.js~Tabs",
    "longname": "src/js/ui/tabs.js~Tabs#tabContainer",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 486,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "tabList",
    "memberof": "src/js/ui/tabs.js~Tabs",
    "longname": "src/js/ui/tabs.js~Tabs#tabList",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 487,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "init",
    "memberof": "src/js/ui/tabs.js~Tabs",
    "longname": "src/js/ui/tabs.js~Tabs#init",
    "access": null,
    "description": "Initialization function to add click event listeners to the tabs.",
    "lineNumber": 29,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 488,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectTab",
    "memberof": "src/js/ui/tabs.js~Tabs",
    "longname": "src/js/ui/tabs.js~Tabs#selectTab",
    "access": null,
    "description": "Select a specific tab.",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "tab",
        "description": "Name of tab or tab element to be selected."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 489,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setTabContent",
    "memberof": "src/js/ui/tabs.js~Tabs",
    "longname": "src/js/ui/tabs.js~Tabs#setTabContent",
    "access": null,
    "description": "Set a particular tab's content as the given HTML string.",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "tab",
        "description": "Name of tab or tab element."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "content",
        "description": "HTML string containing the tab's new content."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 490,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setTabScroll",
    "memberof": "src/js/ui/tabs.js~Tabs",
    "longname": "src/js/ui/tabs.js~Tabs#setTabScroll",
    "access": null,
    "description": "Set whether or not the tab should allow scrolling in the tab content element.",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "tab",
        "description": "Name of tab or tab element."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "shouldScroll",
        "description": "Whether or not the tab content element should allow scrolling."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 491,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addTab",
    "memberof": "src/js/ui/tabs.js~Tabs",
    "longname": "src/js/ui/tabs.js~Tabs#addTab",
    "access": null,
    "description": "Add a tab.",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of the tab. This is used to refer to the tab."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "displayName",
        "description": "String that is displayed on the actual tab."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 492,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeTab",
    "memberof": "src/js/ui/tabs.js~Tabs",
    "longname": "src/js/ui/tabs.js~Tabs#removeTab",
    "access": null,
    "description": "Remove the specified tab.",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of the tab to remove."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 493,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "replaceTabs",
    "memberof": "src/js/ui/tabs.js~Tabs",
    "longname": "src/js/ui/tabs.js~Tabs#replaceTabs",
    "access": null,
    "description": "Replace all the tabs with new ones.",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object.<string,string>"
        ],
        "spread": false,
        "optional": false,
        "name": "names",
        "description": "Object with a map of tab names to tab display names."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 494,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hideTab",
    "memberof": "src/js/ui/tabs.js~Tabs",
    "longname": "src/js/ui/tabs.js~Tabs#hideTab",
    "access": null,
    "description": "Hide the tab with the specified name.",
    "lineNumber": 140,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tabName",
        "description": "Name of the tab to hide."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 495,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "showTab",
    "memberof": "src/js/ui/tabs.js~Tabs",
    "longname": "src/js/ui/tabs.js~Tabs#showTab",
    "access": null,
    "description": "Show the tab with the specified name.",
    "lineNumber": 148,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tabName",
        "description": "Name of the tab to show."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 496,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "displayTab",
    "memberof": "src/js/ui/tabs.js~Tabs",
    "longname": "src/js/ui/tabs.js~Tabs#displayTab",
    "access": null,
    "description": "Set whether or not a tab should be displayed.",
    "lineNumber": 157,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tabName",
        "description": "Name of the tab."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isHiding",
        "description": "Whether or not the tab should be displayed."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 497,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateTabListDisplay",
    "memberof": "src/js/ui/tabs.js~Tabs",
    "longname": "src/js/ui/tabs.js~Tabs#updateTabListDisplay",
    "access": null,
    "description": "Update the display status of the tabList element. If there are 1 or fewer tabs, the tabList is hidden.",
    "lineNumber": 173,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 498,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getTabContentElement",
    "memberof": "src/js/ui/tabs.js~Tabs",
    "longname": "src/js/ui/tabs.js~Tabs#getTabContentElement",
    "access": null,
    "description": "Get the element associated with the specified tab.",
    "lineNumber": 187,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "tab",
        "description": "Name of tab or tab element."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "The element containing the tab content."
    },
    "generator": false
  },
  {
    "__docId__": 499,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectTabByName",
    "memberof": "src/js/ui/tabs.js~Tabs",
    "longname": "src/js/ui/tabs.js~Tabs#selectTabByName",
    "access": null,
    "description": "Select the tab with the specified name.",
    "lineNumber": 206,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The name of the tab."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 500,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectTabByTarget",
    "memberof": "src/js/ui/tabs.js~Tabs",
    "longname": "src/js/ui/tabs.js~Tabs#selectTabByTarget",
    "access": null,
    "description": "Select the given tab element.",
    "lineNumber": 215,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "targetElement",
        "description": "The tab element."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 501,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectElementByAttribute",
    "memberof": "src/js/ui/tabs.js~Tabs",
    "longname": "src/js/ui/tabs.js~Tabs#selectElementByAttribute",
    "access": null,
    "description": "Toggle selection class for an element (and its siblings) with the specified class, parent element, attribute name, and attribute value. Checks for an element with the specified attribute value for the attribute given.",
    "lineNumber": 232,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": "Name of the class of the element to select."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "toggleClass",
        "description": "Class that should be toggled to select the element."
      },
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "parentElement",
        "description": "Parent element of the element to select."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "attrName",
        "description": "Name of the attribute to check."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "attrVal",
        "description": "Value of the attribute to match."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 502,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectElementByTarget",
    "memberof": "src/js/ui/tabs.js~Tabs",
    "longname": "src/js/ui/tabs.js~Tabs#selectElementByTarget",
    "access": null,
    "description": "Toggle selection class for an element (and its siblings) with the specified class, parent element, and target element. Checks for an element that matches the target element.",
    "lineNumber": 245,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": "Name of the class of the element to select."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "toggleClass",
        "description": "Class that should be toggled to select the element."
      },
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "parentElement",
        "description": "Parent element of the element to select."
      },
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "targetElement",
        "description": "Element to select (if it exists)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 503,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectElementByCallback",
    "memberof": "src/js/ui/tabs.js~Tabs",
    "longname": "src/js/ui/tabs.js~Tabs#selectElementByCallback",
    "access": null,
    "description": "Toggle selection class for an element (and its siblings) with the specified class, parent element, and callback function. The callback should return true or false to select or deselect the elements.",
    "lineNumber": 258,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": "Name of the class of the element to select."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "toggleClass",
        "description": "Class that should be toggled to select the element."
      },
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "parentElement",
        "description": "Parent element of the element to select."
      },
      {
        "nullable": null,
        "types": [
          "function(element: Element): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function that determines whether the element is selected or not."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 504,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getElementByCallback",
    "memberof": "src/js/ui/tabs.js~Tabs",
    "longname": "src/js/ui/tabs.js~Tabs#getElementByCallback",
    "access": null,
    "description": "Get the element with the specified class name and parent element that meets the criteria of a filter function.",
    "lineNumber": 279,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": "Name of the element class."
      },
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "parentElement",
        "description": "Parent element of the element."
      },
      {
        "nullable": null,
        "types": [
          "function(element: Element): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function that determines whether the element should be returned or not."
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "Element if a matching one is found, null otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 505,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/ui/toolbar.js",
    "memberof": null,
    "longname": "src/js/ui/toolbar.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import NodeTool from '../tool/node-tool';\nimport EdgeTool from '../tool/edge-tool';\nimport EraseTool from '../tool/erase-tool';\nimport PanTool from '../tool/pan-tool';\nimport SelectMoveTool from '../tool/select-move-tool';\nimport AlgorithmTool from '../tool/algorithm-tool';\n\nconst TOOL_CLASS = 'tool';\nconst TOOL_NAME_ATTR = 'data-tool';\nconst TOOL_SELECTED_CLASS = 'btn-primary';\n\n/**\n * Class for controlling state of the toolbar.\n * @class Toolbar\n */\nclass Toolbar {\n\n  /**\n   * Reference to the UI instance.\n   * @type {UI}\n   */\n  ui;\n\n  /**\n   * The element containing the toolbar.\n   * @type {Element}\n   */\n  toolbar;\n\n  /**\n   * Map of tool names to tool instances.\n   * @type {Object.<string,Tool>}\n   */\n  toolMap = {\n    node: new NodeTool(),\n    edge: new EdgeTool(),\n    erase: new EraseTool(),\n    select: new SelectMoveTool(),\n    pan: new PanTool(),\n    algorithm: new AlgorithmTool()\n  };\n\n  /**\n   * Name of the curent tool.\n   * @type {String}\n   */\n  currentTool;\n\n  /**\n   * Tool button of the current tool.\n   * @type {Element}\n   */\n  currentToolElement;\n\n  /**\n   * Constructs a Toolbar instance.\n   * @param  {UI} ui - Reference to the UI instance.\n   * @constructs Toolbar\n   */\n  constructor(ui) {\n    this.ui = ui;\n    this.toolbar = document.getElementById('toolbar');\n    this.initListeners();\n  }\n\n  /**\n   * Initialize event listeners.\n   */\n  initListeners() {\n    this.toolbar.addEventListener('click', (event) => {\n      if (event.target.classList.contains(TOOL_CLASS)) {\n        this.selectTool(event.target);\n      }\n    });\n  }\n\n  /**\n   * Reset the toolbar state.\n   */\n  reset() {\n    this.selectToolByName('node');\n  }\n\n  /**\n   * Select tool by passing the element associated with it.\n   * @param  {Element} toolElement - Button on the toolbar for the tool.\n   */\n  selectTool(toolElement) {\n    if (this.currentTool) {\n      this.currentTool.cancel();\n    }\n\n    let toolName = toolElement.getAttribute(TOOL_NAME_ATTR);\n\n    this.currentTool = this.toolMap[toolName];\n    this.ui.sidebar.setSidebar(this.currentTool.sidebarType);\n\n    if (this.currentToolElement) {\n      this.currentToolElement.classList.remove(TOOL_SELECTED_CLASS);\n    }\n    this.currentToolElement = toolElement;\n    this.currentToolElement.classList.add(TOOL_SELECTED_CLASS);\n\n    this.currentTool.activate();\n    this.currentTool.changeMode(this.currentTool.currentMode);\n    this.ui.topBar.showModes();\n    this.ui.topBar.showInputs();\n    this.ui.topBar.showModeInputs();\n  }\n\n  /**\n   * Select a tool by name.\n   * @param  {string} toolName - Name of the tool.\n   */\n  selectToolByName(toolName) {\n    let toolElement = this.toolbar.querySelector(`.${TOOL_CLASS}[${TOOL_NAME_ATTR}=\"${toolName}\"]`);\n    this.selectTool(toolElement);\n  }\n}\n\nexport { Toolbar };\nexport default Toolbar;\n"
  },
  {
    "__docId__": 506,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "TOOL_CLASS",
    "memberof": "src/js/ui/toolbar.js",
    "longname": "src/js/ui/toolbar.js~TOOL_CLASS",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/toolbar.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 507,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "TOOL_NAME_ATTR",
    "memberof": "src/js/ui/toolbar.js",
    "longname": "src/js/ui/toolbar.js~TOOL_NAME_ATTR",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/toolbar.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 508,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "TOOL_SELECTED_CLASS",
    "memberof": "src/js/ui/toolbar.js",
    "longname": "src/js/ui/toolbar.js~TOOL_SELECTED_CLASS",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/ui/toolbar.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 509,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Toolbar",
    "memberof": "src/js/ui/toolbar.js",
    "longname": "src/js/ui/toolbar.js~Toolbar",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/ui/toolbar.js",
    "importStyle": "Toolbar",
    "description": "Class for controlling state of the toolbar.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Toolbar"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 510,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/ui/toolbar.js~Toolbar",
    "longname": "src/js/ui/toolbar.js~Toolbar#constructor",
    "access": null,
    "description": "Constructs a Toolbar instance.",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Toolbar"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "UI"
        ],
        "spread": false,
        "optional": false,
        "name": "ui",
        "description": "Reference to the UI instance."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 511,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "ui",
    "memberof": "src/js/ui/toolbar.js~Toolbar",
    "longname": "src/js/ui/toolbar.js~Toolbar#ui",
    "access": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 512,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "toolbar",
    "memberof": "src/js/ui/toolbar.js~Toolbar",
    "longname": "src/js/ui/toolbar.js~Toolbar#toolbar",
    "access": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 513,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "initListeners",
    "memberof": "src/js/ui/toolbar.js~Toolbar",
    "longname": "src/js/ui/toolbar.js~Toolbar#initListeners",
    "access": null,
    "description": "Initialize event listeners.",
    "lineNumber": 69,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 514,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "reset",
    "memberof": "src/js/ui/toolbar.js~Toolbar",
    "longname": "src/js/ui/toolbar.js~Toolbar#reset",
    "access": null,
    "description": "Reset the toolbar state.",
    "lineNumber": 80,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 515,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectTool",
    "memberof": "src/js/ui/toolbar.js~Toolbar",
    "longname": "src/js/ui/toolbar.js~Toolbar#selectTool",
    "access": null,
    "description": "Select tool by passing the element associated with it.",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "toolElement",
        "description": "Button on the toolbar for the tool."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 516,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "currentTool",
    "memberof": "src/js/ui/toolbar.js~Toolbar",
    "longname": "src/js/ui/toolbar.js~Toolbar#currentTool",
    "access": null,
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 517,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "currentToolElement",
    "memberof": "src/js/ui/toolbar.js~Toolbar",
    "longname": "src/js/ui/toolbar.js~Toolbar#currentToolElement",
    "access": null,
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 518,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectToolByName",
    "memberof": "src/js/ui/toolbar.js~Toolbar",
    "longname": "src/js/ui/toolbar.js~Toolbar#selectToolByName",
    "access": null,
    "description": "Select a tool by name.",
    "lineNumber": 115,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "toolName",
        "description": "Name of the tool."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 519,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/ui/top-bar.js",
    "memberof": null,
    "longname": "src/js/ui/top-bar.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Dropdown from '../ui/dropdown';\r\nimport * as Form from '../ui/form';\r\n\r\n/**\r\n * Class for controlling the state of the top bar. Used for displaying tool-related UI elements.\r\n * @class TopBar\r\n */\r\nclass TopBar {\r\n\r\n  ui;\r\n\r\n  topBar;\r\n\r\n  modeSelect;\r\n\r\n  dropdown;\r\n\r\n  inputForm;\r\n  modeInputForm;\r\n\r\n  currentMode;\r\n  currentModeElement;\r\n\r\n  /**\r\n   * Constructs a TopBar instance.\r\n   * @param  {UI} ui - Reference to the UI instance.\r\n   * @constructs TopBar\r\n   */\r\n  constructor(ui) {\r\n    this.ui = ui;\r\n    this.topBar = document.getElementById('top-bar');\r\n    this.modeSelect = document.getElementById('mode-select');\r\n    this.inputForm = document.getElementById('tool-inputs-form');\r\n    this.modeInputForm = document.getElementById('tool-mode-inputs-form');\r\n    this.dropdown = new Dropdown(this.modeSelect);\r\n    this.initListeners();\r\n  }\r\n\r\n  /**\r\n   * Initialize the event listeners.\r\n   */\r\n  initListeners() {\r\n    this.modeSelect.addEventListener('change', (event) => {\r\n      this.ui.toolbar.currentTool.changeMode(event.target.value);\r\n    });\r\n\r\n    this.inputForm.addEventListener('input', (event) => {\r\n      this.updateInputValues(event);\r\n    });\r\n\r\n    this.inputForm.addEventListener('change', (event) => {\r\n      this.updateInputValues(event);\r\n    });\r\n\r\n    this.modeInputForm.addEventListener('input', (event) => {\r\n      this.updateModeInputValues(event);\r\n    });\r\n\r\n    this.modeInputForm.addEventListener('input', (event) => {\r\n      this.updateModeInputValues(event);\r\n    });\r\n\r\n    this.modeInputForm.addEventListener('click', (event) => {\r\n      if (event.target.classList.contains('input-select-btn')) {\r\n        this.selectGraphObject(event);\r\n      }\r\n      if (event.target.classList.contains('form__submit-btn')) {\r\n        this.submitModeInputValues(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle graph object selection. This is used for tool inputs that request a graph object.\r\n   * @param  {Event} event - Event object from the event listener.\r\n   */\r\n  selectGraphObject(event) {\r\n    let currentTool = this.ui.toolbar.currentTool;\r\n    let output = event.target.parentNode.querySelector('output');\r\n    let input = output.parentNode.querySelector('input[type=\"hidden\"]');\r\n\r\n    if (currentTool.currentInput === input) {\r\n      currentTool.currentInput = null;\r\n      if (input.value) {\r\n        event.target.textContent = 'Change';\r\n      } else {\r\n        event.target.textContent = 'Select';\r\n      }\r\n    } else {\r\n      currentTool.currentInput = input;\r\n      event.target.textContent = 'Cancel';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the graph input after object selection.\r\n   * @param  {Element} input - The input element.\r\n   * @param  {(Node|Edge|Label)} obj - The selected graph object.\r\n   * @param  {boolean} hasError - Whether or not the input has an error.\r\n   */\r\n  updateGraphInput(input, obj, hasError) {\r\n    let currentTool = this.ui.toolbar.currentTool;\r\n    if (hasError) {\r\n      currentTool.currentInput = null;\r\n      return;\r\n    }\r\n\r\n    let id = obj.id;\r\n    input.value = id;\r\n\r\n    let name = input.name;\r\n    let output = input.parentNode.querySelector(`output[name=\"${name}\"]`);\r\n    output.value = `${input.getAttribute('data-type')} ${id}`;\r\n\r\n    let button = input.parentNode.querySelector('.input-select-btn');\r\n    button.textContent = 'Change';\r\n\r\n    currentTool.currentInput = null;\r\n  }\r\n\r\n  /**\r\n   * Handles a change in tool inputs.\r\n   * @param  {Event} event - Event object from the event listener.\r\n   */\r\n  updateInputValues(event) {\r\n    let input = event.target;\r\n    let name = input.name;\r\n    let value = Form.getInputValue(input);\r\n    this.ui.toolbar.currentTool.inputs[name] = value;\r\n    this.dropdown.updateOptionContent();\r\n  }\r\n\r\n  /**\r\n   * Handles a change in mode-specific tool inputs.\r\n   * @param  {Event} event - Event object from the event listener.\r\n   */\r\n  updateModeInputValues(event) {\r\n    let currentTool = this.ui.toolbar.currentTool;\r\n    if (!currentTool.submitModeInputs()) {\r\n      let input = event.target;\r\n      let name = input.name;\r\n      let value = Form.getInputValueLocal(input, this.ui.graph);\r\n      currentTool.modeInputs[name] = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles mode-specific tool input submission.\r\n   * @param  {Event} event - Event object from the event listener.\r\n   */\r\n  submitModeInputValues(event) {\r\n    let currentTool = this.ui.toolbar.currentTool;\r\n    if (currentTool.submitModeInputs()) {\r\n      let form = this.modeInputForm;\r\n      let data = Form.getData(form, this.ui.graph);\r\n\r\n      let hasError = false;\r\n\r\n      for (let field of currentTool.modeInputTypes) {\r\n        let name = field.name;\r\n        let showError = !field.test(data[name]);\r\n        Form.displayError(form, name, showError);\r\n\r\n        if (showError && !hasError) {\r\n          hasError = true;\r\n        }\r\n      }\r\n\r\n      if (hasError) {\r\n        return;\r\n      }\r\n\r\n      this.updateAllModeInputValues(data);\r\n      currentTool.submitModeInputsCallback();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the stored values of all mode-specific tool inputs.\r\n   * @param  {Object.<string,*>} inputData - Object containing names of inputs mapped to their values.\r\n   */\r\n  updateAllModeInputValues(inputData) {\r\n    let currentTool = this.ui.toolbar.currentTool;\r\n    for (let name of Object.keys(inputData)) {\r\n      if (name in currentTool.modeInputs) {\r\n        let value = inputData[name];\r\n        currentTool.modeInputs[name] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Displays the tool modes in the Dropdown.\r\n   */\r\n  showModes() {\r\n    let currentTool = this.ui.toolbar.currentTool;\r\n    if (currentTool.hasModes()) {\r\n      // populate modes list\r\n      let html = '';\r\n      for (let mode of Object.keys(currentTool.constructor.modes)) {\r\n        let selected = mode === currentTool.currentMode ? ' selected=\"true\"' : '';\r\n        html += `<option value=\"${mode}\" ${selected}>${mode}</option>`;\r\n      }\r\n\r\n      this.dropdown.optionMap = currentTool.optionMap;\r\n      this.dropdown.optionContent = currentTool.optionContent;\r\n      this.modeSelect.innerHTML = html;\r\n    } else {\r\n      // clear the modes\r\n      this.modeSelect.innerHTML = '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Displays the tool inputs in the inputForm element.\r\n   */\r\n  showInputs() {\r\n    let currentTool = this.ui.toolbar.currentTool;\r\n    if (currentTool.hasInputs()) {\r\n      let inputTypes = Object.create(currentTool.inputTypes);\r\n      let inputs = currentTool.inputs;\r\n      for (let field of inputTypes) {\r\n        let name = field.name;\r\n        field.value = inputs[name];\r\n      }\r\n      let formContent = Form.createForm(inputTypes);\r\n      this.inputForm.innerHTML = formContent;\r\n    } else {\r\n      this.inputForm.innerHTML = '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Displays the mode-specific tool inputs in the modeInputForm element.\r\n   */\r\n  showModeInputs() {\r\n    let currentTool = this.ui.toolbar.currentTool;\r\n    if (currentTool.hasModeInputs()) {\r\n      let inputTypes = [];\r\n      let inputs = currentTool.modeInputs;\r\n      for (let fieldType of currentTool.modeInputTypes) {\r\n        let field = Object.create(fieldType);\r\n        let name = field.name;\r\n        field.value = inputs[name];\r\n        inputTypes.push(field);\r\n      }\r\n      let formContent = Form.createGraphForm(inputTypes, currentTool.submitModeInputs(), currentTool.submitModeInputsText());\r\n      this.modeInputForm.innerHTML = formContent;\r\n    } else {\r\n      this.modeInputForm.innerHTML = '';\r\n    }\r\n  }\r\n}\r\n\r\nexport { TopBar };\r\nexport default TopBar;\r\n"
  },
  {
    "__docId__": 520,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TopBar",
    "memberof": "src/js/ui/top-bar.js",
    "longname": "src/js/ui/top-bar.js~TopBar",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/ui/top-bar.js",
    "importStyle": "TopBar",
    "description": "Class for controlling the state of the top bar. Used for displaying tool-related UI elements.",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TopBar"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 521,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/ui/top-bar.js~TopBar",
    "longname": "src/js/ui/top-bar.js~TopBar#constructor",
    "access": null,
    "description": "Constructs a TopBar instance.",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "TopBar"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "UI"
        ],
        "spread": false,
        "optional": false,
        "name": "ui",
        "description": "Reference to the UI instance."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 522,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "ui",
    "memberof": "src/js/ui/top-bar.js~TopBar",
    "longname": "src/js/ui/top-bar.js~TopBar#ui",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 523,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "topBar",
    "memberof": "src/js/ui/top-bar.js~TopBar",
    "longname": "src/js/ui/top-bar.js~TopBar#topBar",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 524,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "modeSelect",
    "memberof": "src/js/ui/top-bar.js~TopBar",
    "longname": "src/js/ui/top-bar.js~TopBar#modeSelect",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 525,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "inputForm",
    "memberof": "src/js/ui/top-bar.js~TopBar",
    "longname": "src/js/ui/top-bar.js~TopBar#inputForm",
    "access": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 526,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "modeInputForm",
    "memberof": "src/js/ui/top-bar.js~TopBar",
    "longname": "src/js/ui/top-bar.js~TopBar#modeInputForm",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 527,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "dropdown",
    "memberof": "src/js/ui/top-bar.js~TopBar",
    "longname": "src/js/ui/top-bar.js~TopBar#dropdown",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 528,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "initListeners",
    "memberof": "src/js/ui/top-bar.js~TopBar",
    "longname": "src/js/ui/top-bar.js~TopBar#initListeners",
    "access": null,
    "description": "Initialize the event listeners.",
    "lineNumber": 42,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 529,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectGraphObject",
    "memberof": "src/js/ui/top-bar.js~TopBar",
    "longname": "src/js/ui/top-bar.js~TopBar#selectGraphObject",
    "access": null,
    "description": "Toggle graph object selection. This is used for tool inputs that request a graph object.",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from the event listener."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 530,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateGraphInput",
    "memberof": "src/js/ui/top-bar.js~TopBar",
    "longname": "src/js/ui/top-bar.js~TopBar#updateGraphInput",
    "access": null,
    "description": "Update the graph input after object selection.",
    "lineNumber": 101,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "input",
        "description": "The input element."
      },
      {
        "nullable": null,
        "types": [
          "Node",
          "Edge",
          "Label"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "The selected graph object."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "hasError",
        "description": "Whether or not the input has an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 531,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateInputValues",
    "memberof": "src/js/ui/top-bar.js~TopBar",
    "longname": "src/js/ui/top-bar.js~TopBar#updateInputValues",
    "access": null,
    "description": "Handles a change in tool inputs.",
    "lineNumber": 125,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from the event listener."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 532,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateModeInputValues",
    "memberof": "src/js/ui/top-bar.js~TopBar",
    "longname": "src/js/ui/top-bar.js~TopBar#updateModeInputValues",
    "access": null,
    "description": "Handles a change in mode-specific tool inputs.",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from the event listener."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 533,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "submitModeInputValues",
    "memberof": "src/js/ui/top-bar.js~TopBar",
    "longname": "src/js/ui/top-bar.js~TopBar#submitModeInputValues",
    "access": null,
    "description": "Handles mode-specific tool input submission.",
    "lineNumber": 151,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event object from the event listener."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 534,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateAllModeInputValues",
    "memberof": "src/js/ui/top-bar.js~TopBar",
    "longname": "src/js/ui/top-bar.js~TopBar#updateAllModeInputValues",
    "access": null,
    "description": "Update the stored values of all mode-specific tool inputs.",
    "lineNumber": 182,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object.<string,*>"
        ],
        "spread": false,
        "optional": false,
        "name": "inputData",
        "description": "Object containing names of inputs mapped to their values."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 535,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "showModes",
    "memberof": "src/js/ui/top-bar.js~TopBar",
    "longname": "src/js/ui/top-bar.js~TopBar#showModes",
    "access": null,
    "description": "Displays the tool modes in the Dropdown.",
    "lineNumber": 195,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 536,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "showInputs",
    "memberof": "src/js/ui/top-bar.js~TopBar",
    "longname": "src/js/ui/top-bar.js~TopBar#showInputs",
    "access": null,
    "description": "Displays the tool inputs in the inputForm element.",
    "lineNumber": 217,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 537,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "showModeInputs",
    "memberof": "src/js/ui/top-bar.js~TopBar",
    "longname": "src/js/ui/top-bar.js~TopBar#showModeInputs",
    "access": null,
    "description": "Displays the mode-specific tool inputs in the modeInputForm element.",
    "lineNumber": 236,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 538,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/ui/ui.js",
    "memberof": null,
    "longname": "src/js/ui/ui.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Toolbar from '../ui/toolbar';\nimport StatusBar from '../ui/status-bar';\nimport Sidebar from '../ui/sidebar';\nimport TopBar from '../ui/top-bar';\nimport Canvas from '../ui/canvas';\nimport * as Form from '../ui/form';\n\n/**\n * Class for containing references to all UI controllers.\n * @class UI\n */\nclass UI {\n\n  /**\n   * The current Graph object.\n   * @type {Graph}\n   */\n  graph;\n\n  /**\n   * Instance of TopBar.\n   * @type {TopBar}\n   */\n  topBar;\n\n  /**\n   * Instance of Toolbar.\n   * @type {Toolbar}\n   */\n  toolbar;\n\n  /**\n   * Instance of Sidebar.\n   * @type {Sidebar}\n   */\n  sidebar;\n\n  /**\n   * Instance of StatusBar.\n   * @type {StatusBar}\n   */\n  statusBar;\n\n  /**\n   * Instance of Canvas.\n   * @type {Canvas}\n   */\n  canvas;\n\n  /**\n   * Constructs an instance of UI.\n   * @constructs UI\n   */\n  constructor() {\n    this.topBar = new TopBar(this);\n    this.toolbar = new Toolbar(this);\n    this.sidebar = new Sidebar(this);\n    this.statusBar = new StatusBar(this);\n    this.canvas = new Canvas(this);\n  }\n\n  /**\n   * Initialize the UI state.\n   * @param  {Graph} graph - The current Graph object.\n   */\n  init(graph) {\n    this.graph = graph;\n    this.sidebar.init(graph);\n    this.canvas.init(graph);\n    Form.init();\n  }\n\n  /**\n   * Reset the UI state and set a new Graph object as the current graph.\n   * @param {Graph} newGraph - The new Graph object.\n   */\n  resetGraph(newGraph) {\n    this.graph = newGraph;\n    this.toolbar.reset();\n    this.sidebar.resetGraph(newGraph);\n    this.canvas.resetGraph(newGraph);\n  }\n}\n\nconst ui = new UI();\n\nexport { ui };\nexport default ui;\n"
  },
  {
    "__docId__": 539,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "UI",
    "memberof": "src/js/ui/ui.js",
    "longname": "src/js/ui/ui.js~UI",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/ui/ui.js",
    "importStyle": null,
    "description": "Class for containing references to all UI controllers.",
    "lineNumber": 12,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "UI"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 540,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/ui/ui.js~UI",
    "longname": "src/js/ui/ui.js~UI#constructor",
    "access": null,
    "description": "Constructs an instance of UI.",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "UI"
      }
    ],
    "params": [],
    "generator": false
  },
  {
    "__docId__": 541,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "topBar",
    "memberof": "src/js/ui/ui.js~UI",
    "longname": "src/js/ui/ui.js~UI#topBar",
    "access": null,
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 542,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "toolbar",
    "memberof": "src/js/ui/ui.js~UI",
    "longname": "src/js/ui/ui.js~UI#toolbar",
    "access": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 543,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "sidebar",
    "memberof": "src/js/ui/ui.js~UI",
    "longname": "src/js/ui/ui.js~UI#sidebar",
    "access": null,
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 544,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "statusBar",
    "memberof": "src/js/ui/ui.js~UI",
    "longname": "src/js/ui/ui.js~UI#statusBar",
    "access": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 545,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "canvas",
    "memberof": "src/js/ui/ui.js~UI",
    "longname": "src/js/ui/ui.js~UI#canvas",
    "access": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 546,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "init",
    "memberof": "src/js/ui/ui.js~UI",
    "longname": "src/js/ui/ui.js~UI#init",
    "access": null,
    "description": "Initialize the UI state.",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current Graph object."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 547,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "graph",
    "memberof": "src/js/ui/ui.js~UI",
    "longname": "src/js/ui/ui.js~UI#graph",
    "access": null,
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 548,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resetGraph",
    "memberof": "src/js/ui/ui.js~UI",
    "longname": "src/js/ui/ui.js~UI#resetGraph",
    "access": null,
    "description": "Reset the UI state and set a new Graph object as the current graph.",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "newGraph",
        "description": "The new Graph object."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 549,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "graph",
    "memberof": "src/js/ui/ui.js~UI",
    "longname": "src/js/ui/ui.js~UI#graph",
    "access": null,
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 550,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ui",
    "memberof": "src/js/ui/ui.js",
    "longname": "src/js/ui/ui.js~ui",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/ui/ui.js",
    "importStyle": "ui",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "src/js/ui/ui.js~UI"
      ]
    }
  },
  {
    "__docId__": 551,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/util/bezier.js",
    "memberof": null,
    "longname": "src/js/util/bezier.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Calculates cube root.\n * This is needed due to limits of Math.pow():\n * From [MDN]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/pow}:\n * > due to \"even\" and \"odd\" roots laying close to each other,\n * > and limits in the floating number precision,\n * > negative bases with fractional exponents always return NaN\n * @param  {number} x - The number to find the cubic root of.\n * @return {number} - The cubic root of x.\n */\nfunction cuberoot(x) {\n  let y = Math.pow(Math.abs(x), 1 / 3);\n  return x < 0 ? -y : y;\n}\n\n/**\n * Solve the root for a linear equation ax + b = 0.\n * @param  {number} a - Coefficient for x term.\n * @param  {number} b - Constant.\n * @return {Array.<number>} - Array containing the root of the equation.\n */\nfunction solveLinear(a, b) {\n  return [ -b / a ];\n}\n\n/**\n * Solve the root for a quadratic equation ax^2 + bx + c = 0.\n * @param  {number} a - Coefficient for x^2 term.\n * @param  {number} b - Coefficient for x term.\n * @param  {number} c - Constant.\n * @param  {number} epsilon - Margin of error for checking zero.\n * @return {Array.<number>} - Array containing the root of the equation.\n */\nfunction solveQuadratic(a, b, c, epsilon) {\n  let roots;\n  let d = b * b - 4 * a * c;\n  if (Math.abs(d) < epsilon) {\n    roots = [ -b / (2 * a) ];\n  } else if (d > 0) {\n    roots = [ (-b + Math.sqrt(d)) / (2 * a), (-b - Math.sqrt(d)) / (2 * a) ];\n  }\n  return roots;\n}\n\n/**\n * Function to solve for x when ax^3 + bx^2 + c + d = 0.\n * Adapted from http://stackoverflow.com/a/27176424/1418962\n * @param  {number} a - Coefficient of x^3 term.\n * @param  {number} b - Coefficient of x^2 term.\n * @param  {number} c - Coefficient of x term.\n * @param  {number} d - Constant.\n * @param  {number} epsilon - Margin of error for checking zero.\n * @return {Array.<number>} - Array containing the root of the equation.\n */\nfunction solveCubic(a, b, c, d, epsilon) {\n  if (Math.abs(a) < epsilon) {\n    if (Math.abs(b) < epsilon) {\n      // Linear case, cx + d = 0\n      return solveLinear(c, d);\n    }\n    // Quadratic case, bx^2 + cx + d = 0\n    return solveQuadratic(b, c, d, epsilon);\n  }\n\n  // Convert to depressed cubic t^3 + pt + q = 0 (subst x = t - b / 3a)\n  let p = (3 * a * c - b * b) / (3 * a * a);\n  let q = (2 * b * b * b - 9 * a * b * c + 27 * a * a * d) / (27 * a * a * a);\n  let roots;\n\n  // https://en.wikipedia.org/wiki/Cubic_function#Cardano.27s_method\n  if (Math.abs(p) < epsilon) {\n    // p = 0\n    // t^3 = -q\n    // t = -q^1 / 3\n    roots = [ cuberoot(-q) ];\n  } else if (Math.abs(q) < epsilon) {\n    // q = 0\n    // t^3 + pt = 0\n    // t(t^2 + p) = 0\n    roots = [ 0 ].concat(p < 0 ? [ Math.sqrt(-p), -Math.sqrt(-p) ] : []);\n  } else {\n    let e = q * q / 4 + p * p * p / 27;\n    if (Math.abs(e) < epsilon) {\n      // e = 0 -> two roots\n      roots = [ -1.5 * q / p, 3 * q / p ];\n    } else if (e > 0) {\n      // Only one real root\n      let u = cuberoot(-q / 2 - Math.sqrt(e));\n      roots = [ u - p / (3 * u) ];\n    } else {\n      // e < 0, three roots, but needs to use complex numbers / trigonometric solution\n      let u = 2 * Math.sqrt(-p / 3);\n      // e < 0 implies p < 0 and acos argument in [-1..1]\n      let t = Math.acos(3 * q / p / u) / 3;\n      let k = 2 * Math.PI / 3;\n      roots = [ u * Math.cos(t), u * Math.cos(t - k), u * Math.cos(t - 2 * k) ];\n    }\n  }\n\n  // Convert back from depressed cubic\n  for (let i = 0; i < roots.length; i++) {\n    roots[i] -= b / (3 * a);\n  }\n\n  return roots;\n}\n\n\n/**\n * @typedef Point\n * @type {object}\n * @property {number} x - Number representing x-coordinate.\n * @property {number} y - Number representing y-coordinate.\n */\n\n/**\n * Function that calculates the distance between a specified point and a quadratic bezier.\n * @param  {number} pointX - x-coordinate of the specified point.\n * @param  {number} pointY - y-coordinate of the specified point.\n * @param  {Point} start - The start point of the bezier curve.\n * @param  {Point} control - The control point of the bezier curve.\n * @param  {Point} end - The end point of the bezier curve.\n * @return {number} - The distance between (pointX, pointY) and the bezier curve specified by start, control, and end.\n */\nexport function calcBezierDistance(pointX, pointY, start, control, end) {\n  // Quadratic bezier curves are parametrized as:\n  // P(t) = (1-t)^2 * P0 + 2 * t * (1-t) * C + t^2 * P1\n  //        for 0 <= t <= 1\n  //        where P(0) = P0, P(1) = P1, and C is the control point.\n  //\n  // P(t)     = (1-t)^2 * P0          +   2 * t * (1-t) * C   +   t^2 * P1\n  //          = (t^2 - 2t + 1) * P0   +   2 * (t - t^2) * C   +   t^2 * P1\n  // dP/dt(t) = (2t - 2) * P0         +   2 * (1 - 2t) * C    +   2t * P1\n  //          = (2t - 2) * P0         +   2 * (1 - 2t) * C    +   2t * P1\n  //          = 2t * P0 - 2 * P0      +   2 * C - 4t * C      +   2t * P1\n  //          = 2 * C - 2 * P0 + 2t * P0 - 4t * C + 2t * P1\n  //          = 2 * (C - P0) + 2t * (P0 - 2 * C + P1)\n  //          = 2 * (C - P0 + t * (P0 - 2C + P1))\n  //          = 2 * (C - P0 + t * (P1 - C - (C - P0)))\n  //          = 2 * (A + t * (P1 - C - A)) where A = C - P0\n  //          = 2 * (A + B * t)\n  //            where A = (C - P0) and B = (P1 - C - A)\n  //\n  let aX = control.x - start.x;\n  let aY = control.y - start.y;\n  let bX = end.x - control.x - aX;\n  let bY = end.y - control.y - aY;\n\n  // The closest point to M = (pointX, pointY) on the bezier curve will be\n  // when the dot product of MP (vector from M to the curve P) and dP/dt\n  // equals 0.\n  //\n  // MP = M - P\n  //    = M - (1-t)^2 * P0 + 2 * t * (1-t) * C + t^2 * P1\n  //\n  // The equation we need to solve becomes:\n  // MP . dP/dt = 0\n  // (M - (1-t)^2 * P0 + 2 * t * (1-t) * C + t^2 * P1) . dP/dt = 0\n  //\n  // This results in the cubic equation ax^3 + bx^2 + cx + d = 0\n  // where:\n  //   a = B^2\n  //   b = 3A . B\n  //   c = 2A^2 + M' . B\n  //   d = M' . A\n  //   M' = P0 - M\n  //\n  let mX = start.x - pointX;\n  let mY = start.y - pointY;\n\n  let a = bX * bX + bY * bY;\n  let b = 3 * (aX * bX + aY * bY);\n  let c = 2 * (aX * aX + aY * aY) + mX * bX + mY * bY;\n  let d = mX * aX + mY * aY;\n\n  // get the roots of the derivative\n  let roots = solveCubic(a, b, c, d, 1e-8);\n\n  // reject any roots that are not on the curve P(t) where 0 <= t <= 1\n  let validRoots = roots.filter((t) => t > 0 && t < 1);\n\n  // add the endpoints of the curve\n  validRoots.push(0);\n  validRoots.push(1);\n\n  // find root of derivative with minmal distance to (pointX, pointY)\n  let smallestDist = Infinity;\n  for (let t of validRoots) {\n    let curvePointX = (1 - t) * (1 - t) * start.x + 2 * t * (1 - t) * control.x + t * t * end.x;\n    let curvePointY = (1 - t) * (1 - t) * start.y + 2 * t * (1 - t) * control.y + t * t * end.y;\n    let distance = Math.sqrt((curvePointX - pointX) * (curvePointX - pointX) + (curvePointY - pointY) * (curvePointY - pointY));\n    if (smallestDist > distance) {\n      smallestDist = distance;\n    }\n  }\n\n  return smallestDist;\n}\n\n/**\n * Find the derivative of a quadratic bezier at a given point.\n * @param  {number} t - The point in the curve P(t) to find the derivative at.\n * @param  {Point} start - The start point of the bezier curve.\n * @param  {Point} control - The control point of the bezier curve.\n * @param  {Point} end - The end point of the bezier curve.\n * @return {Point} - Point object containing the x- and y-values of the derivative.\n */\nexport function bezierDerivative(t, start, control, end) {\n  return {\n    x: (2 * t - 2) * start.x + (2 - 4 * t) * control.x + 2 * t * end.x,\n    y: (2 * t - 2) * start.y + (2 - 4 * t) * control.y + 2 * t * end.y\n  };\n}\n"
  },
  {
    "__docId__": 552,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "cuberoot",
    "memberof": "src/js/util/bezier.js",
    "longname": "src/js/util/bezier.js~cuberoot",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/util/bezier.js",
    "importStyle": null,
    "description": "Calculates cube root.\nThis is needed due to limits of Math.pow():\nFrom [MDN]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/pow}:\n> due to \"even\" and \"odd\" roots laying close to each other,\n> and limits in the floating number precision,\n> negative bases with fractional exponents always return NaN",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "The number to find the cubic root of."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The cubic root of x."
    },
    "generator": false
  },
  {
    "__docId__": 553,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "solveLinear",
    "memberof": "src/js/util/bezier.js",
    "longname": "src/js/util/bezier.js~solveLinear",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/util/bezier.js",
    "importStyle": null,
    "description": "Solve the root for a linear equation ax + b = 0.",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "Coefficient for x term."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "Constant."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<number>"
      ],
      "spread": false,
      "description": "Array containing the root of the equation."
    },
    "generator": false
  },
  {
    "__docId__": 554,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "solveQuadratic",
    "memberof": "src/js/util/bezier.js",
    "longname": "src/js/util/bezier.js~solveQuadratic",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/util/bezier.js",
    "importStyle": null,
    "description": "Solve the root for a quadratic equation ax^2 + bx + c = 0.",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "Coefficient for x^2 term."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "Coefficient for x term."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": "Constant."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "epsilon",
        "description": "Margin of error for checking zero."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<number>"
      ],
      "spread": false,
      "description": "Array containing the root of the equation."
    },
    "generator": false
  },
  {
    "__docId__": 555,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "solveCubic",
    "memberof": "src/js/util/bezier.js",
    "longname": "src/js/util/bezier.js~solveCubic",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/util/bezier.js",
    "importStyle": null,
    "description": "Function to solve for x when ax^3 + bx^2 + c + d = 0.\nAdapted from http://stackoverflow.com/a/27176424/1418962",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "Coefficient of x^3 term."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "Coefficient of x^2 term."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": "Coefficient of x term."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "d",
        "description": "Constant."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "epsilon",
        "description": "Margin of error for checking zero."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<number>"
      ],
      "spread": false,
      "description": "Array containing the root of the equation."
    },
    "generator": false
  },
  {
    "__docId__": 556,
    "kind": "typedef",
    "static": true,
    "variation": null,
    "name": "Point",
    "memberof": "src/js/util/bezier.js",
    "longname": "src/js/util/bezier.js~Point",
    "access": null,
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Number representing x-coordinate."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Number representing y-coordinate."
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "Point"
    }
  },
  {
    "__docId__": 557,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "calcBezierDistance",
    "memberof": "src/js/util/bezier.js",
    "longname": "src/js/util/bezier.js~calcBezierDistance",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/util/bezier.js",
    "importStyle": "{calcBezierDistance}",
    "description": "Function that calculates the distance between a specified point and a quadratic bezier.",
    "lineNumber": 125,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pointX",
        "description": "x-coordinate of the specified point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pointY",
        "description": "y-coordinate of the specified point."
      },
      {
        "nullable": null,
        "types": [
          "Point"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "The start point of the bezier curve."
      },
      {
        "nullable": null,
        "types": [
          "Point"
        ],
        "spread": false,
        "optional": false,
        "name": "control",
        "description": "The control point of the bezier curve."
      },
      {
        "nullable": null,
        "types": [
          "Point"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "The end point of the bezier curve."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The distance between (pointX, pointY) and the bezier curve specified by start, control, and end."
    },
    "generator": false
  },
  {
    "__docId__": 558,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "bezierDerivative",
    "memberof": "src/js/util/bezier.js",
    "longname": "src/js/util/bezier.js~bezierDerivative",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/util/bezier.js",
    "importStyle": "{bezierDerivative}",
    "description": "Find the derivative of a quadratic bezier at a given point.",
    "lineNumber": 208,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": "The point in the curve P(t) to find the derivative at."
      },
      {
        "nullable": null,
        "types": [
          "Point"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "The start point of the bezier curve."
      },
      {
        "nullable": null,
        "types": [
          "Point"
        ],
        "spread": false,
        "optional": false,
        "name": "control",
        "description": "The control point of the bezier curve."
      },
      {
        "nullable": null,
        "types": [
          "Point"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "The end point of the bezier curve."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Point"
      ],
      "spread": false,
      "description": "Point object containing the x- and y-values of the derivative."
    },
    "generator": false
  },
  {
    "__docId__": 559,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/util/graph-serialize.js",
    "memberof": null,
    "longname": "src/js/util/graph-serialize.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "const nSerial = require('node-serialize');\nimport { Graph } from '../data/graph';\nimport { Node } from '../data/node/node';\nimport { Edge } from '../data/edge/edge';\nimport { Label } from '../data/label';\n\nimport { CircleNode } from '../data/node/circle-node';\nimport { TriangleNode } from '../data/node/triangle-node';\nimport { SquareNode } from '../data/node/square-node';\nimport { DiamondNode } from '../data/node/diamond-node';\nimport { PentagonNode } from '../data/node/pentagon-node';\nimport { HexagonNode } from '../data/node/hexagon-node';\nimport { OctagonNode } from '../data/node/octagon-node';\n\nimport { SolidEdge } from '../data/edge/solid-edge';\nimport { DashedEdge } from '../data/edge/dashed-edge';\n\nlet CIRCULARFLAG = '_$$ND_CC$$_';\nlet KEYPATHSEPARATOR = '_$$.$$_';\nlet IDTYPE = '_$$TYPE$$_';\nlet IDSET = '_$$SET$$_';\nlet IDNODE = '_$$NODE$$_';\nlet IDEDGE = '_$$EDGE$$_';\nlet IDLABEL = '_$$LABEL$$_';\nlet IDDATA = '_$$DATA$$_';\n\n/**\n * Serializer class takes care of saving\n * and loading graph via JSON manipulation\n */\nexport class Serializer {\n\n  static classesByName = {\n    CircleNode: CircleNode,\n    TriangleNode: TriangleNode,\n    SquareNode: SquareNode,\n    DiamondNode: DiamondNode,\n    PentagonNode: PentagonNode,\n    HexagonNode: HexagonNode,\n    OctagonNode: OctagonNode,\n    SolidEdge: SolidEdge,\n    DashedEdge: DashedEdge,\n    Label: Label\n  };\n\n  /**\n   * Serializer constructor\n   * @param {Graph} graph Current graph structure\n   * @param {function} resetFn function to reset graph\n   */\n  constructor(graph, resetFn) {\n    this.currentGraph = graph;\n    this.resetFn = resetFn;\n    this.quickString = '';\n\n    if (typeof document !== 'undefined') {\n      this.reader = new FileReader();\n      this.reader.addEventListener('load', (event) => {\n        this.uploadGraph();\n      });\n\n      this.uploader = document.getElementById('graph-uploader');\n      this.uploader.addEventListener('change', (event) => {\n        this.reader.readAsText(this.uploader.files[0]);\n      });\n      this.uploader.addEventListener('click', (event) => {\n        this.uploader.value = null;\n      });\n\n      this.downloadBtn = document.getElementById('load-graph-button');\n      this.downloadBtn.addEventListener('click', (event) => {\n        this.uploader.click();\n      });\n      this.downloadBtn = document.getElementById('save-graph-button');\n      this.downloadBtn.addEventListener('click', (event) => {\n        this.downloadGraph();\n      });\n      this.importBtn = document.getElementById('import-graph-button');\n      this.importBtn.addEventListener('click', (event) => {\n        this.importGraph();\n      });\n      this.exportBtn = document.getElementById('export-graph-button');\n      this.exportBtn.addEventListener('click', (event) => {\n        this.exportGraph();\n      });\n    }\n  }\n\n   /**\n   * Exports element of graph in object form\n   * @param {Object} elem is the element of graph to be exported\n   * @param {Object} cache is a remnant of the original serializer\n   * @param {string} path is a remnant of the original serializer\n   * @returns {Object} outputObj contains the element object data\n   */\n  exportElement(elem, cache, path) {\n    let outputObj = {};\n    let key;\n    let modKey;\n    let setElem;\n    let outElem;\n    cache[path] = elem;\n\n    for (let name of Object.keys(Serializer.classesByName)) {\n      if (elem instanceof Serializer.classesByName[name]) {\n        outputObj[IDTYPE] = name;\n        break;\n      }\n    }\n\n    for (key in elem) {\n      if (elem.hasOwnProperty(key)) {\n        if (typeof elem[key] === 'object' && elem[key] !== null) {\n          if (elem[key] instanceof Label) {\n            outputObj[IDLABEL + key] = this.exportElement(elem[key], cache, path + KEYPATHSEPARATOR + IDLABEL + key);\n          } else if (elem[key] instanceof Node) {\n            // Node Field Detected\n            outputObj[IDNODE + key] = elem[key].id;\n          } else if (elem[key] instanceof Edge) {\n            // Edge Field Detected\n            outputObj[IDEDGE + key] = elem[key].id;\n          } else if (elem[key] instanceof Array || elem[key] instanceof Set) {\n            if (elem[key] instanceof Set) {\n              modKey = IDSET + key;\n            } else {\n              modKey = key;\n            }\n            outputObj[modKey] = [];\n            for (setElem of elem[key]) {\n              if (setElem instanceof Node) {\n                // Node-Array Field Detected\n                outElem = IDNODE + setElem.id.toString();\n              } else if (setElem instanceof Edge) {\n                // Edge-Array Field Detected\n                outElem = IDEDGE + setElem.id.toString();\n              } else {\n                // Primitive-Array Field Detected\n                outElem = setElem;\n              }\n              outputObj[modKey].push(outElem);\n            }\n          } else {\n            outputObj[key] = nSerial.serialize(elem[key], false, outputObj[key], cache, path + KEYPATHSEPARATOR + key);\n          }\n        } else {\n          outputObj[key] = elem[key];\n        }\n      }\n    }\n    return outputObj;\n  }\n\n  /**\n   * Is called when user wants to download the graph\n   */\n  downloadGraph() {\n    let graphStr = JSON.stringify(this.serializeGraph());\n    let element = document.createElement('a');\n    element.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(graphStr));\n    element.setAttribute('download', 'graphdata.json');\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  }\n\n  /**\n   * Sets value of textbox to the serialzed graph in JSON form\n   */\n  exportGraph() {\n    let graphStr = JSON.stringify(this.serializeGraph());\n    this.quickString = graphStr;\n  }\n\n  /**\n   * Abstracts graph into outputOBj\n   * @returns {Object} outputObj JSON object that can be stringified, contains graph data\n   */\n  serializeGraph() {\n    let obj = this.currentGraph;\n    let cache = {};\n    let path = '$';\n    let outputObj = {};\n    let key;\n    let modKey;\n    let setElem;\n    let outElem;\n    cache[path] = obj;\n\n    for (key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (typeof obj[key] === 'object' && obj[key] !== null) {\n          if (obj[key] instanceof Set) {\n            modKey = IDSET + key;\n            outputObj[modKey] = [];\n            for (setElem of obj[key]) {\n              if (setElem instanceof Node || setElem instanceof Edge) {\n                outElem = this.exportElement(setElem, cache,\n                    path + KEYPATHSEPARATOR + modKey + KEYPATHSEPARATOR + outputObj[modKey].length.toString());\n              } else {\n                outElem = nSerial.serialize(setElem, false, outElem, cache,\n                    path + KEYPATHSEPARATOR + modKey + KEYPATHSEPARATOR + outputObj[modKey].length.toString());\n                // Foreign Set Object\n              }\n              outputObj[modKey].push(outElem);\n            }\n          } else {\n            outputObj[key] = nSerial.serialize(obj[key], false, outputObj[key], cache, path + KEYPATHSEPARATOR + key);\n          }\n        } else {\n          outputObj[key] = obj[key];\n        }\n      }\n    }\n    return outputObj;\n  }\n\n  /**\n   * Helper function to construct empty objects by class name\n   * @param {string} name of element type to allocate\n   * @returns {Object} the constructed object\n   */\n  allocateElement(name) {\n    // Element allocation of type has type 'name'\n    if (name.indexOf('Node') >= 0) {\n      return new Serializer.classesByName[name](0, 0);\n    } else if (name.indexOf('Edge') >= 0) {\n      return new Serializer.classesByName[name](null, null);\n    } else if (name.indexOf('Label') >= 0) {\n      return new Serializer.classesByName[name](0, 0, null);\n    }\n    return null;\n  }\n\n  /**\n   * Reads the elem contents and converts it to a raw JSON object newElem\n   * @param {Object} elem is the element of graph to be imported\n   * @param {Object} newElem is the return element and contains the imported data\n   * @param {Object} nodeCache allows for loading references to existing nodes\n   * @param {Object} edgeCache allows for loading references to existing edges\n   * @returns {Object} newElem a fully initialized graph element.\n   */\n  importElement(elem, newElem, nodeCache, edgeCache) {\n    let key;\n    let modKey;\n    let refKey;\n    let arrayElem;\n    let addObj;\n   // Element found of type 'elem[IDTYPE]'\n    delete elem[IDTYPE];\n    for (key in elem) {\n      if (elem.hasOwnProperty(key)) {\n        if (key.indexOf(IDLABEL) === 0) {\n          modKey = key.substring(IDLABEL.length);\n          newElem[modKey] = this.importElement(elem[key], this.allocateElement(elem[key][IDTYPE]), nodeCache, edgeCache);\n        } else if (key.indexOf(IDNODE) === 0) {\n          modKey = key.substring(IDNODE.length);\n          newElem[modKey] = nodeCache[elem[key]];\n          // Inner Node found called\n        } else if (key.indexOf(IDEDGE) === 0) {\n          modKey = key.substring(IDEDGE.length);\n          newElem[modKey] = edgeCache[elem[key]];\n          // Inner Edge found called\n        } else if (elem[key] instanceof Array) {\n          if (key.indexOf(IDSET) === 0) {\n            // Inner Set found\n            modKey = key.substring(IDSET.length);\n            newElem[modKey] = new Set();\n          } else {\n            // Inner Array found\n            modKey = key;\n            newElem[modKey] = [];\n          }\n          for (arrayElem of elem[key]) {\n            if (typeof arrayElem === 'string' || arrayElem instanceof String) {\n              if (arrayElem.indexOf(IDNODE) === 0) {\n                refKey = Number(arrayElem.substring(IDNODE.length));\n                addObj = nodeCache[refKey];\n                // Inner-Set Node found\n              } else if (arrayElem.indexOf(IDEDGE) === 0) {\n                refKey = Number(arrayElem.substring(IDEDGE.length));\n                addObj = edgeCache[refKey];\n                // Inner-Set Edge found\n              } else {\n                addObj = nSerial.unserialize(arrayElem, elem);\n              }\n            } else {\n              addObj = nSerial.unserialize(arrayElem, elem);\n            }\n            if (newElem[modKey] instanceof Set) {\n              newElem[modKey].add(addObj);\n            } else {\n              newElem[modKey].push(addObj);\n            }\n          }\n        } else if (typeof elem[key] === 'string' || elem[key] instanceof String) {\n          // Inner String found\n          if (elem[key].indexOf(CIRCULARFLAG) === 0) {\n            throw new Error('Can\\'t deserialize a circular dependency in the top-level graph.');\n          } else {\n            newElem[key] = elem[key];\n          }\n        } else if (key === 'isSelected' || key === 'showTextCtrl') {\n          // Inner Generic found\n          newElem[key] = false;\n        } else {\n          newElem[key] = nSerial.unserialize(elem[key], elem);\n        }\n      }\n    }\n    return newElem;\n  }\n\n  /**\n   * Will not run if the JSON reader fails. Loads the graph from JSON file\n   */\n  uploadGraph() {\n    let obj;\n    let deserializeInfo;\n    if (typeof this.reader.result === 'undefined' || this.reader.result === '') {\n      return;\n    }\n    try {\n      obj = JSON.parse(this.reader.result);\n      deserializeInfo = this.deserializeGraph(obj);\n    } catch (ex) {\n      // Exception thrown from parser or deserializer. Abort.\n      throw ex;\n    }\n    // Graph Upload OK\n    Node.numNodes = deserializeInfo.nodes;\n    Edge.numEdges = deserializeInfo.edges;\n    this.resetFn(deserializeInfo.graph);\n  }\n\n  /**\n   * Imports the graph from JSON string\n   */\n  importGraph() {\n    let obj;\n    let deserializeInfo;\n    if (this.quickString === '') {\n      console.log('Nothing has been saved');\n      return;\n    }\n    try {\n      obj = JSON.parse(this.quickString);\n      deserializeInfo = this.deserializeGraph(obj);\n    } catch (ex) {\n      // Exception thrown from parser or deserializer. Abort.\n      throw ex;\n    }\n    // Graph Quickload OK\n    Node.numNodes = deserializeInfo.nodes;\n    Edge.numEdges = deserializeInfo.edges;\n    this.resetFn(deserializeInfo.graph);\n  }\n\n  /**\n   * Reads the graph data and creates new elements accordingly\n   * @param {Object} obj is the graph data contained in obj\n   * @returns {Object} data containing the graph and nodes and edge counts\n   */\n  deserializeGraph(obj) {\n    let newGraph = new Graph();\n    let key;\n    let modKey;\n    let maxNodeID = 0;\n    let nodeCache = {};\n    let maxEdgeID = 0;\n    let edgeCache = {};\n    let elem;\n    let newElem;\n    if (obj === null || obj === {}) {\n      // Bad Object\n      return null;\n    }\n    for (key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (key.indexOf(IDSET) === 0 && obj[key] instanceof Array) {\n          modKey = key.substring(IDSET.length);\n          // Set found\n          newGraph[modKey] = new Set();\n          for (elem of obj[key]) {\n            if (elem[IDTYPE]) {\n              newElem = this.allocateElement(elem[IDTYPE]);\n              newElem.id = elem.id;\n              newElem[IDDATA] = elem;\n              if (newElem instanceof Node) {\n               // Cached Node with ID\n                nodeCache[newElem.id] = newElem;\n                maxNodeID = Math.max(maxNodeID, newElem.id);\n              } else if (newElem instanceof Edge) {\n                // Cached Edge with ID\n                edgeCache[newElem.id] = newElem;\n                maxEdgeID = Math.max(maxEdgeID, newElem.id);\n              }\n            } else {\n              newElem = nSerial.unserialize(elem, obj);\n            }\n            if (newElem !== null) {\n              newGraph[modKey].add(newElem);\n            }\n          }\n        } else if (typeof obj[key] === 'string' || obj[key] instanceof String) {\n          if (obj[key].indexOf(CIRCULARFLAG) === 0) {\n            throw new Error('Can\\'t deserialize a circular dependency in the top-level graph.');\n          } else {\n            newGraph[key] = obj[key];\n          }\n        } else {\n          newGraph[key] = nSerial.unserialize(obj[key], obj);\n        }\n      }\n    }\n    for (key in newGraph) {\n      if (newGraph.hasOwnProperty(key)) {\n        if (newGraph[key] instanceof Set) {\n          // Iterating Set\n          for (elem of newGraph[key]) {\n            if (elem[IDDATA]) {\n              this.importElement(elem[IDDATA], elem, nodeCache, edgeCache);\n              delete elem[IDDATA];\n            }\n          }\n        }\n      }\n    }\n\n    if (!newGraph.validate()) {\n      throw new Error('New Graph failed validation check');\n    }\n\n    return {\n      nodes: maxNodeID + 1,\n      edges: maxEdgeID + 1,\n      graph: newGraph\n    };\n  }\n\n  /**\n   * Resets the graph\n   * @param {Graph} newGraph is the graph data to reset with\n   */\n  resetGraph(newGraph) {\n     // Formality, in case it's triggered by something other than us.\n    if (newGraph instanceof Graph) {\n      this.currentGraph = newGraph;\n    }\n  }\n\n}\n"
  },
  {
    "__docId__": 560,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "nSerial",
    "memberof": "src/js/util/graph-serialize.js",
    "longname": "src/js/util/graph-serialize.js~nSerial",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/util/graph-serialize.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 561,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "CIRCULARFLAG",
    "memberof": "src/js/util/graph-serialize.js",
    "longname": "src/js/util/graph-serialize.js~CIRCULARFLAG",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/util/graph-serialize.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 562,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "KEYPATHSEPARATOR",
    "memberof": "src/js/util/graph-serialize.js",
    "longname": "src/js/util/graph-serialize.js~KEYPATHSEPARATOR",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/util/graph-serialize.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 563,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "IDTYPE",
    "memberof": "src/js/util/graph-serialize.js",
    "longname": "src/js/util/graph-serialize.js~IDTYPE",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/util/graph-serialize.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 564,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "IDSET",
    "memberof": "src/js/util/graph-serialize.js",
    "longname": "src/js/util/graph-serialize.js~IDSET",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/util/graph-serialize.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 565,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "IDNODE",
    "memberof": "src/js/util/graph-serialize.js",
    "longname": "src/js/util/graph-serialize.js~IDNODE",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/util/graph-serialize.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 566,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "IDEDGE",
    "memberof": "src/js/util/graph-serialize.js",
    "longname": "src/js/util/graph-serialize.js~IDEDGE",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/util/graph-serialize.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 567,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "IDLABEL",
    "memberof": "src/js/util/graph-serialize.js",
    "longname": "src/js/util/graph-serialize.js~IDLABEL",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/util/graph-serialize.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 568,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "IDDATA",
    "memberof": "src/js/util/graph-serialize.js",
    "longname": "src/js/util/graph-serialize.js~IDDATA",
    "access": null,
    "export": false,
    "importPath": "canvas-graph-creator/src/js/util/graph-serialize.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 569,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Serializer",
    "memberof": "src/js/util/graph-serialize.js",
    "longname": "src/js/util/graph-serialize.js~Serializer",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/util/graph-serialize.js",
    "importStyle": "{Serializer}",
    "description": "Serializer class takes care of saving\nand loading graph via JSON manipulation",
    "lineNumber": 31,
    "interface": false
  },
  {
    "__docId__": 570,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#constructor",
    "access": null,
    "description": "Serializer constructor",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "Current graph structure"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "resetFn",
        "description": "function to reset graph"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 571,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "currentGraph",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#currentGraph",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 572,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "resetFn",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#resetFn",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 573,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "quickString",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#quickString",
    "access": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 574,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "reader",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#reader",
    "access": null,
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 575,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "uploader",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#uploader",
    "access": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 576,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "downloadBtn",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#downloadBtn",
    "access": null,
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 577,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "downloadBtn",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#downloadBtn",
    "access": null,
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 578,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "importBtn",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#importBtn",
    "access": null,
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 579,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "exportBtn",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#exportBtn",
    "access": null,
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 580,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "exportElement",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#exportElement",
    "access": null,
    "description": "Exports element of graph in object form",
    "lineNumber": 96,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} outputObj contains the element object data"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "is the element of graph to be exported"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "cache",
        "description": "is a remnant of the original serializer"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "is a remnant of the original serializer"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "outputObj contains the element object data"
    },
    "generator": false
  },
  {
    "__docId__": 581,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "downloadGraph",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#downloadGraph",
    "access": null,
    "description": "Is called when user wants to download the graph",
    "lineNumber": 156,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 582,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "exportGraph",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#exportGraph",
    "access": null,
    "description": "Sets value of textbox to the serialzed graph in JSON form",
    "lineNumber": 173,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 583,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "quickString",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#quickString",
    "access": null,
    "description": null,
    "lineNumber": 175,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 584,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "serializeGraph",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#serializeGraph",
    "access": null,
    "description": "Abstracts graph into outputOBj",
    "lineNumber": 182,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} outputObj JSON object that can be stringified, contains graph data"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "outputObj JSON object that can be stringified, contains graph data"
    },
    "generator": false
  },
  {
    "__docId__": 585,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "allocateElement",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#allocateElement",
    "access": null,
    "description": "Helper function to construct empty objects by class name",
    "lineNumber": 226,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} the constructed object"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "of element type to allocate"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the constructed object"
    },
    "generator": false
  },
  {
    "__docId__": 586,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "importElement",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#importElement",
    "access": null,
    "description": "Reads the elem contents and converts it to a raw JSON object newElem",
    "lineNumber": 246,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} newElem a fully initialized graph element."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "is the element of graph to be imported"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newElem",
        "description": "is the return element and contains the imported data"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "nodeCache",
        "description": "allows for loading references to existing nodes"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "edgeCache",
        "description": "allows for loading references to existing edges"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "newElem a fully initialized graph element."
    },
    "generator": false
  },
  {
    "__docId__": 587,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "uploadGraph",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#uploadGraph",
    "access": null,
    "description": "Will not run if the JSON reader fails. Loads the graph from JSON file",
    "lineNumber": 320,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 588,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "importGraph",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#importGraph",
    "access": null,
    "description": "Imports the graph from JSON string",
    "lineNumber": 342,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 589,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "deserializeGraph",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#deserializeGraph",
    "access": null,
    "description": "Reads the graph data and creates new elements accordingly",
    "lineNumber": 367,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} data containing the graph and nodes and edge counts"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "is the graph data contained in obj"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "data containing the graph and nodes and edge counts"
    },
    "generator": false
  },
  {
    "__docId__": 590,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resetGraph",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#resetGraph",
    "access": null,
    "description": "Resets the graph",
    "lineNumber": 448,
    "params": [
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "newGraph",
        "description": "is the graph data to reset with"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 591,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "currentGraph",
    "memberof": "src/js/util/graph-serialize.js~Serializer",
    "longname": "src/js/util/graph-serialize.js~Serializer#currentGraph",
    "access": null,
    "description": null,
    "lineNumber": 451,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 592,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/util/line-2d.js",
    "memberof": null,
    "longname": "src/js/util/line-2d.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\r\n * Class representing 2D lines. Container for a pair of 2D points and some helper functions.\r\n * @class Line2D\r\n */\r\nclass Line2D {\r\n\r\n  /**\r\n   * First point on the line.\r\n   * @type {Point2D}\r\n   */\r\n  a;\r\n\r\n  /**\r\n   * Second point on the line.\r\n   * @type {Point2D}\r\n   */\r\n  b;\r\n\r\n  /**\r\n   * Constructs a Line2D object.\r\n   * @param  {Point2D} a - First point of the line.\r\n   * @param  {Point2D} b - Second point of the line.\r\n   * @constructs Line2D\r\n   */\r\n  constructor(a, b) {\r\n    this.a = a;\r\n    this.b = b;\r\n  }\r\n\r\n  /**\r\n   * Checks if the given point is on the line.\r\n   * @param  {Point2D} c - The point to check.\r\n   * @return {boolean} - Whether or not the given point is on the line.\r\n   */\r\n  hasPoint(c) {\r\n    let ab = this.a.vectorTo(this.b);\r\n    let ac = this.a.vectorTo(c);\r\n    let cross = ab.cross(ac);\r\n    return Math.abs(cross) < 1e-8;\r\n  }\r\n}\r\n\r\nexport { Line2D };\r\nexport default Line2D;\r\n"
  },
  {
    "__docId__": 593,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Line2D",
    "memberof": "src/js/util/line-2d.js",
    "longname": "src/js/util/line-2d.js~Line2D",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/util/line-2d.js",
    "importStyle": "Line2D",
    "description": "Class representing 2D lines. Container for a pair of 2D points and some helper functions.",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Line2D"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 594,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/util/line-2d.js~Line2D",
    "longname": "src/js/util/line-2d.js~Line2D#constructor",
    "access": null,
    "description": "Constructs a Line2D object.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Line2D"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "First point of the line."
      },
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "Second point of the line."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 595,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "a",
    "memberof": "src/js/util/line-2d.js~Line2D",
    "longname": "src/js/util/line-2d.js~Line2D#a",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 596,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "b",
    "memberof": "src/js/util/line-2d.js~Line2D",
    "longname": "src/js/util/line-2d.js~Line2D#b",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 597,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hasPoint",
    "memberof": "src/js/util/line-2d.js~Line2D",
    "longname": "src/js/util/line-2d.js~Line2D#hasPoint",
    "access": null,
    "description": "Checks if the given point is on the line.",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": "The point to check."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the given point is on the line."
    },
    "generator": false
  },
  {
    "__docId__": 598,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/util/mouse-handler.js",
    "memberof": null,
    "longname": "src/js/util/mouse-handler.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Node from '../data/node/node';\nimport Edge from '../data/edge/edge';\nimport Label from '../data/label';\nimport ui from '../ui/ui';\n\nimport PanTool from '../tool/pan-tool';\n\n/**\n * Mouse event handler. Calls the appropriate event handler for the current tool based on user actions.\n * @class MouseHandler\n */\nclass MouseHandler {\n\n  // distance the mouse needs to move to start a drag\n  // this prevents accidentally dragging a few pixels when actually trying to click\n  DRAG_THRESHOLD = 7;\n\n  selectedObject = null;\n  draggedObject = null;\n\n  clickStartX = null;\n  clickStartY = null;\n  mousePressed = false;\n  isDragging = false;\n\n  rightClickStartX = null;\n  rightClickStartY = null;\n  rightMousePressed = false;\n  isRightDragging = false;\n  wasRightDragging = false;\n\n  panTool = new PanTool();\n\n  /**\n   * Constructs a MouseHandler instance.\n   * @param  {Graph} graph - The current Graph object.\n   * @constructs MouseHandler\n   */\n  constructor(graph) {\n    this.graph = graph;\n  }\n\n  /**\n   * Update the graph reference.\n   * @param {Graph} newGraph - The new Graph object.\n   */\n  resetGraph(newGraph) {\n    this.graph = newGraph;\n    this.selectedObject = null;\n    this.draggedObject = null;\n\n    this.clickStartX = null;\n    this.clickStartY = null;\n    this.mousePressed = false;\n    this.isDragging = false;\n  }\n\n  /**\n   * Handles the mousedown event for the left mouse button.\n   * @param  {Event} event - The Event object from the event listener.\n   * @param  {Tool} currentTool - The currently selected tool.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  downListener(event, currentTool, x, y) {\n    this.mousePressed = true;\n    this.clickStartX = x;\n    this.clickStartY = y;\n\n    if (this.graph.hasComponent(x, y)) {\n      let component = this.graph.getComponent(x, y);\n      if (currentTool.preSelectObject(event, this.graph, component, x, y)) {\n        // console.log('Preselect Object Ok!');\n        this.selectedObject = component;\n      } else {\n        // console.log('Preselect Object Denied!');\n        this.selectedObject = null;\n      }\n    } else {\n      // console.log('Preselect None!');\n      currentTool.preSelectNone(event, this.graph, x, y);\n      this.selectedObject = null;\n    }\n  }\n\n  /**\n   * Handles the mouseup event for the left mouse button.\n   * @param  {Event} event - The Event object from the event listener.\n   * @param  {Tool} currentTool - The currently selected tool.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  upListener(event, currentTool, x, y) {\n    // check if dragging\n    if (this.isDragging) {\n      this.isDragging = false;\n\n      // drop object\n      if (this.graph.hasComponent(x, y, this.draggedObject)) {\n        currentTool.dropOnObject(event, this.graph, this.draggedObject, this.graph.getComponent(x, y), x, y);\n      } else {\n        currentTool.dropOnNone(event, this.graph, this.draggedObject, x, y);\n      }\n      this.draggedObject = null;\n    } else if (this.mousePressed) {\n      // click\n      let component = null;\n      if (this.graph.hasComponent(x, y)) {\n        component = this.graph.getComponent(x, y);\n      }\n      if (component === this.selectedObject) {\n        if (component) {\n          currentTool.selectObject(event, this.graph, component, x, y);\n          ui.sidebar.updateSidebar(component);\n        } else {\n          currentTool.selectNone(event, this.graph, x, y);\n          ui.sidebar.updateSidebar();\n        }\n      } else {\n        currentTool.abortSelect(this.graph, x, y);\n      }\n    }\n    this.mousePressed = false;\n    this.selectedObject = null;\n  }\n\n  /**\n   * Handles the mousemove event for the left mouse button.\n   * @param  {Event} event - The Event object from the event listener.\n   * @param  {Tool} currentTool - The currently selected tool.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  moveListener(event, currentTool, x, y) {\n    ui.statusBar.updateMouse(x, y);\n\n    if (!this.isDragging) {\n      // check for dragging\n      if (this.mousePressed) {\n        // check if mouse movement passes threshold\n        let dx = x - this.clickStartX;\n        let dy = y - this.clickStartY;\n\n        if (Math.sqrt(dx * dx + dy * dy) >= this.DRAG_THRESHOLD) {\n          // console.log('Drag Threshold!');\n          this.isDragging = true;\n          if (this.selectedObject !== null) {\n            if (currentTool.preDragObject(event, this.graph, this.selectedObject, x, y)) {\n              this.draggedObject = this.selectedObject;\n            } else {\n              this.selectedObject = null;\n              this.draggedObject = null;\n            }\n          } else {\n            currentTool.preDragNone(event, this.graph, x, y);\n            this.draggedObject = this.selectedObject;\n          }\n        }\n      } else {\n        // regular move\n        // hover effect?\n      }\n    } else if (this.draggedObject) {\n      // handle dragging object\n      currentTool.dragObject(event, this.graph, this.draggedObject, x, y);\n      ui.sidebar.updateSidebar(this.draggedObject);\n    } else if (this.graph.hasComponent(x, y)) {\n      // handle dragging over object\n      currentTool.dragOverObject(event, this.graph, this.graph.getComponent(x, y), x, y);\n      ui.sidebar.updateSidebar();\n    } else {\n      // handle dragging empty space\n      currentTool.dragNone(event, this.graph, x, y);\n    }\n  }\n\n  /**\n   * Handles the mousedown event for the right mouse button.\n   * @param  {Event} event - The Event object from the event listener.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  rightDownListener(event, x, y) {\n    this.rightMousePressed = true;\n    this.rightClickStartX = x;\n    this.rightClickStartY = y;\n\n    this.panTool.preSelectNone(event, this.graph, x, y);\n  }\n\n  /**\n   * Handles the mouseup event for the right mouse button.\n   * @param  {Event} event - The Event object from the event listener.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  rightUpListener(event, x, y) {\n    // check if dragging\n    if (this.isRightDragging) {\n      this.isRightDragging = false;\n      this.panTool.dropOnNone(event, this.graph, null, x, y);\n    } else if (this.rightMousePressed) {\n      // click\n      this.panTool.selectNone(event, this.graph, x, y);\n    }\n    this.rightMousePressed = false;\n  }\n\n  /**\n   * Handles the mousemove event for the right mouse button.\n   * @param  {Event} event - The Event object from the event listener.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  rightMoveListener(event, x, y) {\n    ui.statusBar.updateMouse(x, y);\n    if (!this.isRightDragging) {\n      // check for dragging\n      if (this.rightMousePressed) {\n        // check if mouse movement passes threshold\n        let dx = x - this.rightClickStartX;\n        let dy = y - this.rightClickStartY;\n\n        if (Math.sqrt(dx * dx + dy * dy) >= this.DRAG_THRESHOLD) {\n          this.isRightDragging = true;\n          this.wasRightDragging = true;\n          this.panTool.preDragNone(this.graph, x, y);\n        }\n      }\n    } else {\n      // handle dragging\n      this.panTool.dragNone(event, this.graph, x, y);\n    }\n  }\n\n  /**\n   * Handles the contextmenu event.\n   * @param  {Event} event - The Event object from the event listener.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   * @param  {ContextMenu} contextMenu - ContextMenu object.\n   */\n  contextmenuEventListener(event, x, y, contextMenu) {\n    if (this.wasRightDragging) {\n      // prevent default context menu\n      event.preventDefault();\n      this.wasRightDragging = false;\n    } else if (event.target === document.getElementById('canvas')) {\n      // open context menu if mouse was not right dragging\n      contextMenu.contextmenuEventListener(event, x, y);\n    }\n  }\n\n  /**\n   * Get the graph component that is under the mouse when the context menu event was triggered.\n   * @param  {Event} event - The Event object from the event listener.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   * @return {(Node|Edge|Label)} - The object that is under the mouse.\n   */\n  contextComponent(event, x, y) {\n    if (this.graph.hasComponent(x, y)) {\n      this.selectedObject = this.graph.getComponent(x, y);\n    }\n    return this.selectedObject;\n  }\n\n  /**\n   * Handle the context menu \"add\" action.\n   * @param  {string} arg - Name of object to add.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  contextAdd(arg, x, y) {\n    if (arg === 'edge') {\n      ui.toolbar.selectToolByName('edge');\n      ui.toolbar.toolMap.edge.selectNode(this.graph, this.selectedObject);\n    } else {\n      ui.toolbar.selectToolByName('node');\n      ui.toolbar.toolMap.node.addNode(arg, this.graph, x, y);\n    }\n  }\n\n  /**\n   * Handle the context menu \"toggle\" action.\n   * @param  {string} arg - Name of the field to toggle.\n   */\n  contextToggle(arg) {\n    this.selectedObject[arg] = !this.selectedObject[arg];\n  }\n\n  /**\n   * Handle the context menu \"delete\" action.\n   */\n  contextDelete() {\n    if (this.selectedObject instanceof Node) {\n      this.graph.removeNode(this.selectedObject);\n    } else if (this.selectedObject instanceof Edge) {\n      this.graph.removeEdge(this.selectedObject);\n    } else if (this.selectedObject instanceof Label) {\n      this.selectedObject.content = '';\n    }\n  }\n\n  /**\n   * Handle context menu object selection.\n   * @param  {Event} event - The Event object from the event listener.\n   * @param  {Tool} currentTool - The currently selected tool.\n   * @param  {number} x - Mouse x-coordinate (in canvas coordinates).\n   * @param  {number} y - Mouse y-coordinate (in canvas coordinates).\n   */\n  contextSelect(event, currentTool, x, y) {\n    currentTool.selectObject(event, this.graph, this.selectedObject, x, y);\n  }\n}\n\nexport { MouseHandler };\nexport default MouseHandler;\n"
  },
  {
    "__docId__": 599,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MouseHandler",
    "memberof": "src/js/util/mouse-handler.js",
    "longname": "src/js/util/mouse-handler.js~MouseHandler",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/util/mouse-handler.js",
    "importStyle": "MouseHandler",
    "description": "Mouse event handler. Calls the appropriate event handler for the current tool based on user actions.",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MouseHandler"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 600,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#constructor",
    "access": null,
    "description": "Constructs a MouseHandler instance.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "MouseHandler"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "graph",
        "description": "The current Graph object."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 601,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "graph",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#graph",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 602,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resetGraph",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#resetGraph",
    "access": null,
    "description": "Update the graph reference.",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "Graph"
        ],
        "spread": false,
        "optional": false,
        "name": "newGraph",
        "description": "The new Graph object."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 603,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "graph",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#graph",
    "access": null,
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 604,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selectedObject",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#selectedObject",
    "access": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 605,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "draggedObject",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#draggedObject",
    "access": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 606,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "clickStartX",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#clickStartX",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 607,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "clickStartY",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#clickStartY",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 608,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "mousePressed",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#mousePressed",
    "access": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 609,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "isDragging",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#isDragging",
    "access": null,
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 610,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "downListener",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#downListener",
    "access": null,
    "description": "Handles the mousedown event for the left mouse button.",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The Event object from the event listener."
      },
      {
        "nullable": null,
        "types": [
          "Tool"
        ],
        "spread": false,
        "optional": false,
        "name": "currentTool",
        "description": "The currently selected tool."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 611,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "mousePressed",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#mousePressed",
    "access": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 612,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "clickStartX",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#clickStartX",
    "access": null,
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 613,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "clickStartY",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#clickStartY",
    "access": null,
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 614,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selectedObject",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#selectedObject",
    "access": null,
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 615,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selectedObject",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#selectedObject",
    "access": null,
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 616,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selectedObject",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#selectedObject",
    "access": null,
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 617,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "upListener",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#upListener",
    "access": null,
    "description": "Handles the mouseup event for the left mouse button.",
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The Event object from the event listener."
      },
      {
        "nullable": null,
        "types": [
          "Tool"
        ],
        "spread": false,
        "optional": false,
        "name": "currentTool",
        "description": "The currently selected tool."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 618,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "isDragging",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#isDragging",
    "access": null,
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 619,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "draggedObject",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#draggedObject",
    "access": null,
    "description": null,
    "lineNumber": 104,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 620,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "mousePressed",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#mousePressed",
    "access": null,
    "description": null,
    "lineNumber": 123,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 621,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selectedObject",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#selectedObject",
    "access": null,
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 622,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "moveListener",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#moveListener",
    "access": null,
    "description": "Handles the mousemove event for the left mouse button.",
    "lineNumber": 134,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The Event object from the event listener."
      },
      {
        "nullable": null,
        "types": [
          "Tool"
        ],
        "spread": false,
        "optional": false,
        "name": "currentTool",
        "description": "The currently selected tool."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 623,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "isDragging",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#isDragging",
    "access": null,
    "description": null,
    "lineNumber": 146,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 624,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "draggedObject",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#draggedObject",
    "access": null,
    "description": null,
    "lineNumber": 149,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 625,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selectedObject",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#selectedObject",
    "access": null,
    "description": null,
    "lineNumber": 151,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 626,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "draggedObject",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#draggedObject",
    "access": null,
    "description": null,
    "lineNumber": 152,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 627,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "draggedObject",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#draggedObject",
    "access": null,
    "description": null,
    "lineNumber": 156,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 628,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "rightDownListener",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#rightDownListener",
    "access": null,
    "description": "Handles the mousedown event for the right mouse button.",
    "lineNumber": 183,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The Event object from the event listener."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 629,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "rightMousePressed",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#rightMousePressed",
    "access": null,
    "description": null,
    "lineNumber": 184,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 630,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "rightClickStartX",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#rightClickStartX",
    "access": null,
    "description": null,
    "lineNumber": 185,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 631,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "rightClickStartY",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#rightClickStartY",
    "access": null,
    "description": null,
    "lineNumber": 186,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 632,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "rightUpListener",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#rightUpListener",
    "access": null,
    "description": "Handles the mouseup event for the right mouse button.",
    "lineNumber": 197,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The Event object from the event listener."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 633,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "isRightDragging",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#isRightDragging",
    "access": null,
    "description": null,
    "lineNumber": 200,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 634,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "rightMousePressed",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#rightMousePressed",
    "access": null,
    "description": null,
    "lineNumber": 206,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 635,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "rightMoveListener",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#rightMoveListener",
    "access": null,
    "description": "Handles the mousemove event for the right mouse button.",
    "lineNumber": 215,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The Event object from the event listener."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 636,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "isRightDragging",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#isRightDragging",
    "access": null,
    "description": null,
    "lineNumber": 225,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 637,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "wasRightDragging",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#wasRightDragging",
    "access": null,
    "description": null,
    "lineNumber": 226,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 638,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "contextmenuEventListener",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#contextmenuEventListener",
    "access": null,
    "description": "Handles the contextmenu event.",
    "lineNumber": 243,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The Event object from the event listener."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "ContextMenu"
        ],
        "spread": false,
        "optional": false,
        "name": "contextMenu",
        "description": "ContextMenu object."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 639,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "wasRightDragging",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#wasRightDragging",
    "access": null,
    "description": null,
    "lineNumber": 247,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 640,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "contextComponent",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#contextComponent",
    "access": null,
    "description": "Get the graph component that is under the mouse when the context menu event was triggered.",
    "lineNumber": 261,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The Event object from the event listener."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Node",
        "Edge",
        "Label"
      ],
      "spread": false,
      "description": "The object that is under the mouse."
    },
    "generator": false
  },
  {
    "__docId__": 641,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selectedObject",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#selectedObject",
    "access": null,
    "description": null,
    "lineNumber": 263,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 642,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "contextAdd",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#contextAdd",
    "access": null,
    "description": "Handle the context menu \"add\" action.",
    "lineNumber": 274,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg",
        "description": "Name of object to add."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 643,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "contextToggle",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#contextToggle",
    "access": null,
    "description": "Handle the context menu \"toggle\" action.",
    "lineNumber": 288,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg",
        "description": "Name of the field to toggle."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 644,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "contextDelete",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#contextDelete",
    "access": null,
    "description": "Handle the context menu \"delete\" action.",
    "lineNumber": 295,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 645,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "contextSelect",
    "memberof": "src/js/util/mouse-handler.js~MouseHandler",
    "longname": "src/js/util/mouse-handler.js~MouseHandler#contextSelect",
    "access": null,
    "description": "Handle context menu object selection.",
    "lineNumber": 312,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The Event object from the event listener."
      },
      {
        "nullable": null,
        "types": [
          "Tool"
        ],
        "spread": false,
        "optional": false,
        "name": "currentTool",
        "description": "The currently selected tool."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Mouse x-coordinate (in canvas coordinates)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Mouse y-coordinate (in canvas coordinates)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 646,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/util/point-2d.js",
    "memberof": null,
    "longname": "src/js/util/point-2d.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Vector2D from './vector-2d';\r\nimport Line2D from './line-2d';\r\n\r\n/**\r\n * Class representing 2D points.\r\n * @class Point2D\r\n */\r\nclass Point2D {\r\n\r\n  static EPSILON = 1e-8;\r\n\r\n  /**\r\n   * x-coordinate of the point.\r\n   * @type {number}\r\n   */\r\n  x;\r\n\r\n  /**\r\n   * y-coordinate of the point.\r\n   * @type {number}\r\n   */\r\n  y;\r\n\r\n  /**\r\n   * Constructs a Point2D object.\r\n   * @param {number} x - x-coordinate of the point.\r\n   * @param {number} y - y-coordinate of the point.\r\n   * @constructs Point2D\r\n   */\r\n  constructor(x, y) {\r\n    this.x = Math.abs(x) < Point2D.EPSILON ? 0 : x;\r\n    this.y = Math.abs(y) < Point2D.EPSILON ? 0 : y;\r\n  }\r\n\r\n  /**\r\n   * Checks if this point and another point are equal. Returns true if the x- and y-coordinates are equal.\r\n   * @param  {Point2D} point - Point to compare with.\r\n   * @return {boolean} - Whether or not the points are equivalent.\r\n   */\r\n  equals(point) {\r\n    return Math.abs(this.x - point.x) < Point2D.EPSILON && Math.abs(this.y - point.y) < Point2D.EPSILON;\r\n  }\r\n\r\n  /**\r\n   * Finds the distance between this point and another point.\r\n   * @param  {Point2D} point - Point to find the distance to.\r\n   * @return {number} - Distance between the points.\r\n   */\r\n  distanceTo(point) {\r\n    let dx = point.x - this.x;\r\n    let dy = point.y - this.y;\r\n    let dist = Math.sqrt(dx * dx + dy * dy);\r\n    return Math.abs(dist) < Point2D.EPSILON ? 0 : dist;\r\n  }\r\n\r\n  /**\r\n   * Finds the coordinates this point should have relative to a triangle.\r\n   * @param  {Triangle2D} oldTriangle - Triangle2D object containing the triangle's old position.\r\n   * @param  {Triangle2D} newTriangle - Triangle2D object containing the triangle's new position.\r\n   * @return {Point2D} - Point representing the point's location relative the the triangle's new position.\r\n   */\r\n  relativePositionToTriangle2D(oldTriangle, newTriangle) {\r\n    if (this.equals(oldTriangle.a)) {\r\n      return newTriangle.a;\r\n    } else if (this.equals(oldTriangle.b)) {\r\n      return newTriangle.b;\r\n    } else if (this.equals(oldTriangle.c)) {\r\n      return newTriangle.c;\r\n    }\r\n    let barycentricCoordinates = oldTriangle.getBarycentricCoordinates(this);\r\n    let cartesianCoordiantes = newTriangle.getPointFromBarycentricCoordinates(barycentricCoordinates);\r\n    return cartesianCoordiantes;\r\n  }\r\n\r\n  /**\r\n   * Translates the point using a vector.\r\n   * @param  {Vector2D} vec - The vector to translate the point by.\r\n   * @return {Point2D} - Point resulting from the translation.\r\n   */\r\n  translateVec(vec) {\r\n    return new Point2D(this.x + vec.x, this.y + vec.y);\r\n  }\r\n\r\n  /**\r\n   * Creates and returns a Line2D object using this point as the start point and another point as the end point.\r\n   * @param  {Point2D} point - Point to be used as the end point.\r\n   * @return {Line2D} - Line2D object created.\r\n   */\r\n  lineTo(point) {\r\n    return new Line2D(this, point);\r\n  }\r\n\r\n  /**\r\n   * Finds the vector distance from this point to another point.\r\n   * @param  {Point2D} point - Point to find the vector distance to.\r\n   * @return {Vector2D} - Vector2D object representing the vector distance.\r\n   */\r\n  vectorTo(point) {\r\n    return new Vector2D(point.x - this.x, point.y - this.y);\r\n  }\r\n}\r\n\r\nexport { Point2D };\r\nexport default Point2D;\r\n"
  },
  {
    "__docId__": 647,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Point2D",
    "memberof": "src/js/util/point-2d.js",
    "longname": "src/js/util/point-2d.js~Point2D",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/util/point-2d.js",
    "importStyle": "Point2D",
    "description": "Class representing 2D points.",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Point2D"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 648,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/util/point-2d.js~Point2D",
    "longname": "src/js/util/point-2d.js~Point2D#constructor",
    "access": null,
    "description": "Constructs a Point2D object.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Point2D"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-coordinate of the point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-coordinate of the point."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 649,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "x",
    "memberof": "src/js/util/point-2d.js~Point2D",
    "longname": "src/js/util/point-2d.js~Point2D#x",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 650,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "y",
    "memberof": "src/js/util/point-2d.js~Point2D",
    "longname": "src/js/util/point-2d.js~Point2D#y",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 651,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "equals",
    "memberof": "src/js/util/point-2d.js~Point2D",
    "longname": "src/js/util/point-2d.js~Point2D#equals",
    "access": null,
    "description": "Checks if this point and another point are equal. Returns true if the x- and y-coordinates are equal.",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "Point to compare with."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the points are equivalent."
    },
    "generator": false
  },
  {
    "__docId__": 652,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "distanceTo",
    "memberof": "src/js/util/point-2d.js~Point2D",
    "longname": "src/js/util/point-2d.js~Point2D#distanceTo",
    "access": null,
    "description": "Finds the distance between this point and another point.",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "Point to find the distance to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Distance between the points."
    },
    "generator": false
  },
  {
    "__docId__": 653,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "relativePositionToTriangle2D",
    "memberof": "src/js/util/point-2d.js~Point2D",
    "longname": "src/js/util/point-2d.js~Point2D#relativePositionToTriangle2D",
    "access": null,
    "description": "Finds the coordinates this point should have relative to a triangle.",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "Triangle2D"
        ],
        "spread": false,
        "optional": false,
        "name": "oldTriangle",
        "description": "Triangle2D object containing the triangle's old position."
      },
      {
        "nullable": null,
        "types": [
          "Triangle2D"
        ],
        "spread": false,
        "optional": false,
        "name": "newTriangle",
        "description": "Triangle2D object containing the triangle's new position."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Point2D"
      ],
      "spread": false,
      "description": "Point representing the point's location relative the the triangle's new position."
    },
    "generator": false
  },
  {
    "__docId__": 654,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "translateVec",
    "memberof": "src/js/util/point-2d.js~Point2D",
    "longname": "src/js/util/point-2d.js~Point2D#translateVec",
    "access": null,
    "description": "Translates the point using a vector.",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "vec",
        "description": "The vector to translate the point by."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Point2D"
      ],
      "spread": false,
      "description": "Point resulting from the translation."
    },
    "generator": false
  },
  {
    "__docId__": 655,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "lineTo",
    "memberof": "src/js/util/point-2d.js~Point2D",
    "longname": "src/js/util/point-2d.js~Point2D#lineTo",
    "access": null,
    "description": "Creates and returns a Line2D object using this point as the start point and another point as the end point.",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "Point to be used as the end point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Line2D"
      ],
      "spread": false,
      "description": "Line2D object created."
    },
    "generator": false
  },
  {
    "__docId__": 656,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "vectorTo",
    "memberof": "src/js/util/point-2d.js~Point2D",
    "longname": "src/js/util/point-2d.js~Point2D#vectorTo",
    "access": null,
    "description": "Finds the vector distance from this point to another point.",
    "lineNumber": 98,
    "params": [
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "Point to find the vector distance to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D"
      ],
      "spread": false,
      "description": "Vector2D object representing the vector distance."
    },
    "generator": false
  },
  {
    "__docId__": 657,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/util/queue.js",
    "memberof": null,
    "longname": "src/js/util/queue.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Based on Queue.js by Stephen Morley - http://code.stephenmorley.org/\n */\n\n/**\n * Creates a new queue. A queue is a first-in-first-out (FIFO) data structure -\n * items are added to the end of the queue and removed from the front.\n * @class Queue\n */\nclass Queue {\n\n  /**\n   * Constructs a Queue instance.\n   * @constructs Queue\n   */\n  constructor() {\n    // initialise the queue and offset\n    this.queue = [];\n    this.offset = 0;\n  }\n\n  /**\n   * Getter for size, allows access as a property).\n   * @return {number} - Size of the queue.\n   */\n  get size() {\n    return this.queue.length - this.offset;\n  }\n\n  /**\n   * Clear the queue.\n   */\n  clear() {\n    this.queue = [];\n    this.offset = 0;\n  }\n\n  /**\n   * Enqueues the specified item.\n   * @param {*} item - the item to enqueue\n   */\n  enqueue(item) {\n    if (typeof item === 'undefined' || item === null) {\n      throw Error('Item must be defined and non-null');\n    }\n    this.queue.push(item);\n  }\n\n  /**\n   * Dequeues an item and returns it. If the queue is empty, the value null is returned.\n   * @return {?*} - The next item in the queue, or null if the queue is empty.\n   */\n  dequeue() {\n    // if the queue is empty, return immediately\n    if (this.queue.length === 0) {\n      return null;\n    }\n\n    // store the item at the front of the queue\n    let item = this.queue[this.offset];\n\n    // increment the offset and remove the free space if necessary\n    if (++this.offset * 2 >= this.queue.length) {\n      this.queue = this.queue.slice(this.offset);\n      this.offset = 0;\n    }\n\n    // return the dequeued item\n    return item;\n  }\n\n  /**\n   * Returns the item at the front of the queue (without dequeuing it). If the queue is empty then null is returned.\n   * @return {?*} - The next item in the queue, or null if the queue is empty.\n   */\n  peek() {\n    return this.queue.length > 0 ? this.queue[this.offset] : null;\n  }\n\n  /**\n   * Check if the queue contains the specified item.\n   * @param  {*}  item - Item to check.\n   * @return {boolean} - Whether or not the item is in the queue.\n   * @throws {Error} - Throws an error if checking null or undefined.\n   */\n  has(item) {\n    if (typeof item === 'undefined' || item === null) {\n      throw Error('Item must be defined and non-null');\n    }\n    for (let i = this.offset; i < this.queue.length; i++) {\n      if (this.queue[i] === item) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Helper function to loop through all items in the queue.\n   * @param  {function(item: *): boolean} callback - Callback function called for each item in the queue. If the return value is false, the remaining items are skipped.\n   */\n  forEach(callback) {\n    for (let i = this.offset; i < this.queue.length; i++) {\n      if (callback(this.queue[i]) === false) {\n        break;\n      }\n    }\n  }\n\n}\n\nexport { Queue };\nexport default Queue;\n"
  },
  {
    "__docId__": 658,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Queue",
    "memberof": "src/js/util/queue.js",
    "longname": "src/js/util/queue.js~Queue",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/util/queue.js",
    "importStyle": "Queue",
    "description": "Creates a new queue. A queue is a first-in-first-out (FIFO) data structure -\nitems are added to the end of the queue and removed from the front.",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Queue"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 659,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/util/queue.js~Queue",
    "longname": "src/js/util/queue.js~Queue#constructor",
    "access": null,
    "description": "Constructs a Queue instance.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Queue"
      }
    ],
    "params": [],
    "generator": false
  },
  {
    "__docId__": 660,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "queue",
    "memberof": "src/js/util/queue.js~Queue",
    "longname": "src/js/util/queue.js~Queue#queue",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 661,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "offset",
    "memberof": "src/js/util/queue.js~Queue",
    "longname": "src/js/util/queue.js~Queue#offset",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 662,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "size",
    "memberof": "src/js/util/queue.js~Queue",
    "longname": "src/js/util/queue.js~Queue#size",
    "access": null,
    "description": "Getter for size, allows access as a property).",
    "lineNumber": 26,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Size of the queue."
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 663,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clear",
    "memberof": "src/js/util/queue.js~Queue",
    "longname": "src/js/util/queue.js~Queue#clear",
    "access": null,
    "description": "Clear the queue.",
    "lineNumber": 33,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 664,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "queue",
    "memberof": "src/js/util/queue.js~Queue",
    "longname": "src/js/util/queue.js~Queue#queue",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 665,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "offset",
    "memberof": "src/js/util/queue.js~Queue",
    "longname": "src/js/util/queue.js~Queue#offset",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 666,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "enqueue",
    "memberof": "src/js/util/queue.js~Queue",
    "longname": "src/js/util/queue.js~Queue#enqueue",
    "access": null,
    "description": "Enqueues the specified item.",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": "the item to enqueue"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 667,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dequeue",
    "memberof": "src/js/util/queue.js~Queue",
    "longname": "src/js/util/queue.js~Queue#dequeue",
    "access": null,
    "description": "Dequeues an item and returns it. If the queue is empty, the value null is returned.",
    "lineNumber": 53,
    "params": [],
    "return": {
      "nullable": true,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The next item in the queue, or null if the queue is empty."
    },
    "generator": false
  },
  {
    "__docId__": 668,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "queue",
    "memberof": "src/js/util/queue.js~Queue",
    "longname": "src/js/util/queue.js~Queue#queue",
    "access": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 669,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "offset",
    "memberof": "src/js/util/queue.js~Queue",
    "longname": "src/js/util/queue.js~Queue#offset",
    "access": null,
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 670,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "peek",
    "memberof": "src/js/util/queue.js~Queue",
    "longname": "src/js/util/queue.js~Queue#peek",
    "access": null,
    "description": "Returns the item at the front of the queue (without dequeuing it). If the queue is empty then null is returned.",
    "lineNumber": 76,
    "params": [],
    "return": {
      "nullable": true,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The next item in the queue, or null if the queue is empty."
    },
    "generator": false
  },
  {
    "__docId__": 671,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "has",
    "memberof": "src/js/util/queue.js~Queue",
    "longname": "src/js/util/queue.js~Queue#has",
    "access": null,
    "description": "Check if the queue contains the specified item.",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": "Item to check."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the item is in the queue."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Throws an error if checking null or undefined."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 672,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "forEach",
    "memberof": "src/js/util/queue.js~Queue",
    "longname": "src/js/util/queue.js~Queue#forEach",
    "access": null,
    "description": "Helper function to loop through all items in the queue.",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(item: *): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function called for each item in the queue. If the return value is false, the remaining items are skipped."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 673,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/util/scroll-to-element.js",
    "memberof": null,
    "longname": "src/js/util/scroll-to-element.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\r\n * Function to scroll to an element.\r\n * Based on scrollToY from http://stackoverflow.com/a/16136789/1418962\r\n * @param  {Element} element - The elemnt to scroll to.\r\n * @param  {number} to - Number indicating offset from the top of the element.\r\n * @param  {number} speed - Speed to scroll.\r\n * @param  {string} easing - Name of easing function (default: 'easeOutSine').\r\n */\r\nfunction scrollToElement(element, to, speed, easing = 'easeOutSine') {\r\n  let start = element.scrollTop;\r\n  let diff = to - start;\r\n  let currentTime = 0;\r\n\r\n  // min time .1, max time .8 seconds\r\n  let time = Math.max(0.1, Math.min(Math.abs(diff) / speed, 0.8));\r\n\r\n  // easing equations from https://github.com/danro/easing-js/blob/master/easing.js\r\n  let easingEquations = {\r\n    easeOutSine: function (pos) {\r\n      return Math.sin(pos * (Math.PI / 2));\r\n    },\r\n    easeInOutSine: function (pos) {\r\n      return (-0.5 * (Math.cos(Math.PI * pos) - 1));\r\n    },\r\n    easeInOutQuint: function (oldPos) {\r\n      let pos = oldPos * 2;\r\n      if (pos < 1) {\r\n        return 0.5 * Math.pow(pos, 5);\r\n      }\r\n      return 0.5 * (Math.pow((pos - 2), 5) + 2);\r\n    }\r\n  };\r\n\r\n  // add animation loop\r\n  function tick() {\r\n    currentTime += 1 / 60;\r\n\r\n    let p = currentTime / time;\r\n    let t = easingEquations[easing](p);\r\n\r\n    if (p < 1) {\r\n      window.requestAnimationFrame(tick);\r\n      element.scrollTop = start + (diff * t);\r\n    } else {\r\n      element.scrollTop = to;\r\n    }\r\n  }\r\n\r\n  // call it once to get started\r\n  tick();\r\n}\r\n\r\nexport { scrollToElement };\r\nexport default scrollToElement;\r\n"
  },
  {
    "__docId__": 674,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "scrollToElement",
    "memberof": "src/js/util/scroll-to-element.js",
    "longname": "src/js/util/scroll-to-element.js~scrollToElement",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/util/scroll-to-element.js",
    "importStyle": "scrollToElement",
    "description": "Function to scroll to an element.\nBased on scrollToY from http://stackoverflow.com/a/16136789/1418962",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "The elemnt to scroll to."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "to",
        "description": "Number indicating offset from the top of the element."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "speed",
        "description": "Speed to scroll."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "easing",
        "description": "Name of easing function (default: 'easeOutSine')."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 675,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/util/stack.js",
    "memberof": null,
    "longname": "src/js/util/stack.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\r\n * Stack containers for simple FILO data structures.\r\n * @class Stack\r\n */\r\nclass Stack {\r\n\r\n  /**\r\n   * Constructs a Stack instance.\r\n   * @constructs Stack\r\n   */\r\n  constructor() {\r\n    this.stack = [];\r\n  }\r\n\r\n  /**\r\n   * Getter for size, allows access as a property\r\n   * @return {number} - Size of the stack.\r\n   */\r\n  get size() {\r\n    return this.stack.length;\r\n  }\r\n\r\n  /**\r\n   * Clear the stack.\r\n   */\r\n  clear() {\r\n    this.stack = [];\r\n  }\r\n\r\n  /**\r\n   * Add item to the top of the stack.\r\n   * @param  {*} item - The item to add.\r\n   * @throws {Error} - Throws error if attempting to add null or undefined.\r\n   */\r\n  push(item) {\r\n    if (typeof item === 'undefined' || item === null) {\r\n      throw Error('Item must be defined and non-null');\r\n    }\r\n    this.stack.push(item);\r\n  }\r\n\r\n  /**\r\n   * Get and remove the item at the top of the stack.\r\n   * @return {?*} - Item at the top of the stack, or null if the stack is empty.\r\n   */\r\n  pop() {\r\n    if (this.stack.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return this.stack.pop();\r\n  }\r\n\r\n  /**\r\n   * Get the item at the top of the stack.\r\n   * @return {?*} - Item at the top of the stack, or null if the stack is empty.\r\n   */\r\n  peek() {\r\n    return this.stack.length > 0 ? this.stack[this.stack.length - 1] : null;\r\n  }\r\n\r\n  /**\r\n   * Check if the stack contains the specified item.\r\n   * @param  {*}  item - Item to check.\r\n   * @return {boolean} - Whether or not the item is in the stack.\r\n   * @throws {Error} - Throws an error if checking null or undefined.\r\n   */\r\n  has(item) {\r\n    if (typeof item === 'undefined' || item === null) {\r\n      throw Error('Item must be defined and non-null');\r\n    }\r\n    for (let i = 0; i < this.stack.length; i++) {\r\n      if (this.stack[i] === item) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Helper function to loop through all items in the stack.\r\n   * @param  {function(item: *): boolean} callback - Callback function called for each item in the stack. If the return value is false, the remaining items are skipped.\r\n   */\r\n  forEach(callback) {\r\n    for (let i = this.stack.length - 1; i >= 0; i--) {\r\n      if (callback(this.stack[i]) === false) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { Stack };\r\nexport default Stack;\r\n"
  },
  {
    "__docId__": 676,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Stack",
    "memberof": "src/js/util/stack.js",
    "longname": "src/js/util/stack.js~Stack",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/util/stack.js",
    "importStyle": "Stack",
    "description": "Stack containers for simple FILO data structures.",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Stack"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 677,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/util/stack.js~Stack",
    "longname": "src/js/util/stack.js~Stack#constructor",
    "access": null,
    "description": "Constructs a Stack instance.",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Stack"
      }
    ],
    "params": [],
    "generator": false
  },
  {
    "__docId__": 678,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "stack",
    "memberof": "src/js/util/stack.js~Stack",
    "longname": "src/js/util/stack.js~Stack#stack",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 679,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "size",
    "memberof": "src/js/util/stack.js~Stack",
    "longname": "src/js/util/stack.js~Stack#size",
    "access": null,
    "description": "Getter for size, allows access as a property",
    "lineNumber": 19,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Size of the stack."
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 680,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clear",
    "memberof": "src/js/util/stack.js~Stack",
    "longname": "src/js/util/stack.js~Stack#clear",
    "access": null,
    "description": "Clear the stack.",
    "lineNumber": 26,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 681,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "stack",
    "memberof": "src/js/util/stack.js~Stack",
    "longname": "src/js/util/stack.js~Stack#stack",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 682,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "push",
    "memberof": "src/js/util/stack.js~Stack",
    "longname": "src/js/util/stack.js~Stack#push",
    "access": null,
    "description": "Add item to the top of the stack.",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": "The item to add."
      }
    ],
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Throws error if attempting to add null or undefined."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 683,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "pop",
    "memberof": "src/js/util/stack.js~Stack",
    "longname": "src/js/util/stack.js~Stack#pop",
    "access": null,
    "description": "Get and remove the item at the top of the stack.",
    "lineNumber": 46,
    "params": [],
    "return": {
      "nullable": true,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Item at the top of the stack, or null if the stack is empty."
    },
    "generator": false
  },
  {
    "__docId__": 684,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "peek",
    "memberof": "src/js/util/stack.js~Stack",
    "longname": "src/js/util/stack.js~Stack#peek",
    "access": null,
    "description": "Get the item at the top of the stack.",
    "lineNumber": 58,
    "params": [],
    "return": {
      "nullable": true,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Item at the top of the stack, or null if the stack is empty."
    },
    "generator": false
  },
  {
    "__docId__": 685,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "has",
    "memberof": "src/js/util/stack.js~Stack",
    "longname": "src/js/util/stack.js~Stack#has",
    "access": null,
    "description": "Check if the stack contains the specified item.",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": "Item to check."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the item is in the stack."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Throws an error if checking null or undefined."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 686,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "forEach",
    "memberof": "src/js/util/stack.js~Stack",
    "longname": "src/js/util/stack.js~Stack#forEach",
    "access": null,
    "description": "Helper function to loop through all items in the stack.",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(item: *): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function called for each item in the stack. If the return value is false, the remaining items are skipped."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 687,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/util/triangle-2d.js",
    "memberof": null,
    "longname": "src/js/util/triangle-2d.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Point2D from './point-2d';\r\n\r\n/**\r\n * Class representing a 2D triangle.\r\n * @class Triangle2D.\r\n */\r\nclass Triangle2D {\r\n\r\n  /**\r\n   * First vertex of the triangle.\r\n   * @type {Point2D}\r\n   */\r\n  a;\r\n\r\n  /**\r\n   * Second vertex of the triangle.\r\n   * @type {Point2D}\r\n   */\r\n  b;\r\n\r\n  /**\r\n   * Third vertex of the triangle.\r\n   * @type {Point2D}\r\n   */\r\n  c;\r\n\r\n  /**\r\n   * Constructs a Triangle2D object.\r\n   * @param  {Point2D} a - First vertex of the triangle.\r\n   * @param  {Point2D} b - Second vertex of the triangle.\r\n   * @param  {Point2D} c - Third vertex of the triangle.\r\n   * @constructs Triangle2D\r\n   */\r\n  constructor(a, b, c) {\r\n    this.a = a;\r\n    this.b = b;\r\n    this.c = c;\r\n  }\r\n  /**\r\n   * Getter for the (signed) area of the triangle.\r\n   *\r\n   *          1  | x1 y1 1 |\r\n   * area =  --- | x2 y2 1 |\r\n   *          2  | x3 y3 1 |\r\n   *\r\n   * Source: http://mathworld.wolfram.com/TriangleArea.html\r\n   * @return {number} - Signed area of the triangle.\r\n   */\r\n  get area() {\r\n    return 0.5 * (-1 * this.b.y * this.c.x + this.a.y * (-1 * this.b.x + this.c.x) + this.a.x * (this.b.y - this.c.y) + this.b.x * this.c.y);\r\n  }\r\n\r\n  /**\r\n   * Find the barycentric coordinates of a point relative to this triangle.\r\n   * Source: http://stackoverflow.com/a/14382692/1418962\r\n   * More info: https://en.wikipedia.org/wiki/Barycentric_coordinate_system#Conversion_between_barycentric_and_Cartesian_coordinates\r\n   * @param  {Point2D} point - The point to find the barycentric coordinates of.\r\n   * @return {Point2D} - Point object containing the barycentric coordinates.\r\n   */\r\n  getBarycentricCoordinates(point) {\r\n    let area = this.area;\r\n    let s = 1 / (2 * area) * (this.a.y * this.c.x - this.a.x * this.c.y + (this.c.y - this.a.y) * point.x + (this.a.x - this.c.x) * point.y);\r\n    let t = 1 / (2 * area) * (this.a.x * this.b.y - this.a.y * this.b.x + (this.a.y - this.b.y) * point.x + (this.b.x - this.a.x) * point.y);\r\n    return new Point2D(s, t);\r\n  }\r\n\r\n  /**\r\n   * Find the cartesian coordinates of a point given its barycentric coordinates.\r\n   * @param  {Point2D} point - The point to find the coordinates of.\r\n   * @return {Point2D} - Point object containing the cartesian coordinates.\r\n   */\r\n  getPointFromBarycentricCoordinates(point) {\r\n    let s = point.x;\r\n    let t = point.y;\r\n    let x = (1 - s - t) * this.a.x + s * this.b.x + t * this.c.x;\r\n    let y = (1 - s - t) * this.a.y + s * this.b.y + t * this.c.y;\r\n    return new Point2D(x, y);\r\n  }\r\n}\r\n\r\nexport { Triangle2D };\r\nexport default Triangle2D;\r\n"
  },
  {
    "__docId__": 688,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Triangle2D",
    "memberof": "src/js/util/triangle-2d.js",
    "longname": "src/js/util/triangle-2d.js~Triangle2D",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/util/triangle-2d.js",
    "importStyle": "Triangle2D",
    "description": "Class representing a 2D triangle.",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Triangle2D."
      }
    ],
    "interface": false
  },
  {
    "__docId__": 689,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/util/triangle-2d.js~Triangle2D",
    "longname": "src/js/util/triangle-2d.js~Triangle2D#constructor",
    "access": null,
    "description": "Constructs a Triangle2D object.",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Triangle2D"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "First vertex of the triangle."
      },
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "Second vertex of the triangle."
      },
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": "Third vertex of the triangle."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 690,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "a",
    "memberof": "src/js/util/triangle-2d.js~Triangle2D",
    "longname": "src/js/util/triangle-2d.js~Triangle2D#a",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 691,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "b",
    "memberof": "src/js/util/triangle-2d.js~Triangle2D",
    "longname": "src/js/util/triangle-2d.js~Triangle2D#b",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 692,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "c",
    "memberof": "src/js/util/triangle-2d.js~Triangle2D",
    "longname": "src/js/util/triangle-2d.js~Triangle2D#c",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 693,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "area",
    "memberof": "src/js/util/triangle-2d.js~Triangle2D",
    "longname": "src/js/util/triangle-2d.js~Triangle2D#area",
    "access": null,
    "description": "Getter for the (signed) area of the triangle.\n\n         1  | x1 y1 1 |\narea =  --- | x2 y2 1 |\n         2  | x3 y3 1 |\n\nSource: http://mathworld.wolfram.com/TriangleArea.html",
    "lineNumber": 49,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Signed area of the triangle."
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 694,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getBarycentricCoordinates",
    "memberof": "src/js/util/triangle-2d.js~Triangle2D",
    "longname": "src/js/util/triangle-2d.js~Triangle2D#getBarycentricCoordinates",
    "access": null,
    "description": "Find the barycentric coordinates of a point relative to this triangle.\nSource: http://stackoverflow.com/a/14382692/1418962\nMore info: https://en.wikipedia.org/wiki/Barycentric_coordinate_system#Conversion_between_barycentric_and_Cartesian_coordinates",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "The point to find the barycentric coordinates of."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Point2D"
      ],
      "spread": false,
      "description": "Point object containing the barycentric coordinates."
    },
    "generator": false
  },
  {
    "__docId__": 695,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getPointFromBarycentricCoordinates",
    "memberof": "src/js/util/triangle-2d.js~Triangle2D",
    "longname": "src/js/util/triangle-2d.js~Triangle2D#getPointFromBarycentricCoordinates",
    "access": null,
    "description": "Find the cartesian coordinates of a point given its barycentric coordinates.",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "Point2D"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "The point to find the coordinates of."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Point2D"
      ],
      "spread": false,
      "description": "Point object containing the cartesian coordinates."
    },
    "generator": false
  },
  {
    "__docId__": 696,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/js/util/vector-2d.js",
    "memberof": null,
    "longname": "src/js/util/vector-2d.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\r\n * Class for representing 2D vectors.\r\n * @class Vector2D\r\n */\r\nclass Vector2D {\r\n\r\n  static EPSILON = 1e-8;\r\n\r\n  /**\r\n   * x component of the vector.\r\n   * @type {number}\r\n   */\r\n  x;\r\n\r\n  /**\r\n   * y component of the vector.\r\n   * @type {number}\r\n   */\r\n  y;\r\n\r\n  /**\r\n   * Constructs a Vector2D object.\r\n   * @param  {number} x - x-component of the vector.\r\n   * @param  {number} y - y-component of the vector.\r\n   * @constructs Vector2D\r\n   */\r\n  constructor(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  /**\r\n   * Getter for vector length.\r\n   * @return {number} - The length of the vector.\r\n   */\r\n  get length() {\r\n    let len = Math.sqrt(this.x * this.x + this.y * this.y);\r\n    return Math.abs(len) < Vector2D.EPSILON ? 0 : len;\r\n  }\r\n\r\n  /**\r\n   * Checks if this vector and another vector are equal. Returns true if the x- and y-components are equal.\r\n   * @param  {Vector2D} vec - Vector to compare with.\r\n   * @return {boolean} - Whether or not the vectors are equivalent.\r\n   */\r\n  equals(vec) {\r\n    return Math.abs(this.x - vec.x) < Vector2D.EPSILON && Math.abs(this.y - vec.y) < Vector2D.EPSILON;\r\n  }\r\n\r\n  /**\r\n   * Finds the result of addition with another vector.\r\n   * @param {Vector2D} vec - The vector to add.\r\n   * @return {Vector2D} - The result of vector addition.\r\n   */\r\n  add(vec) {\r\n    return new Vector2D(this.x + vec.x, this.y + vec.y);\r\n  }\r\n\r\n  /**\r\n   * Finds the result of subtracting another vector.\r\n   * @param {Vector2D} vec - The vector to subtract.\r\n   * @return {Vector2D} - The result of vector subtraction.\r\n   */\r\n  sub(vec) {\r\n    return new Vector2D(this.x - vec.x, this.y - vec.y);\r\n  }\r\n\r\n  /**\r\n   * Finds the dot product between this vector and another vector.\r\n   * @param  {Vector2D} vec - Vector to find a dot product with.\r\n   * @return {number} - The value of the dot product.\r\n   */\r\n  dot(vec) {\r\n    return this.x * vec.x + this.y * vec.y;\r\n  }\r\n\r\n  /**\r\n   * Finds the \"cross product\" between this vector and another vector.\r\n   * @param  {Vector2D} vec - Vector to find the cross product with.\r\n   * @return {number} - The value of the cross product. Zero means the vectors are parallel.\r\n   */\r\n  cross(vec) {\r\n    return this.x * vec.y - this.y * vec.x;\r\n  }\r\n\r\n  /**\r\n   * Finds the vector resulting from multiplication by a scalar.\r\n   * @param  {number} n - The scalar to multiply by.\r\n   * @return {Vector2D} - Vector resulting from the scale.\r\n   */\r\n  scale(n) {\r\n    return new Vector2D(this.x * n, this.y * n);\r\n  }\r\n\r\n  /**\r\n   * Finds the vector resulting from a rotation in degrees.\r\n   * @param  {number} deg - Angle (in degrees) to rotate.\r\n   * @return {Vector2D} - Vector resulting from the rotation.\r\n   */\r\n  rotateDegrees(deg) {\r\n    return this.rotateRadians(deg * (Math.PI / 180));\r\n  }\r\n\r\n  /**\r\n   * Finds the vector resulting from a rotation in radians.\r\n   * @param  {number} rad - Angle (in radians) to rotate.\r\n   * @return {Vector2D} - Vector resulting from the rotation.\r\n   */\r\n  rotateRadians(rad) {\r\n    let cos = Math.cos(rad);\r\n    let sin = Math.sin(rad);\r\n    return new Vector2D(this.x * cos - this.y * sin, this.x * sin + this.y * cos);\r\n  }\r\n\r\n  /**\r\n   * Finds the angle between two vectors (in degrees).\r\n   * @param  {Vector2D} vec - Vector to find the angle to.\r\n   * @return {number} - Angle between the vectors in degrees.\r\n   */\r\n  degreesTo(vec) {\r\n    let angle = Math.atan2(vec.y, vec.x) - Math.atan2(this.y, this.x);\r\n    angle *= 180 / Math.PI;\r\n    angle = (angle + 360) % 360;\r\n    if (Math.round(angle) !== angle && Math.abs(Math.round(angle) - angle) < Vector2D.EPSILON) {\r\n      return Math.round(angle);\r\n    }\r\n    return angle;\r\n  }\r\n\r\n  /**\r\n   * Finds the vector projection of this vector onto another vector.\r\n   * @param  {Vector2D} vec - Vector to project onto.\r\n   * @return {Vector2D} - Vector resulting from the vector projection.\r\n   */\r\n  projectOnto(vec) {\r\n    return vec.scale(this.dot(vec) / vec.dot(vec));\r\n  }\r\n}\r\n\r\nexport { Vector2D };\r\nexport default Vector2D;\r\n"
  },
  {
    "__docId__": 697,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Vector2D",
    "memberof": "src/js/util/vector-2d.js",
    "longname": "src/js/util/vector-2d.js~Vector2D",
    "access": null,
    "export": true,
    "importPath": "canvas-graph-creator/src/js/util/vector-2d.js",
    "importStyle": "Vector2D",
    "description": "Class for representing 2D vectors.",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Vector2D"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 698,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/js/util/vector-2d.js~Vector2D",
    "longname": "src/js/util/vector-2d.js~Vector2D#constructor",
    "access": null,
    "description": "Constructs a Vector2D object.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Vector2D"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "x-component of the vector."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "y-component of the vector."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 699,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "x",
    "memberof": "src/js/util/vector-2d.js~Vector2D",
    "longname": "src/js/util/vector-2d.js~Vector2D#x",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 700,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "y",
    "memberof": "src/js/util/vector-2d.js~Vector2D",
    "longname": "src/js/util/vector-2d.js~Vector2D#y",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 701,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "length",
    "memberof": "src/js/util/vector-2d.js~Vector2D",
    "longname": "src/js/util/vector-2d.js~Vector2D#length",
    "access": null,
    "description": "Getter for vector length.",
    "lineNumber": 36,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The length of the vector."
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 702,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "equals",
    "memberof": "src/js/util/vector-2d.js~Vector2D",
    "longname": "src/js/util/vector-2d.js~Vector2D#equals",
    "access": null,
    "description": "Checks if this vector and another vector are equal. Returns true if the x- and y-components are equal.",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "vec",
        "description": "Vector to compare with."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not the vectors are equivalent."
    },
    "generator": false
  },
  {
    "__docId__": 703,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "add",
    "memberof": "src/js/util/vector-2d.js~Vector2D",
    "longname": "src/js/util/vector-2d.js~Vector2D#add",
    "access": null,
    "description": "Finds the result of addition with another vector.",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "vec",
        "description": "The vector to add."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D"
      ],
      "spread": false,
      "description": "The result of vector addition."
    },
    "generator": false
  },
  {
    "__docId__": 704,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "sub",
    "memberof": "src/js/util/vector-2d.js~Vector2D",
    "longname": "src/js/util/vector-2d.js~Vector2D#sub",
    "access": null,
    "description": "Finds the result of subtracting another vector.",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "vec",
        "description": "The vector to subtract."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D"
      ],
      "spread": false,
      "description": "The result of vector subtraction."
    },
    "generator": false
  },
  {
    "__docId__": 705,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dot",
    "memberof": "src/js/util/vector-2d.js~Vector2D",
    "longname": "src/js/util/vector-2d.js~Vector2D#dot",
    "access": null,
    "description": "Finds the dot product between this vector and another vector.",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "vec",
        "description": "Vector to find a dot product with."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The value of the dot product."
    },
    "generator": false
  },
  {
    "__docId__": 706,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "cross",
    "memberof": "src/js/util/vector-2d.js~Vector2D",
    "longname": "src/js/util/vector-2d.js~Vector2D#cross",
    "access": null,
    "description": "Finds the \"cross product\" between this vector and another vector.",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "vec",
        "description": "Vector to find the cross product with."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The value of the cross product. Zero means the vectors are parallel."
    },
    "generator": false
  },
  {
    "__docId__": 707,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "scale",
    "memberof": "src/js/util/vector-2d.js~Vector2D",
    "longname": "src/js/util/vector-2d.js~Vector2D#scale",
    "access": null,
    "description": "Finds the vector resulting from multiplication by a scalar.",
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "The scalar to multiply by."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D"
      ],
      "spread": false,
      "description": "Vector resulting from the scale."
    },
    "generator": false
  },
  {
    "__docId__": 708,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "rotateDegrees",
    "memberof": "src/js/util/vector-2d.js~Vector2D",
    "longname": "src/js/util/vector-2d.js~Vector2D#rotateDegrees",
    "access": null,
    "description": "Finds the vector resulting from a rotation in degrees.",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "deg",
        "description": "Angle (in degrees) to rotate."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D"
      ],
      "spread": false,
      "description": "Vector resulting from the rotation."
    },
    "generator": false
  },
  {
    "__docId__": 709,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "rotateRadians",
    "memberof": "src/js/util/vector-2d.js~Vector2D",
    "longname": "src/js/util/vector-2d.js~Vector2D#rotateRadians",
    "access": null,
    "description": "Finds the vector resulting from a rotation in radians.",
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rad",
        "description": "Angle (in radians) to rotate."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D"
      ],
      "spread": false,
      "description": "Vector resulting from the rotation."
    },
    "generator": false
  },
  {
    "__docId__": 710,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "degreesTo",
    "memberof": "src/js/util/vector-2d.js~Vector2D",
    "longname": "src/js/util/vector-2d.js~Vector2D#degreesTo",
    "access": null,
    "description": "Finds the angle between two vectors (in degrees).",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "vec",
        "description": "Vector to find the angle to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Angle between the vectors in degrees."
    },
    "generator": false
  },
  {
    "__docId__": 711,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "projectOnto",
    "memberof": "src/js/util/vector-2d.js~Vector2D",
    "longname": "src/js/util/vector-2d.js~Vector2D#projectOnto",
    "access": null,
    "description": "Finds the vector projection of this vector onto another vector.",
    "lineNumber": 135,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2D"
        ],
        "spread": false,
        "optional": false,
        "name": "vec",
        "description": "Vector to project onto."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector2D"
      ],
      "spread": false,
      "description": "Vector resulting from the vector projection."
    },
    "generator": false
  },
  {
    "__docId__": 713,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 714,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 715,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 716,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 717,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 718,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 719,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 720,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 721,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 722,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 723,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 724,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 725,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 726,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 727,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 728,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 729,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 730,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 731,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 732,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 733,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 734,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 735,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 736,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 737,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 738,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 739,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 740,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 741,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 742,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 743,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 744,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 745,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 746,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 747,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 748,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 749,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 750,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 751,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 752,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 753,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 754,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 755,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 756,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 757,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 758,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 759,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 761,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 762,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 763,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 764,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 765,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 766,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 767,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 768,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 769,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/algorithm/abstract-algorithm-test.js",
    "memberof": null,
    "longname": "test/algorithm/abstract-algorithm-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import chai from 'chai';\r\nchai.should();\r\n\r\nimport AbstractAlgorithm from '../../src/js/algorithm/abstract-algorithm';\r\nimport Graph from '../../src/js/data/graph';\r\n\r\n/** @test {AbstractAlgorithm} **/\r\ndescribe('AbstractAlgorithm', () => {\r\n  /** @test {AbstractAlgorithm#constructor} **/\r\n  describe('#constructor()', () => {\r\n    it('should be instance of AbstractAlgorithm', () => {\r\n      let algorithm = new AbstractAlgorithm();\r\n      (algorithm).should.be.instanceof(AbstractAlgorithm);\r\n    });\r\n\r\n    it('should store parameter in \"graph\" field', () => {\r\n      let graph = new Graph();\r\n      let algorithm = new AbstractAlgorithm(graph);\r\n      (algorithm.graph).should.be.equal(graph);\r\n    });\r\n  });\r\n\r\n  /** @test {AlgorithmResult#step} **/\r\n  describe('#step()', () => {\r\n    it('should return false', () => {\r\n      let algorithm = new AbstractAlgorithm();\r\n      (algorithm.step()).should.be.false;\r\n    });\r\n  });\r\n});\r\n"
  },
  {
    "__docId__": 770,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe0",
    "testId": 0,
    "memberof": "test/algorithm/abstract-algorithm-test.js",
    "testDepth": 0,
    "longname": "test/algorithm/abstract-algorithm-test.js~describe0",
    "access": null,
    "description": "AbstractAlgorithm",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AbstractAlgorithm} *"
      }
    ],
    "testTargets": [
      "AbstractAlgorithm"
    ]
  },
  {
    "__docId__": 771,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe1",
    "testId": 1,
    "memberof": "test/algorithm/abstract-algorithm-test.js~describe0",
    "testDepth": 1,
    "longname": "test/algorithm/abstract-algorithm-test.js~describe0.describe1",
    "access": null,
    "description": "#constructor()",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AbstractAlgorithm#constructor} *"
      }
    ],
    "testTargets": [
      "AbstractAlgorithm#constructor"
    ]
  },
  {
    "__docId__": 772,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it2",
    "testId": 2,
    "memberof": "test/algorithm/abstract-algorithm-test.js~describe0.describe1",
    "testDepth": 2,
    "longname": "test/algorithm/abstract-algorithm-test.js~describe0.describe1.it2",
    "access": null,
    "description": "should be instance of AbstractAlgorithm",
    "lineNumber": 11
  },
  {
    "__docId__": 773,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it3",
    "testId": 3,
    "memberof": "test/algorithm/abstract-algorithm-test.js~describe0.describe1",
    "testDepth": 2,
    "longname": "test/algorithm/abstract-algorithm-test.js~describe0.describe1.it3",
    "access": null,
    "description": "should store parameter in \"graph\" field",
    "lineNumber": 16
  },
  {
    "__docId__": 774,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe4",
    "testId": 4,
    "memberof": "test/algorithm/abstract-algorithm-test.js~describe0",
    "testDepth": 1,
    "longname": "test/algorithm/abstract-algorithm-test.js~describe0.describe4",
    "access": null,
    "description": "#step()",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AlgorithmResult#step} *"
      }
    ],
    "testTargets": [
      "AlgorithmResult#step"
    ]
  },
  {
    "__docId__": 775,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it5",
    "testId": 5,
    "memberof": "test/algorithm/abstract-algorithm-test.js~describe0.describe4",
    "testDepth": 2,
    "longname": "test/algorithm/abstract-algorithm-test.js~describe0.describe4.it5",
    "access": null,
    "description": "should return false",
    "lineNumber": 25
  },
  {
    "__docId__": 776,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/algorithm/algorithm-result-test.js",
    "memberof": null,
    "longname": "test/algorithm/algorithm-result-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import chai from 'chai';\r\nchai.should();\r\n\r\nimport AlgorithmResult from '../../src/js/algorithm/algorithm-result';\r\nimport Step from '../../src/js/algorithm/step';\r\n\r\n/** @test {AlgorithmResult} **/\r\ndescribe('AlgorithmResult', () => {\r\n  /** @test {AlgorithmResult#constructor} **/\r\n  describe('#constructor()', () => {\r\n    it('should be instance of AlgorithmResult', () => {\r\n      let algorithmResult = new AlgorithmResult();\r\n      algorithmResult.should.be.instanceof(AlgorithmResult);\r\n    });\r\n\r\n    it('should start with a step index of -1', () => {\r\n      let algorithmResult = new AlgorithmResult();\r\n      (algorithmResult.stepIndex).should.be.equal(-1);\r\n    });\r\n  });\r\n\r\n  /** @test {AlgorithmResult#stepForward} **/\r\n  describe('#stepForward()', () => {\r\n    it('should step forward in the timeline', () => {\r\n      let algorithmResult = new AlgorithmResult();\r\n      let step = new Step('');\r\n      algorithmResult.addStep(step);\r\n      algorithmResult.stepIndex = 0;\r\n      algorithmResult.stepForward();\r\n      (algorithmResult.stepIndex).should.be.equal(1);\r\n    });\r\n\r\n    it('should step forward from index before first step', () => {\r\n      let algorithmResult = new AlgorithmResult();\r\n      let step = new Step('');\r\n      algorithmResult.addStep(step);\r\n      algorithmResult.stepForward();\r\n      (algorithmResult.stepIndex).should.be.equal(0);\r\n    });\r\n\r\n    it('should not step past the final step', () => {\r\n      let algorithmResult = new AlgorithmResult();\r\n      let step = new Step('');\r\n      algorithmResult.addStep(step);\r\n      algorithmResult.stepIndex = 1;\r\n      algorithmResult.stepForward();\r\n      (algorithmResult.stepIndex).should.be.equal(1);\r\n    });\r\n  });\r\n\r\n  /** @test {AlgorithmResult#stepBackward} **/\r\n  describe('#stepBackward()', () => {\r\n    it('should step backward in the timeline', () => {\r\n      let algorithmResult = new AlgorithmResult();\r\n      let step = new Step('');\r\n      algorithmResult.addStep(step);\r\n      algorithmResult.stepIndex = 0;\r\n      algorithmResult.stepBackward();\r\n      (algorithmResult.stepIndex).should.be.equal(-1);\r\n    });\r\n\r\n    it('should step back from index past final step', () => {\r\n      let algorithmResult = new AlgorithmResult();\r\n      let step = new Step('');\r\n      algorithmResult.addStep(step);\r\n      algorithmResult.stepIndex = 1;\r\n      algorithmResult.stepBackward();\r\n      (algorithmResult.stepIndex).should.be.equal(0);\r\n    });\r\n\r\n    it('should not step past the initial step', () => {\r\n      let algorithmResult = new AlgorithmResult();\r\n      let step = new Step('');\r\n      algorithmResult.addStep(step);\r\n      algorithmResult.stepIndex = -1;\r\n      algorithmResult.stepBackward();\r\n      (algorithmResult.stepIndex).should.be.equal(-1);\r\n    });\r\n  });\r\n\r\n  /** @test {AlgorithmResult#addStep} **/\r\n  describe('#addStep(step)', () => {\r\n    it('should add the step to timeline', () => {\r\n      let algorithmResult = new AlgorithmResult();\r\n      let step = new Step('');\r\n      algorithmResult.addStep(step);\r\n      let timeline = algorithmResult.timeline;\r\n\r\n      (timeline[timeline.length - 1]).should.be.equal(step);\r\n    });\r\n  });\r\n});\r\n"
  },
  {
    "__docId__": 777,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe6",
    "testId": 6,
    "memberof": "test/algorithm/algorithm-result-test.js",
    "testDepth": 0,
    "longname": "test/algorithm/algorithm-result-test.js~describe6",
    "access": null,
    "description": "AlgorithmResult",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AlgorithmResult} *"
      }
    ],
    "testTargets": [
      "AlgorithmResult"
    ]
  },
  {
    "__docId__": 778,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe7",
    "testId": 7,
    "memberof": "test/algorithm/algorithm-result-test.js~describe6",
    "testDepth": 1,
    "longname": "test/algorithm/algorithm-result-test.js~describe6.describe7",
    "access": null,
    "description": "#constructor()",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AlgorithmResult#constructor} *"
      }
    ],
    "testTargets": [
      "AlgorithmResult#constructor"
    ]
  },
  {
    "__docId__": 779,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it8",
    "testId": 8,
    "memberof": "test/algorithm/algorithm-result-test.js~describe6.describe7",
    "testDepth": 2,
    "longname": "test/algorithm/algorithm-result-test.js~describe6.describe7.it8",
    "access": null,
    "description": "should be instance of AlgorithmResult",
    "lineNumber": 11
  },
  {
    "__docId__": 780,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it9",
    "testId": 9,
    "memberof": "test/algorithm/algorithm-result-test.js~describe6.describe7",
    "testDepth": 2,
    "longname": "test/algorithm/algorithm-result-test.js~describe6.describe7.it9",
    "access": null,
    "description": "should start with a step index of -1",
    "lineNumber": 16
  },
  {
    "__docId__": 781,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe10",
    "testId": 10,
    "memberof": "test/algorithm/algorithm-result-test.js~describe6",
    "testDepth": 1,
    "longname": "test/algorithm/algorithm-result-test.js~describe6.describe10",
    "access": null,
    "description": "#stepForward()",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AlgorithmResult#stepForward} *"
      }
    ],
    "testTargets": [
      "AlgorithmResult#stepForward"
    ]
  },
  {
    "__docId__": 782,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it11",
    "testId": 11,
    "memberof": "test/algorithm/algorithm-result-test.js~describe6.describe10",
    "testDepth": 2,
    "longname": "test/algorithm/algorithm-result-test.js~describe6.describe10.it11",
    "access": null,
    "description": "should step forward in the timeline",
    "lineNumber": 24
  },
  {
    "__docId__": 783,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it12",
    "testId": 12,
    "memberof": "test/algorithm/algorithm-result-test.js~describe6.describe10",
    "testDepth": 2,
    "longname": "test/algorithm/algorithm-result-test.js~describe6.describe10.it12",
    "access": null,
    "description": "should step forward from index before first step",
    "lineNumber": 33
  },
  {
    "__docId__": 784,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it13",
    "testId": 13,
    "memberof": "test/algorithm/algorithm-result-test.js~describe6.describe10",
    "testDepth": 2,
    "longname": "test/algorithm/algorithm-result-test.js~describe6.describe10.it13",
    "access": null,
    "description": "should not step past the final step",
    "lineNumber": 41
  },
  {
    "__docId__": 785,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe14",
    "testId": 14,
    "memberof": "test/algorithm/algorithm-result-test.js~describe6",
    "testDepth": 1,
    "longname": "test/algorithm/algorithm-result-test.js~describe6.describe14",
    "access": null,
    "description": "#stepBackward()",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AlgorithmResult#stepBackward} *"
      }
    ],
    "testTargets": [
      "AlgorithmResult#stepBackward"
    ]
  },
  {
    "__docId__": 786,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it15",
    "testId": 15,
    "memberof": "test/algorithm/algorithm-result-test.js~describe6.describe14",
    "testDepth": 2,
    "longname": "test/algorithm/algorithm-result-test.js~describe6.describe14.it15",
    "access": null,
    "description": "should step backward in the timeline",
    "lineNumber": 53
  },
  {
    "__docId__": 787,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it16",
    "testId": 16,
    "memberof": "test/algorithm/algorithm-result-test.js~describe6.describe14",
    "testDepth": 2,
    "longname": "test/algorithm/algorithm-result-test.js~describe6.describe14.it16",
    "access": null,
    "description": "should step back from index past final step",
    "lineNumber": 62
  },
  {
    "__docId__": 788,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it17",
    "testId": 17,
    "memberof": "test/algorithm/algorithm-result-test.js~describe6.describe14",
    "testDepth": 2,
    "longname": "test/algorithm/algorithm-result-test.js~describe6.describe14.it17",
    "access": null,
    "description": "should not step past the initial step",
    "lineNumber": 71
  },
  {
    "__docId__": 789,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe18",
    "testId": 18,
    "memberof": "test/algorithm/algorithm-result-test.js~describe6",
    "testDepth": 1,
    "longname": "test/algorithm/algorithm-result-test.js~describe6.describe18",
    "access": null,
    "description": "#addStep(step)",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AlgorithmResult#addStep} *"
      }
    ],
    "testTargets": [
      "AlgorithmResult#addStep"
    ]
  },
  {
    "__docId__": 790,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it19",
    "testId": 19,
    "memberof": "test/algorithm/algorithm-result-test.js~describe6.describe18",
    "testDepth": 2,
    "longname": "test/algorithm/algorithm-result-test.js~describe6.describe18.it19",
    "access": null,
    "description": "should add the step to timeline",
    "lineNumber": 83
  },
  {
    "__docId__": 791,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/algorithm/step-builder-test.js",
    "memberof": null,
    "longname": "test/algorithm/step-builder-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import chai from 'chai';\r\nlet should = chai.should();\r\n\r\nimport StepBuilder from '../../src/js/algorithm/step-builder';\r\nimport AlgorithmResult from '../../src/js/algorithm/algorithm-result';\r\nimport Step from '../../src/js/algorithm/step';\r\nimport Node from '../../src/js/data/node/circle-node';\r\nimport Edge from '../../src/js/data/edge/solid-edge';\r\n\r\n/** @test {StepBuilder} **/\r\ndescribe('StepBuilder', () => {\r\n  /** @test {StepBuilder#constructor} **/\r\n  describe('#constructor()', () => {\r\n    it('should be instance of StepBuilder', () => {\r\n      let stepBuilder = new StepBuilder();\r\n      stepBuilder.should.be.instanceof(StepBuilder);\r\n    });\r\n  });\r\n\r\n  /** @test {StepBuilder#newStep} **/\r\n  describe('#newStep', () => {\r\n    it('should create a new Step object in the \"step\" field', () => {\r\n      let stepBuilder = new StepBuilder();\r\n      stepBuilder.newStep();\r\n      (stepBuilder.step).should.be.instanceof(Step);\r\n      (stepBuilder.step.changes.size).should.be.equal(0);\r\n    });\r\n\r\n    it('should store parameter as step description', () => {\r\n      let stepBuilder = new StepBuilder();\r\n      let description = 'test';\r\n      stepBuilder.newStep(description);\r\n      (stepBuilder.step.description).should.be.equal(description);\r\n    });\r\n  });\r\n\r\n  /** @test {StepBuilder#addChange} **/\r\n  describe('#addChange', () => {\r\n    it('should throw error if no Step has been created yet', () => {\r\n      let stepBuilder = new StepBuilder();\r\n      (() => {\r\n        stepBuilder.addChange(null, {}, {}, {});\r\n      }).should.throw(Error);\r\n    });\r\n\r\n    it('should add change with nodeFields if given a Node', () => {\r\n      let stepBuilder = new StepBuilder([ 'x' ], [], null);\r\n      let node = new Node(0, 0);\r\n      stepBuilder.step = new Step();\r\n      stepBuilder.addChange(node, { x: 1 }, { x: 2 }, { x: 3 });\r\n      for (let change of stepBuilder.step.changes) {\r\n        (change.preStepValues.x).should.be.equal(1);\r\n        (change.duringStepValues.x).should.be.equal(2);\r\n        (change.postStepValues.x).should.be.equal(3);\r\n      }\r\n    });\r\n\r\n    it('should add change with edgeFields if given an Edge', () => {\r\n      let stepBuilder = new StepBuilder([], [ 'color' ], null);\r\n      let edge = new Edge(new Node(0, 0), new Node(100, 0));\r\n      stepBuilder.step = new Step();\r\n      stepBuilder.addChange(edge, { color: '#ff0000' }, { color: '#00ff00' }, { color: '#0000ff' });\r\n      for (let change of stepBuilder.step.changes) {\r\n        (change.preStepValues.color).should.be.equal('#ff0000');\r\n        (change.duringStepValues.color).should.be.equal('#00ff00');\r\n        (change.postStepValues.color).should.be.equal('#0000ff');\r\n      }\r\n    });\r\n\r\n    it('should throw error if object is not a Node or Edge', () => {\r\n      let stepBuilder = new StepBuilder([], [], null);\r\n      stepBuilder.step = new Step();\r\n      (() => {\r\n        stepBuilder.addChange(null, {}, {}, {});\r\n      }).should.throw(Error);\r\n    });\r\n  });\r\n\r\n  /** @test {StepBuilder#completeStep} **/\r\n  describe('#completeStep', () => {\r\n    it('should add the step to the algorithm results', () => {\r\n      let algorithmResult = new AlgorithmResult();\r\n      let stepBuilder = new StepBuilder([], [], algorithmResult);\r\n      let step = new Step('test');\r\n      stepBuilder.step = step;\r\n      stepBuilder.completeStep();\r\n      (algorithmResult.timeline[0]).should.be.equal(step);\r\n    });\r\n\r\n    it('should set the \"step\" field to null', () => {\r\n      let algorithmResult = new AlgorithmResult();\r\n      let stepBuilder = new StepBuilder([], [], algorithmResult);\r\n      stepBuilder.step = new Step('test');\r\n      stepBuilder.completeStep();\r\n      should.not.exist(stepBuilder.step);\r\n    });\r\n  });\r\n});\r\n"
  },
  {
    "__docId__": 792,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe20",
    "testId": 20,
    "memberof": "test/algorithm/step-builder-test.js",
    "testDepth": 0,
    "longname": "test/algorithm/step-builder-test.js~describe20",
    "access": null,
    "description": "StepBuilder",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{StepBuilder} *"
      }
    ],
    "testTargets": [
      "StepBuilder"
    ]
  },
  {
    "__docId__": 793,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe21",
    "testId": 21,
    "memberof": "test/algorithm/step-builder-test.js~describe20",
    "testDepth": 1,
    "longname": "test/algorithm/step-builder-test.js~describe20.describe21",
    "access": null,
    "description": "#constructor()",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{StepBuilder#constructor} *"
      }
    ],
    "testTargets": [
      "StepBuilder#constructor"
    ]
  },
  {
    "__docId__": 794,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it22",
    "testId": 22,
    "memberof": "test/algorithm/step-builder-test.js~describe20.describe21",
    "testDepth": 2,
    "longname": "test/algorithm/step-builder-test.js~describe20.describe21.it22",
    "access": null,
    "description": "should be instance of StepBuilder",
    "lineNumber": 14
  },
  {
    "__docId__": 795,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe23",
    "testId": 23,
    "memberof": "test/algorithm/step-builder-test.js~describe20",
    "testDepth": 1,
    "longname": "test/algorithm/step-builder-test.js~describe20.describe23",
    "access": null,
    "description": "#newStep",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{StepBuilder#newStep} *"
      }
    ],
    "testTargets": [
      "StepBuilder#newStep"
    ]
  },
  {
    "__docId__": 796,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it24",
    "testId": 24,
    "memberof": "test/algorithm/step-builder-test.js~describe20.describe23",
    "testDepth": 2,
    "longname": "test/algorithm/step-builder-test.js~describe20.describe23.it24",
    "access": null,
    "description": "should create a new Step object in the \"step\" field",
    "lineNumber": 22
  },
  {
    "__docId__": 797,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it25",
    "testId": 25,
    "memberof": "test/algorithm/step-builder-test.js~describe20.describe23",
    "testDepth": 2,
    "longname": "test/algorithm/step-builder-test.js~describe20.describe23.it25",
    "access": null,
    "description": "should store parameter as step description",
    "lineNumber": 29
  },
  {
    "__docId__": 798,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe26",
    "testId": 26,
    "memberof": "test/algorithm/step-builder-test.js~describe20",
    "testDepth": 1,
    "longname": "test/algorithm/step-builder-test.js~describe20.describe26",
    "access": null,
    "description": "#addChange",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{StepBuilder#addChange} *"
      }
    ],
    "testTargets": [
      "StepBuilder#addChange"
    ]
  },
  {
    "__docId__": 799,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it27",
    "testId": 27,
    "memberof": "test/algorithm/step-builder-test.js~describe20.describe26",
    "testDepth": 2,
    "longname": "test/algorithm/step-builder-test.js~describe20.describe26.it27",
    "access": null,
    "description": "should throw error if no Step has been created yet",
    "lineNumber": 39
  },
  {
    "__docId__": 800,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it28",
    "testId": 28,
    "memberof": "test/algorithm/step-builder-test.js~describe20.describe26",
    "testDepth": 2,
    "longname": "test/algorithm/step-builder-test.js~describe20.describe26.it28",
    "access": null,
    "description": "should add change with nodeFields if given a Node",
    "lineNumber": 46
  },
  {
    "__docId__": 801,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it29",
    "testId": 29,
    "memberof": "test/algorithm/step-builder-test.js~describe20.describe26",
    "testDepth": 2,
    "longname": "test/algorithm/step-builder-test.js~describe20.describe26.it29",
    "access": null,
    "description": "should add change with edgeFields if given an Edge",
    "lineNumber": 58
  },
  {
    "__docId__": 802,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it30",
    "testId": 30,
    "memberof": "test/algorithm/step-builder-test.js~describe20.describe26",
    "testDepth": 2,
    "longname": "test/algorithm/step-builder-test.js~describe20.describe26.it30",
    "access": null,
    "description": "should throw error if object is not a Node or Edge",
    "lineNumber": 70
  },
  {
    "__docId__": 803,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe31",
    "testId": 31,
    "memberof": "test/algorithm/step-builder-test.js~describe20",
    "testDepth": 1,
    "longname": "test/algorithm/step-builder-test.js~describe20.describe31",
    "access": null,
    "description": "#completeStep",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{StepBuilder#completeStep} *"
      }
    ],
    "testTargets": [
      "StepBuilder#completeStep"
    ]
  },
  {
    "__docId__": 804,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it32",
    "testId": 32,
    "memberof": "test/algorithm/step-builder-test.js~describe20.describe31",
    "testDepth": 2,
    "longname": "test/algorithm/step-builder-test.js~describe20.describe31.it32",
    "access": null,
    "description": "should add the step to the algorithm results",
    "lineNumber": 81
  },
  {
    "__docId__": 805,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it33",
    "testId": 33,
    "memberof": "test/algorithm/step-builder-test.js~describe20.describe31",
    "testDepth": 2,
    "longname": "test/algorithm/step-builder-test.js~describe20.describe31.it33",
    "access": null,
    "description": "should set the \"step\" field to null",
    "lineNumber": 90
  },
  {
    "__docId__": 806,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/algorithm/step-test.js",
    "memberof": null,
    "longname": "test/algorithm/step-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import chai from 'chai';\r\nchai.should();\r\n\r\nimport Step from '../../src/js/algorithm/step';\r\nimport Change from '../../src/js/algorithm/change';\r\nimport Node from '../../src/js/data/node/circle-node';\r\n\r\n/** @test {Step} **/\r\ndescribe('Step', () => {\r\n  /** @test {Step#constructor} **/\r\n  describe('#constructor()', () => {\r\n    it('should be instance of Step', () => {\r\n      let step = new Step();\r\n      (step).should.be.instanceof(Step);\r\n    });\r\n\r\n    it('should store the parameter in \"description\" field', () => {\r\n      let description = 'test';\r\n      let step = new Step(description);\r\n      (step.description).should.be.equal(description);\r\n    });\r\n\r\n    it('should have default description', () => {\r\n      let step = new Step();\r\n      (step.description).should.be.a('string');\r\n    });\r\n  });\r\n\r\n  /** @test {Step#addChange} **/\r\n  describe('#addChange()', () => {\r\n    it('should add change object to \"changes\" field', () => {\r\n      let change = new Change(null, []);\r\n      let step = new Step();\r\n      step.addChange(change);\r\n      (step.changes.has(change)).should.be.true;\r\n    });\r\n  });\r\n\r\n  /** @test {Step#applyPre} **/\r\n  describe('#applyPre', () => {\r\n    it('should apply the \"pre\" step values for all change objects', () => {\r\n      let node = new Node(0, 0);\r\n      let change = new Change(node, [ 'x' ], { x: 1 }, { x: 2 }, { x: 3 });\r\n      let step = new Step();\r\n      step.addChange(change);\r\n      step.applyPre();\r\n      (node.x).should.be.equal(1);\r\n    });\r\n  });\r\n\r\n  /** @test {Step#applyDuring} **/\r\n  describe('#applyDuring', () => {\r\n    it('should apply the \"during\" step values for all change objects', () => {\r\n      let node = new Node(0, 0);\r\n      let change = new Change(node, [ 'x' ], { x: 1 }, { x: 2 }, { x: 3 });\r\n      let step = new Step();\r\n      step.addChange(change);\r\n      step.applyDuring();\r\n      (node.x).should.be.equal(2);\r\n    });\r\n  });\r\n\r\n  /** @test {Step#applyPost} **/\r\n  describe('#applyPost', () => {\r\n    it('should apply the \"post\" step values for all change objects', () => {\r\n      let node = new Node(0, 0);\r\n      let change = new Change(node, [ 'x' ], { x: 1 }, { x: 2 }, { x: 3 });\r\n      let step = new Step();\r\n      step.addChange(change);\r\n      step.applyPost();\r\n      (node.x).should.be.equal(3);\r\n    });\r\n  });\r\n});\r\n"
  },
  {
    "__docId__": 807,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe34",
    "testId": 34,
    "memberof": "test/algorithm/step-test.js",
    "testDepth": 0,
    "longname": "test/algorithm/step-test.js~describe34",
    "access": null,
    "description": "Step",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Step} *"
      }
    ],
    "testTargets": [
      "Step"
    ]
  },
  {
    "__docId__": 808,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe35",
    "testId": 35,
    "memberof": "test/algorithm/step-test.js~describe34",
    "testDepth": 1,
    "longname": "test/algorithm/step-test.js~describe34.describe35",
    "access": null,
    "description": "#constructor()",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Step#constructor} *"
      }
    ],
    "testTargets": [
      "Step#constructor"
    ]
  },
  {
    "__docId__": 809,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it36",
    "testId": 36,
    "memberof": "test/algorithm/step-test.js~describe34.describe35",
    "testDepth": 2,
    "longname": "test/algorithm/step-test.js~describe34.describe35.it36",
    "access": null,
    "description": "should be instance of Step",
    "lineNumber": 12
  },
  {
    "__docId__": 810,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it37",
    "testId": 37,
    "memberof": "test/algorithm/step-test.js~describe34.describe35",
    "testDepth": 2,
    "longname": "test/algorithm/step-test.js~describe34.describe35.it37",
    "access": null,
    "description": "should store the parameter in \"description\" field",
    "lineNumber": 17
  },
  {
    "__docId__": 811,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it38",
    "testId": 38,
    "memberof": "test/algorithm/step-test.js~describe34.describe35",
    "testDepth": 2,
    "longname": "test/algorithm/step-test.js~describe34.describe35.it38",
    "access": null,
    "description": "should have default description",
    "lineNumber": 23
  },
  {
    "__docId__": 812,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe39",
    "testId": 39,
    "memberof": "test/algorithm/step-test.js~describe34",
    "testDepth": 1,
    "longname": "test/algorithm/step-test.js~describe34.describe39",
    "access": null,
    "description": "#addChange()",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Step#addChange} *"
      }
    ],
    "testTargets": [
      "Step#addChange"
    ]
  },
  {
    "__docId__": 813,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it40",
    "testId": 40,
    "memberof": "test/algorithm/step-test.js~describe34.describe39",
    "testDepth": 2,
    "longname": "test/algorithm/step-test.js~describe34.describe39.it40",
    "access": null,
    "description": "should add change object to \"changes\" field",
    "lineNumber": 31
  },
  {
    "__docId__": 814,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe41",
    "testId": 41,
    "memberof": "test/algorithm/step-test.js~describe34",
    "testDepth": 1,
    "longname": "test/algorithm/step-test.js~describe34.describe41",
    "access": null,
    "description": "#applyPre",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Step#applyPre} *"
      }
    ],
    "testTargets": [
      "Step#applyPre"
    ]
  },
  {
    "__docId__": 815,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it42",
    "testId": 42,
    "memberof": "test/algorithm/step-test.js~describe34.describe41",
    "testDepth": 2,
    "longname": "test/algorithm/step-test.js~describe34.describe41.it42",
    "access": null,
    "description": "should apply the \"pre\" step values for all change objects",
    "lineNumber": 41
  },
  {
    "__docId__": 816,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe43",
    "testId": 43,
    "memberof": "test/algorithm/step-test.js~describe34",
    "testDepth": 1,
    "longname": "test/algorithm/step-test.js~describe34.describe43",
    "access": null,
    "description": "#applyDuring",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Step#applyDuring} *"
      }
    ],
    "testTargets": [
      "Step#applyDuring"
    ]
  },
  {
    "__docId__": 817,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it44",
    "testId": 44,
    "memberof": "test/algorithm/step-test.js~describe34.describe43",
    "testDepth": 2,
    "longname": "test/algorithm/step-test.js~describe34.describe43.it44",
    "access": null,
    "description": "should apply the \"during\" step values for all change objects",
    "lineNumber": 53
  },
  {
    "__docId__": 818,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe45",
    "testId": 45,
    "memberof": "test/algorithm/step-test.js~describe34",
    "testDepth": 1,
    "longname": "test/algorithm/step-test.js~describe34.describe45",
    "access": null,
    "description": "#applyPost",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Step#applyPost} *"
      }
    ],
    "testTargets": [
      "Step#applyPost"
    ]
  },
  {
    "__docId__": 819,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it46",
    "testId": 46,
    "memberof": "test/algorithm/step-test.js~describe34.describe45",
    "testDepth": 2,
    "longname": "test/algorithm/step-test.js~describe34.describe45.it46",
    "access": null,
    "description": "should apply the \"post\" step values for all change objects",
    "lineNumber": 65
  },
  {
    "__docId__": 820,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/algorithm/traversal-algorithm-test.js",
    "memberof": null,
    "longname": "test/algorithm/traversal-algorithm-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/* eslint-disable no-unused-expressions, max-nested-callbacks */\r\n\r\nimport chai from 'chai';\r\nchai.should();\r\n\r\nimport Graph from '../../src/js/data/graph';\r\nimport Node from '../../src/js/data/node/circle-node';\r\nimport Edge from '../../src/js/data/edge/solid-edge';\r\nimport TraversalAlgorithm from '../../src/js/algorithm/traversal-algorithm';\r\n\r\ndescribe('TraversalAlgorithm', () => {\r\n  describe('#constructor()', () => {\r\n    it('should create instance of TraversalAlgorithm', () => {\r\n      let graph = new Graph();\r\n      let algorithm = new TraversalAlgorithm(graph);\r\n      algorithm.should.be.instanceof(TraversalAlgorithm);\r\n    });\r\n  });\r\n\r\n  describe('#inputs', () => {\r\n    it('should contain field named \"source\"', () => {\r\n      let graph = new Graph();\r\n      let algorithm = new TraversalAlgorithm(graph);\r\n      (algorithm.inputs).should.have.property('source');\r\n    });\r\n\r\n    it('should require \"source\" to be a Node', () => {\r\n      let graph = new Graph();\r\n      let node1 = new Node(0, 0);\r\n      let node2 = new Node(100, 100);\r\n      let edge = new Edge(node1, node2);\r\n      let algorithm = new TraversalAlgorithm(graph);\r\n\r\n      let inputField = algorithm.inputTypes.filter((field) => field.name === 'source')[0];\r\n\r\n      (inputField.test(node1)).should.be.true;\r\n      (inputField.test(edge)).should.be.false;\r\n      (inputField.test({})).should.be.false;\r\n    });\r\n  });\r\n\r\n  describe('#visitNode()', () => {\r\n    it('should mark node as visited in graphState', () => {\r\n      let graph = new Graph();\r\n      let node1 = new Node(0, 0);\r\n      graph.addNode(node1);\r\n      let algorithm = new TraversalAlgorithm(graph);\r\n\r\n      algorithm.visitNode(node1);\r\n      (algorithm.graphState.get(node1)).should.be.true;\r\n    });\r\n\r\n    it('should add adjacent edge to queue', () => {\r\n      let graph = new Graph();\r\n      let node1 = new Node(0, 0);\r\n      let node2 = new Node(100, 100);\r\n      graph.addNode(node1);\r\n      graph.addNode(node2);\r\n      let edge = new Edge(node1, node2);\r\n      graph.addEdge(edge);\r\n      let algorithm = new TraversalAlgorithm(graph);\r\n\r\n      algorithm.visitNode(node1);\r\n      (algorithm.next.has(edge)).should.be.true;\r\n    });\r\n\r\n    it('should add self-loop edges to queue', () => {\r\n      let graph = new Graph();\r\n      let node1 = new Node(0, 0);\r\n      graph.addNode(node1);\r\n      let edge2 = new Edge(node1, node1);\r\n      graph.addEdge(edge2);\r\n      let algorithm = new TraversalAlgorithm(graph);\r\n\r\n      algorithm.visitNode(node1);\r\n      (algorithm.next.has(edge2)).should.be.true;\r\n    });\r\n\r\n    it('should not add visited edges to queue', () => {\r\n      let graph = new Graph();\r\n      let node1 = new Node(0, 0);\r\n      let node2 = new Node(100, 100);\r\n      graph.addNode(node1);\r\n      graph.addNode(node2);\r\n      let edge = new Edge(node1, node2);\r\n      graph.addEdge(edge);\r\n      let algorithm = new TraversalAlgorithm(graph);\r\n\r\n      algorithm.graphState.set(edge, true);\r\n      algorithm.visitNode(node1);\r\n      (algorithm.next.has(edge)).should.be.false;\r\n    });\r\n  });\r\n\r\n  describe('#visitEdge()', () => {\r\n    let graph;\r\n    let node1;\r\n    let node2;\r\n    let edge;\r\n    let algorithm;\r\n\r\n    beforeEach(() => {\r\n      graph = new Graph();\r\n      node1 = new Node(0, 0);\r\n      node2 = new Node(100, 100);\r\n      graph.addNode(node1);\r\n      graph.addNode(node2);\r\n      edge = new Edge(node1, node2);\r\n      graph.addEdge(edge);\r\n      algorithm = new TraversalAlgorithm(graph);\r\n    });\r\n\r\n    it('should mark edge as visited in graphState', () => {\r\n      algorithm.visitEdge(edge);\r\n      (algorithm.graphState.get(edge)).should.be.true;\r\n    });\r\n\r\n    it('should add startNode to queue if unvisited and edge is not directed', () => {\r\n      algorithm.graphState.set(node2, true);\r\n      algorithm.visitEdge(edge);\r\n      (algorithm.next.has(node1)).should.be.true;\r\n    });\r\n\r\n    it('should add only destNode to queue if unvisited and edge is directed', () => {\r\n      edge.isDirected = true;\r\n      algorithm.visitEdge(edge);\r\n      (algorithm.next.has(node1)).should.be.false;\r\n      (algorithm.next.has(node2)).should.be.true;\r\n    });\r\n\r\n    it('should not add visited nodes to queue', () => {\r\n      algorithm.graphState.set(node1, true);\r\n      algorithm.graphState.set(node2, true);\r\n      algorithm.visitEdge(edge);\r\n      (algorithm.next.has(node1)).should.be.false;\r\n      (algorithm.next.has(node2)).should.be.false;\r\n    });\r\n\r\n    it('should handle self-loop edges', () => {\r\n      let edge2 = new Edge(node1, node1);\r\n      algorithm.visitEdge(edge2);\r\n      (algorithm.graphState.get(edge2)).should.be.true;\r\n    });\r\n  });\r\n\r\n  describe('#hasVisited()', () => {\r\n    it('should return false if node has not been visited', () => {\r\n      let graph = new Graph();\r\n      let node1 = new Node(0, 0);\r\n      graph.addNode(node1);\r\n      let algorithm = new TraversalAlgorithm(graph);\r\n\r\n      (algorithm.hasVisited(node1)).should.be.false;\r\n    });\r\n\r\n    it('should return false if edge has not been visited', () => {\r\n      let graph = new Graph();\r\n      let node1 = new Node(0, 0);\r\n      let node2 = new Node(100, 100);\r\n      graph.addNode(node1);\r\n      graph.addNode(node2);\r\n      let edge = new Edge(node1, node2);\r\n      graph.addEdge(edge);\r\n      let algorithm = new TraversalAlgorithm(graph);\r\n\r\n      (algorithm.hasVisited(edge)).should.be.false;\r\n    });\r\n\r\n    it('should return true for node after calling visitNode on that node', () => {\r\n      let graph = new Graph();\r\n      let node1 = new Node(0, 0);\r\n      graph.addNode(node1);\r\n      let algorithm = new TraversalAlgorithm(graph);\r\n\r\n      algorithm.visitNode(node1);\r\n      (algorithm.hasVisited(node1)).should.be.true;\r\n    });\r\n\r\n    it('should return true for edge after calling visitEdge on that edge', () => {\r\n      let graph = new Graph();\r\n      let node1 = new Node(0, 0);\r\n      let node2 = new Node(100, 100);\r\n      graph.addNode(node1);\r\n      graph.addNode(node2);\r\n      let edge = new Edge(node1, node2);\r\n      graph.addEdge(edge);\r\n      let algorithm = new TraversalAlgorithm(graph);\r\n\r\n      algorithm.visitEdge(edge);\r\n      (algorithm.hasVisited(edge)).should.be.true;\r\n    });\r\n  });\r\n\r\n  describe('#step()', () => {\r\n    it('should throw error if next item is not Node or Edge', () => {\r\n      let graph = new Graph();\r\n      let node1 = new Node(0, 0);\r\n      graph.addNode(node1);\r\n      let algorithm = new TraversalAlgorithm(graph);\r\n\r\n      (function () {\r\n        algorithm.step();\r\n      }).should.throw(Error);\r\n    });\r\n\r\n    it('should start from #source field object', () => {\r\n      let graph = new Graph();\r\n      let node1 = new Node(0, 0);\r\n      graph.addNode(node1);\r\n      let algorithm = new TraversalAlgorithm(graph);\r\n\r\n      algorithm.source = node1;\r\n      algorithm.step();\r\n      (algorithm.isComplete).should.be.false;\r\n    });\r\n\r\n    it('should not mark algorithm as complete if it hasn\\'t started yet', () => {\r\n      let graph = new Graph();\r\n      let node1 = new Node(0, 0);\r\n      graph.addNode(node1);\r\n      let algorithm = new TraversalAlgorithm(graph);\r\n\r\n      algorithm.source = node1;\r\n      algorithm.step();\r\n      (algorithm.isComplete).should.be.false;\r\n    });\r\n\r\n    it('should mark algorithm as complete if queue is empty', () => {\r\n      let graph = new Graph();\r\n      let node1 = new Node(0, 0);\r\n      graph.addNode(node1);\r\n      let algorithm = new TraversalAlgorithm(graph);\r\n\r\n      algorithm.source = node1;\r\n      algorithm.step();\r\n      algorithm.step();\r\n      (algorithm.isComplete).should.be.true;\r\n    });\r\n\r\n    it('should return false if complete', () => {\r\n      let graph = new Graph();\r\n      let node1 = new Node(0, 0);\r\n      graph.addNode(node1);\r\n      let algorithm = new TraversalAlgorithm(graph);\r\n\r\n      algorithm.source = node1;\r\n      algorithm.step();\r\n      (algorithm.step()).should.be.false;\r\n    });\r\n\r\n    it('should return true if not complete', () => {\r\n      let graph = new Graph();\r\n      let node1 = new Node(0, 0);\r\n      graph.addNode(node1);\r\n      let algorithm = new TraversalAlgorithm(graph);\r\n\r\n      algorithm.source = node1;\r\n      (algorithm.step()).should.be.true;\r\n    });\r\n\r\n    it('should call visitNode if next item is a node', () => {\r\n      let graph = new Graph();\r\n      let node1 = new Node(0, 0);\r\n      graph.addNode(node1);\r\n      let algorithm = new TraversalAlgorithm(graph);\r\n\r\n      algorithm.source = node1;\r\n      algorithm.step();\r\n      (algorithm.hasVisited(node1)).should.be.true;\r\n    });\r\n\r\n    it('should call visitEdge if next item is an edge', () => {\r\n      let graph = new Graph();\r\n      let node1 = new Node(0, 0);\r\n      let node2 = new Node(100, 100);\r\n      graph.addNode(node1);\r\n      graph.addNode(node2);\r\n      let edge = new Edge(node1, node2);\r\n      graph.addEdge(edge);\r\n      let algorithm = new TraversalAlgorithm(graph);\r\n\r\n      algorithm.source = node1;\r\n      algorithm.step();\r\n      algorithm.step();\r\n      (algorithm.hasVisited(edge)).should.be.true;\r\n    });\r\n  });\r\n});\r\n"
  },
  {
    "__docId__": 821,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe47",
    "testId": 47,
    "memberof": "test/algorithm/traversal-algorithm-test.js",
    "testDepth": 0,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47",
    "access": null,
    "description": "TraversalAlgorithm",
    "lineNumber": 11
  },
  {
    "__docId__": 822,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe48",
    "testId": 48,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47",
    "testDepth": 1,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe48",
    "access": null,
    "description": "#constructor()",
    "lineNumber": 12
  },
  {
    "__docId__": 823,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it49",
    "testId": 49,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe48",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe48.it49",
    "access": null,
    "description": "should create instance of TraversalAlgorithm",
    "lineNumber": 13
  },
  {
    "__docId__": 824,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe50",
    "testId": 50,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47",
    "testDepth": 1,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe50",
    "access": null,
    "description": "#inputs",
    "lineNumber": 20
  },
  {
    "__docId__": 825,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it51",
    "testId": 51,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe50",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe50.it51",
    "access": null,
    "description": "should contain field named \"source\"",
    "lineNumber": 21
  },
  {
    "__docId__": 826,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it52",
    "testId": 52,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe50",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe50.it52",
    "access": null,
    "description": "should require \"source\" to be a Node",
    "lineNumber": 27
  },
  {
    "__docId__": 827,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe53",
    "testId": 53,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47",
    "testDepth": 1,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe53",
    "access": null,
    "description": "#visitNode()",
    "lineNumber": 42
  },
  {
    "__docId__": 828,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it54",
    "testId": 54,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe53",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe53.it54",
    "access": null,
    "description": "should mark node as visited in graphState",
    "lineNumber": 43
  },
  {
    "__docId__": 829,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it55",
    "testId": 55,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe53",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe53.it55",
    "access": null,
    "description": "should add adjacent edge to queue",
    "lineNumber": 53
  },
  {
    "__docId__": 830,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it56",
    "testId": 56,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe53",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe53.it56",
    "access": null,
    "description": "should add self-loop edges to queue",
    "lineNumber": 67
  },
  {
    "__docId__": 831,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it57",
    "testId": 57,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe53",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe53.it57",
    "access": null,
    "description": "should not add visited edges to queue",
    "lineNumber": 79
  },
  {
    "__docId__": 832,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe58",
    "testId": 58,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47",
    "testDepth": 1,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe58",
    "access": null,
    "description": "#visitEdge()",
    "lineNumber": 95
  },
  {
    "__docId__": 833,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it59",
    "testId": 59,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe58",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe58.it59",
    "access": null,
    "description": "should mark edge as visited in graphState",
    "lineNumber": 113
  },
  {
    "__docId__": 834,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it60",
    "testId": 60,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe58",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe58.it60",
    "access": null,
    "description": "should add startNode to queue if unvisited and edge is not directed",
    "lineNumber": 118
  },
  {
    "__docId__": 835,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it61",
    "testId": 61,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe58",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe58.it61",
    "access": null,
    "description": "should add only destNode to queue if unvisited and edge is directed",
    "lineNumber": 124
  },
  {
    "__docId__": 836,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it62",
    "testId": 62,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe58",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe58.it62",
    "access": null,
    "description": "should not add visited nodes to queue",
    "lineNumber": 131
  },
  {
    "__docId__": 837,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it63",
    "testId": 63,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe58",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe58.it63",
    "access": null,
    "description": "should handle self-loop edges",
    "lineNumber": 139
  },
  {
    "__docId__": 838,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe64",
    "testId": 64,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47",
    "testDepth": 1,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe64",
    "access": null,
    "description": "#hasVisited()",
    "lineNumber": 146
  },
  {
    "__docId__": 839,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it65",
    "testId": 65,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe64",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe64.it65",
    "access": null,
    "description": "should return false if node has not been visited",
    "lineNumber": 147
  },
  {
    "__docId__": 840,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it66",
    "testId": 66,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe64",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe64.it66",
    "access": null,
    "description": "should return false if edge has not been visited",
    "lineNumber": 156
  },
  {
    "__docId__": 841,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it67",
    "testId": 67,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe64",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe64.it67",
    "access": null,
    "description": "should return true for node after calling visitNode on that node",
    "lineNumber": 169
  },
  {
    "__docId__": 842,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it68",
    "testId": 68,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe64",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe64.it68",
    "access": null,
    "description": "should return true for edge after calling visitEdge on that edge",
    "lineNumber": 179
  },
  {
    "__docId__": 843,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe69",
    "testId": 69,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47",
    "testDepth": 1,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe69",
    "access": null,
    "description": "#step()",
    "lineNumber": 194
  },
  {
    "__docId__": 844,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it70",
    "testId": 70,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe69",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe69.it70",
    "access": null,
    "description": "should throw error if next item is not Node or Edge",
    "lineNumber": 195
  },
  {
    "__docId__": 845,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it71",
    "testId": 71,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe69",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe69.it71",
    "access": null,
    "description": "should start from #source field object",
    "lineNumber": 206
  },
  {
    "__docId__": 846,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it72",
    "testId": 72,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe69",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe69.it72",
    "access": null,
    "description": "should not mark algorithm as complete if it hasn't started yet",
    "lineNumber": 217
  },
  {
    "__docId__": 847,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it73",
    "testId": 73,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe69",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe69.it73",
    "access": null,
    "description": "should mark algorithm as complete if queue is empty",
    "lineNumber": 228
  },
  {
    "__docId__": 848,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it74",
    "testId": 74,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe69",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe69.it74",
    "access": null,
    "description": "should return false if complete",
    "lineNumber": 240
  },
  {
    "__docId__": 849,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it75",
    "testId": 75,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe69",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe69.it75",
    "access": null,
    "description": "should return true if not complete",
    "lineNumber": 251
  },
  {
    "__docId__": 850,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it76",
    "testId": 76,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe69",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe69.it76",
    "access": null,
    "description": "should call visitNode if next item is a node",
    "lineNumber": 261
  },
  {
    "__docId__": 851,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it77",
    "testId": 77,
    "memberof": "test/algorithm/traversal-algorithm-test.js~describe47.describe69",
    "testDepth": 2,
    "longname": "test/algorithm/traversal-algorithm-test.js~describe47.describe69.it77",
    "access": null,
    "description": "should call visitEdge if next item is an edge",
    "lineNumber": 272
  },
  {
    "__docId__": 852,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/edge-test.js",
    "memberof": null,
    "longname": "test/edge-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import chai from 'chai';\nchai.should();\n\nimport Node from '../src/js/data/node/circle-node';\nimport SolidEdge from '../src/js/data/edge/solid-edge';\n\ndescribe('SolidEdge', () => {\n  describe('#constructor', () => {\n    it('should create instance of SolidEdge', () => {\n      new SolidEdge(new Node(100, 0), new Node(0, 0)).should.be.instanceof(SolidEdge);\n    });\n  });\n});\n"
  },
  {
    "__docId__": 853,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe78",
    "testId": 78,
    "memberof": "test/edge-test.js",
    "testDepth": 0,
    "longname": "test/edge-test.js~describe78",
    "access": null,
    "description": "SolidEdge",
    "lineNumber": 7
  },
  {
    "__docId__": 854,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe79",
    "testId": 79,
    "memberof": "test/edge-test.js~describe78",
    "testDepth": 1,
    "longname": "test/edge-test.js~describe78.describe79",
    "access": null,
    "description": "#constructor",
    "lineNumber": 8
  },
  {
    "__docId__": 855,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it80",
    "testId": 80,
    "memberof": "test/edge-test.js~describe78.describe79",
    "testDepth": 2,
    "longname": "test/edge-test.js~describe78.describe79.it80",
    "access": null,
    "description": "should create instance of SolidEdge",
    "lineNumber": 9
  },
  {
    "__docId__": 856,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/graph-test.js",
    "memberof": null,
    "longname": "test/graph-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import chai from 'chai';\nchai.should();\n\nimport Graph from '../src/js/data/graph';\nimport Node from '../src/js/data/node/circle-node';\nimport Edge from '../src/js/data/edge/edge';\n\ndescribe('Graph', () => {\n  describe('#constructor(x, y)', () => {\n    it('should accept iterable arguments', () => {\n      let node1 = new Node(0, 0);\n      let node2 = new Node(1, 0);\n      let edge1 = new Edge(node1, node2);\n\n      let nodes = new Set();\n      nodes.add(node1);\n      nodes.add(node2);\n\n      let edges = new Set();\n      edges.add(edge1);\n\n      let graph = new Graph(nodes, edges);\n      graph.nodes.size.should.equal(2);\n      graph.edges.size.should.equal(1);\n    });\n\n    it('should work with no arguments', () => {\n      let graph = new Graph();\n      graph.nodes.size.should.equal(0);\n      graph.edges.size.should.equal(0);\n    });\n  }); // #constructor(x, y)\n\n  describe('#addNode(node)', () => {\n    it('should add to nodes', () => {\n      let graph = new Graph();\n      let node = new Node(0, 0);\n      graph.nodes.size.should.equal(0);\n      graph.addNode(node);\n      graph.nodes.size.should.equal(1);\n    });\n\n    it('should not add duplicate node', () => {\n      let graph = new Graph();\n      let node = new Node(0, 0);\n      graph.nodes.size.should.equal(0);\n      graph.addNode(node);\n      graph.nodes.size.should.equal(1);\n      graph.addNode(node);\n      graph.nodes.size.should.equal(1);\n    });\n  }); // #addNode(node)\n\n  describe('#removeNode(node)', () => {\n    it('should remove from nodes', () => {\n      let graph = new Graph();\n      let node = new Node(0, 0);\n      graph.nodes.size.should.equal(0);\n      graph.addNode(node);\n      graph.nodes.size.should.equal(1);\n      graph.removeNode(node);\n      graph.nodes.size.should.equal(0);\n    });\n\n    it('should remove from nodes and edges', () => {\n      let graph = new Graph();\n      let node1 = new Node(0, 0);\n      let node2 = new Node(128, 128);\n      graph.nodes.size.should.equal(0);\n      graph.addNode(node1);\n      graph.addNode(node2);\n      graph.nodes.size.should.equal(2);\n      graph.edges.size.should.equal(0);\n      let edge = new Edge(node1, node2);\n      graph.addEdge(edge);\n      graph.edges.size.should.equal(1);\n      graph.removeNode(node2);\n      graph.nodes.size.should.equal(1);\n      graph.edges.size.should.equal(0);\n    });\n\n    it('should not remove bogus node', () => {\n      let graph = new Graph();\n      let node = new Node(0, 0);\n      let badNode = new Node(128, 128);\n      graph.nodes.size.should.equal(0);\n      graph.addNode(node);\n      graph.nodes.size.should.equal(1);\n      graph.removeNode(badNode);\n      graph.nodes.size.should.equal(1);\n    });\n  }); // #removeNode(node)\n\n  describe('#addEdge(edge)', () => {\n    it('should throw error when edge nodes are not in graph', () => {\n      let graph = new Graph();\n      let edge = new Edge(new Node(0, 0), new Node(1, 0));\n      graph.edges.size.should.equal(0);\n      (function () {\n        graph.addEdge(edge);\n      }).should.throw(Error);\n    });\n\n    it('should add to edges', () => {\n      let graph = new Graph();\n      let start = new Node(0, 0);\n      let dest = new Node(100, 0);\n      graph.addNode(start);\n      graph.addNode(dest);\n      let edge = new Edge(start, dest);\n      graph.edges.size.should.equal(0);\n      graph.addEdge(edge);\n      graph.edges.size.should.equal(1);\n    });\n\n    it('should not add duplicate edge', () => {\n      let graph = new Graph();\n      let start = new Node(0, 0);\n      let dest = new Node(100, 0);\n      graph.addNode(start);\n      graph.addNode(dest);\n      let edge = new Edge(start, dest);\n      graph.edges.size.should.equal(0);\n      graph.addEdge(edge);\n      graph.edges.size.should.equal(1);\n      graph.addEdge(edge);\n      graph.edges.size.should.equal(1);\n    });\n  }); // #addEdge(edge)\n\n  describe('#removeEdge(edge)', () => {\n    it('should remove from edges', () => {\n      let graph = new Graph();\n      let node1 = new Node(0, 0);\n      let node2 = new Node(128, 128);\n      graph.nodes.size.should.equal(0);\n      graph.addNode(node1);\n      graph.addNode(node2);\n      graph.nodes.size.should.equal(2);\n      graph.edges.size.should.equal(0);\n      let edge = new Edge(node1, node2);\n      graph.addEdge(edge);\n      graph.edges.size.should.equal(1);\n      graph.removeEdge(edge);\n      graph.nodes.size.should.equal(2);\n      graph.edges.size.should.equal(0);\n    });\n  }); // #removeEdge(edge)\n\n  describe('#hasEdge(start, dest)', () => {\n    it('should throw error if nodes are not in graph', () => {\n      let graph = new Graph();\n      let start = new Node(0, 0);\n      let dest = new Node(100, 0);\n      graph.addNode(start);\n      (function () {\n        graph.hasEdge(start, dest);\n      }).should.throw(Error);\n    });\n\n    it('should return true if has edge', () => {\n      let graph = new Graph();\n      let start = new Node(0, 0);\n      let dest = new Node(100, 0);\n      let edge = new Edge(start, dest);\n      graph.addNode(start);\n      graph.addNode(dest);\n      graph.addEdge(edge);\n      graph.hasEdge(start, dest).should.be.true;\n    });\n\n    it('should not add duplicate edge', () => {\n      let graph = new Graph();\n      let start = new Node(0, 0);\n      let dest = new Node(100, 0);\n      let edge = new Edge(start, dest);\n      graph.addNode(start);\n      graph.addNode(dest);\n      graph.addEdge(edge);\n      graph.hasEdge(start, start).should.be.false;\n    });\n  }); // #hasEdge(start, dest)\n\n  describe('#hasComponent(x, y, ignore)', () => {\n    it('should return false for empty graph', () => {\n      let graph = new Graph();\n      let node1 = new Node(1, 1);\n\n      graph.hasComponent(2, 2, node1).should.be.false;\n    });\n  });\n\n  describe('#getComponent(x, y)', () => {\n    it('should return null for empty graph', () => {\n      let graph = new Graph();\n\n      (graph.getComponent(4, 4) === null).should.be.true;\n    });\n\n    it('should return non-null when clicking on a node', () => {\n      let graph = new Graph();\n      let node1 = new Node(1, 1);\n      graph.addNode(node1);\n\n      (graph.getComponent(1, 1) === null).should.be.false;\n    });\n  }); // #getComponent(x, y)\n\n  describe('#isNodeCollision(testNode, x, y)', () => {\n    it('should return true if within 60', () => {\n      let graph = new Graph();\n      let node1 = new Node(1, 1);\n      let node2 = new Node(20, 20);\n      graph.addNode(node1);\n\n      graph.isNodeCollision(node2, 20, 20).should.be.true;\n    });\n\n    it('should return false if farther than 60', () => {\n      let graph = new Graph();\n      let node1 = new Node(1, 1);\n      let node2 = new Node(90, 90);\n      graph.addNode(node1);\n\n      graph.isNodeCollision(node2, 90, 90).should.be.false;\n    });\n  }); // #isNodeCollision(testNode, x, y)\n\n  describe('#forEachNode(callback)', () => {\n    it('should run callback(node) for each node', () => {\n      let graph = new Graph();\n      let nodeVisited = new Map();\n\n      for (let i = 0; i < 10; i++) {\n        let node = new Node(Math.random(), Math.random());\n        graph.addNode(node);\n        nodeVisited.set(node, false);\n      }\n\n      graph.forEachNode((node) => {\n        nodeVisited.set(node, true);\n      });\n\n      for (let value of nodeVisited.values()) {\n        value.should.be.true;\n      }\n    });\n\n    it('should break if callback(node) returns false', () => {\n      let graph = new Graph();\n      let nodeVisited = new Map();\n\n      for (let i = 0; i < 10; i++) {\n        let node = new Node(Math.random(), Math.random());\n        graph.addNode(node);\n        nodeVisited.set(node, false);\n      }\n\n      let firstNode;\n      graph.forEachNode((node) => {\n        nodeVisited.set(node, true);\n        firstNode = node;\n        return false;\n      });\n\n      for (let [ key, value ] of nodeVisited) {\n        if (key === firstNode) {\n          value.should.be.true;\n        } else {\n          value.should.be.false;\n        }\n      }\n    });\n  }); // #forEachNode(callback)\n}); // Graph\n"
  },
  {
    "__docId__": 857,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe81",
    "testId": 81,
    "memberof": "test/graph-test.js",
    "testDepth": 0,
    "longname": "test/graph-test.js~describe81",
    "access": null,
    "description": "Graph",
    "lineNumber": 8
  },
  {
    "__docId__": 858,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe82",
    "testId": 82,
    "memberof": "test/graph-test.js~describe81",
    "testDepth": 1,
    "longname": "test/graph-test.js~describe81.describe82",
    "access": null,
    "description": "#constructor(x, y)",
    "lineNumber": 9
  },
  {
    "__docId__": 859,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it83",
    "testId": 83,
    "memberof": "test/graph-test.js~describe81.describe82",
    "testDepth": 2,
    "longname": "test/graph-test.js~describe81.describe82.it83",
    "access": null,
    "description": "should accept iterable arguments",
    "lineNumber": 10
  },
  {
    "__docId__": 860,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it84",
    "testId": 84,
    "memberof": "test/graph-test.js~describe81.describe82",
    "testDepth": 2,
    "longname": "test/graph-test.js~describe81.describe82.it84",
    "access": null,
    "description": "should work with no arguments",
    "lineNumber": 27
  },
  {
    "__docId__": 861,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe85",
    "testId": 85,
    "memberof": "test/graph-test.js~describe81",
    "testDepth": 1,
    "longname": "test/graph-test.js~describe81.describe85",
    "access": null,
    "description": "#addNode(node)",
    "lineNumber": 34
  },
  {
    "__docId__": 862,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it86",
    "testId": 86,
    "memberof": "test/graph-test.js~describe81.describe85",
    "testDepth": 2,
    "longname": "test/graph-test.js~describe81.describe85.it86",
    "access": null,
    "description": "should add to nodes",
    "lineNumber": 35
  },
  {
    "__docId__": 863,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it87",
    "testId": 87,
    "memberof": "test/graph-test.js~describe81.describe85",
    "testDepth": 2,
    "longname": "test/graph-test.js~describe81.describe85.it87",
    "access": null,
    "description": "should not add duplicate node",
    "lineNumber": 43
  },
  {
    "__docId__": 864,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe88",
    "testId": 88,
    "memberof": "test/graph-test.js~describe81",
    "testDepth": 1,
    "longname": "test/graph-test.js~describe81.describe88",
    "access": null,
    "description": "#removeNode(node)",
    "lineNumber": 54
  },
  {
    "__docId__": 865,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it89",
    "testId": 89,
    "memberof": "test/graph-test.js~describe81.describe88",
    "testDepth": 2,
    "longname": "test/graph-test.js~describe81.describe88.it89",
    "access": null,
    "description": "should remove from nodes",
    "lineNumber": 55
  },
  {
    "__docId__": 866,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it90",
    "testId": 90,
    "memberof": "test/graph-test.js~describe81.describe88",
    "testDepth": 2,
    "longname": "test/graph-test.js~describe81.describe88.it90",
    "access": null,
    "description": "should remove from nodes and edges",
    "lineNumber": 65
  },
  {
    "__docId__": 867,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it91",
    "testId": 91,
    "memberof": "test/graph-test.js~describe81.describe88",
    "testDepth": 2,
    "longname": "test/graph-test.js~describe81.describe88.it91",
    "access": null,
    "description": "should not remove bogus node",
    "lineNumber": 82
  },
  {
    "__docId__": 868,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe92",
    "testId": 92,
    "memberof": "test/graph-test.js~describe81",
    "testDepth": 1,
    "longname": "test/graph-test.js~describe81.describe92",
    "access": null,
    "description": "#addEdge(edge)",
    "lineNumber": 94
  },
  {
    "__docId__": 869,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it93",
    "testId": 93,
    "memberof": "test/graph-test.js~describe81.describe92",
    "testDepth": 2,
    "longname": "test/graph-test.js~describe81.describe92.it93",
    "access": null,
    "description": "should throw error when edge nodes are not in graph",
    "lineNumber": 95
  },
  {
    "__docId__": 870,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it94",
    "testId": 94,
    "memberof": "test/graph-test.js~describe81.describe92",
    "testDepth": 2,
    "longname": "test/graph-test.js~describe81.describe92.it94",
    "access": null,
    "description": "should add to edges",
    "lineNumber": 104
  },
  {
    "__docId__": 871,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it95",
    "testId": 95,
    "memberof": "test/graph-test.js~describe81.describe92",
    "testDepth": 2,
    "longname": "test/graph-test.js~describe81.describe92.it95",
    "access": null,
    "description": "should not add duplicate edge",
    "lineNumber": 116
  },
  {
    "__docId__": 872,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe96",
    "testId": 96,
    "memberof": "test/graph-test.js~describe81",
    "testDepth": 1,
    "longname": "test/graph-test.js~describe81.describe96",
    "access": null,
    "description": "#removeEdge(edge)",
    "lineNumber": 131
  },
  {
    "__docId__": 873,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it97",
    "testId": 97,
    "memberof": "test/graph-test.js~describe81.describe96",
    "testDepth": 2,
    "longname": "test/graph-test.js~describe81.describe96.it97",
    "access": null,
    "description": "should remove from edges",
    "lineNumber": 132
  },
  {
    "__docId__": 874,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe98",
    "testId": 98,
    "memberof": "test/graph-test.js~describe81",
    "testDepth": 1,
    "longname": "test/graph-test.js~describe81.describe98",
    "access": null,
    "description": "#hasEdge(start, dest)",
    "lineNumber": 150
  },
  {
    "__docId__": 875,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it99",
    "testId": 99,
    "memberof": "test/graph-test.js~describe81.describe98",
    "testDepth": 2,
    "longname": "test/graph-test.js~describe81.describe98.it99",
    "access": null,
    "description": "should throw error if nodes are not in graph",
    "lineNumber": 151
  },
  {
    "__docId__": 876,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it100",
    "testId": 100,
    "memberof": "test/graph-test.js~describe81.describe98",
    "testDepth": 2,
    "longname": "test/graph-test.js~describe81.describe98.it100",
    "access": null,
    "description": "should return true if has edge",
    "lineNumber": 161
  },
  {
    "__docId__": 877,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it101",
    "testId": 101,
    "memberof": "test/graph-test.js~describe81.describe98",
    "testDepth": 2,
    "longname": "test/graph-test.js~describe81.describe98.it101",
    "access": null,
    "description": "should not add duplicate edge",
    "lineNumber": 172
  },
  {
    "__docId__": 878,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe102",
    "testId": 102,
    "memberof": "test/graph-test.js~describe81",
    "testDepth": 1,
    "longname": "test/graph-test.js~describe81.describe102",
    "access": null,
    "description": "#hasComponent(x, y, ignore)",
    "lineNumber": 184
  },
  {
    "__docId__": 879,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it103",
    "testId": 103,
    "memberof": "test/graph-test.js~describe81.describe102",
    "testDepth": 2,
    "longname": "test/graph-test.js~describe81.describe102.it103",
    "access": null,
    "description": "should return false for empty graph",
    "lineNumber": 185
  },
  {
    "__docId__": 880,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe104",
    "testId": 104,
    "memberof": "test/graph-test.js~describe81",
    "testDepth": 1,
    "longname": "test/graph-test.js~describe81.describe104",
    "access": null,
    "description": "#getComponent(x, y)",
    "lineNumber": 193
  },
  {
    "__docId__": 881,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it105",
    "testId": 105,
    "memberof": "test/graph-test.js~describe81.describe104",
    "testDepth": 2,
    "longname": "test/graph-test.js~describe81.describe104.it105",
    "access": null,
    "description": "should return null for empty graph",
    "lineNumber": 194
  },
  {
    "__docId__": 882,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it106",
    "testId": 106,
    "memberof": "test/graph-test.js~describe81.describe104",
    "testDepth": 2,
    "longname": "test/graph-test.js~describe81.describe104.it106",
    "access": null,
    "description": "should return non-null when clicking on a node",
    "lineNumber": 200
  },
  {
    "__docId__": 883,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe107",
    "testId": 107,
    "memberof": "test/graph-test.js~describe81",
    "testDepth": 1,
    "longname": "test/graph-test.js~describe81.describe107",
    "access": null,
    "description": "#isNodeCollision(testNode, x, y)",
    "lineNumber": 209
  },
  {
    "__docId__": 884,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it108",
    "testId": 108,
    "memberof": "test/graph-test.js~describe81.describe107",
    "testDepth": 2,
    "longname": "test/graph-test.js~describe81.describe107.it108",
    "access": null,
    "description": "should return true if within 60",
    "lineNumber": 210
  },
  {
    "__docId__": 885,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it109",
    "testId": 109,
    "memberof": "test/graph-test.js~describe81.describe107",
    "testDepth": 2,
    "longname": "test/graph-test.js~describe81.describe107.it109",
    "access": null,
    "description": "should return false if farther than 60",
    "lineNumber": 219
  },
  {
    "__docId__": 886,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe110",
    "testId": 110,
    "memberof": "test/graph-test.js~describe81",
    "testDepth": 1,
    "longname": "test/graph-test.js~describe81.describe110",
    "access": null,
    "description": "#forEachNode(callback)",
    "lineNumber": 229
  },
  {
    "__docId__": 887,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it111",
    "testId": 111,
    "memberof": "test/graph-test.js~describe81.describe110",
    "testDepth": 2,
    "longname": "test/graph-test.js~describe81.describe110.it111",
    "access": null,
    "description": "should run callback(node) for each node",
    "lineNumber": 230
  },
  {
    "__docId__": 888,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it112",
    "testId": 112,
    "memberof": "test/graph-test.js~describe81.describe110",
    "testDepth": 2,
    "longname": "test/graph-test.js~describe81.describe110.it112",
    "access": null,
    "description": "should break if callback(node) returns false",
    "lineNumber": 249
  },
  {
    "__docId__": 889,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/node-test.js",
    "memberof": null,
    "longname": "test/node-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import chai from 'chai';\nchai.should();\n\nimport CircleNode from '../src/js/data/node/circle-node';\n\ndescribe('CircleNode', () => {\n  describe('#constructor', () => {\n    it('should create instance of CircleNode', () => {\n      new CircleNode(0, 0).should.be.instanceof(CircleNode);\n    });\n  });\n\n  describe('#containsPoint', () => {\n    it('should contain this point', () => {\n      let tempNode = new CircleNode(1, 2);\n      tempNode.containsPoint(10, 10).should.be.true;\n    });\n    it('should not contain this point', () => {\n      let tempNode = new CircleNode(1, 2);\n      tempNode.containsPoint(300, 200).should.be.false;\n    });\n  });\n\n  describe('#distanceToPoint', () => {\n    it('should do this distance calculation', () => {\n      let tempNode = new CircleNode(1, 2);\n      tempNode.distanceToPoint(3, 2).should.equal(2);\n    });\n    it('should do this simple distance calculation 2', () => {\n      let tempNode = new CircleNode(1, 2);\n      tempNode.distanceToPoint(3, 5).should.equal(Math.sqrt(4 + 9));\n    });\n    it('should do this negative point test', () => {\n      let tempNode = new CircleNode(1, 2);\n      tempNode.distanceToPoint(-1, 2).should.equal(2);\n    });\n  });\n\n  describe('#edgePointInDirection', () => {\n    it('should do this simple point check', () => {\n      let tempNode = new CircleNode(1, 0);\n      tempNode.edgePointInDirection(50, 0).x.should.equal(31);\n      tempNode.edgePointInDirection(50, 0).y.should.equal(0);\n    });\n    it('should account for a point within the radius of the node', () => {\n      let tempNode = new CircleNode(1, 0);\n      tempNode.edgePointInDirection(20, 0).x.should.equal(31);\n      tempNode.edgePointInDirection(-1, 0).x.should.equal(-29);\n      tempNode.edgePointInDirection(20, 0).y.should.equal(0);\n    });\n    it('should throw error when point is at node origin', () => {\n      (function () {\n        let tempNode = new CircleNode(1, 0);\n        tempNode.edgePointInDirection(1, 0);\n      }).should.throw(Error);\n    });\n  });\n});\n"
  },
  {
    "__docId__": 890,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe113",
    "testId": 113,
    "memberof": "test/node-test.js",
    "testDepth": 0,
    "longname": "test/node-test.js~describe113",
    "access": null,
    "description": "CircleNode",
    "lineNumber": 6
  },
  {
    "__docId__": 891,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe114",
    "testId": 114,
    "memberof": "test/node-test.js~describe113",
    "testDepth": 1,
    "longname": "test/node-test.js~describe113.describe114",
    "access": null,
    "description": "#constructor",
    "lineNumber": 7
  },
  {
    "__docId__": 892,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it115",
    "testId": 115,
    "memberof": "test/node-test.js~describe113.describe114",
    "testDepth": 2,
    "longname": "test/node-test.js~describe113.describe114.it115",
    "access": null,
    "description": "should create instance of CircleNode",
    "lineNumber": 8
  },
  {
    "__docId__": 893,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe116",
    "testId": 116,
    "memberof": "test/node-test.js~describe113",
    "testDepth": 1,
    "longname": "test/node-test.js~describe113.describe116",
    "access": null,
    "description": "#containsPoint",
    "lineNumber": 13
  },
  {
    "__docId__": 894,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it117",
    "testId": 117,
    "memberof": "test/node-test.js~describe113.describe116",
    "testDepth": 2,
    "longname": "test/node-test.js~describe113.describe116.it117",
    "access": null,
    "description": "should contain this point",
    "lineNumber": 14
  },
  {
    "__docId__": 895,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it118",
    "testId": 118,
    "memberof": "test/node-test.js~describe113.describe116",
    "testDepth": 2,
    "longname": "test/node-test.js~describe113.describe116.it118",
    "access": null,
    "description": "should not contain this point",
    "lineNumber": 18
  },
  {
    "__docId__": 896,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe119",
    "testId": 119,
    "memberof": "test/node-test.js~describe113",
    "testDepth": 1,
    "longname": "test/node-test.js~describe113.describe119",
    "access": null,
    "description": "#distanceToPoint",
    "lineNumber": 24
  },
  {
    "__docId__": 897,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it120",
    "testId": 120,
    "memberof": "test/node-test.js~describe113.describe119",
    "testDepth": 2,
    "longname": "test/node-test.js~describe113.describe119.it120",
    "access": null,
    "description": "should do this distance calculation",
    "lineNumber": 25
  },
  {
    "__docId__": 898,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it121",
    "testId": 121,
    "memberof": "test/node-test.js~describe113.describe119",
    "testDepth": 2,
    "longname": "test/node-test.js~describe113.describe119.it121",
    "access": null,
    "description": "should do this simple distance calculation 2",
    "lineNumber": 29
  },
  {
    "__docId__": 899,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it122",
    "testId": 122,
    "memberof": "test/node-test.js~describe113.describe119",
    "testDepth": 2,
    "longname": "test/node-test.js~describe113.describe119.it122",
    "access": null,
    "description": "should do this negative point test",
    "lineNumber": 33
  },
  {
    "__docId__": 900,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe123",
    "testId": 123,
    "memberof": "test/node-test.js~describe113",
    "testDepth": 1,
    "longname": "test/node-test.js~describe113.describe123",
    "access": null,
    "description": "#edgePointInDirection",
    "lineNumber": 39
  },
  {
    "__docId__": 901,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it124",
    "testId": 124,
    "memberof": "test/node-test.js~describe113.describe123",
    "testDepth": 2,
    "longname": "test/node-test.js~describe113.describe123.it124",
    "access": null,
    "description": "should do this simple point check",
    "lineNumber": 40
  },
  {
    "__docId__": 902,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it125",
    "testId": 125,
    "memberof": "test/node-test.js~describe113.describe123",
    "testDepth": 2,
    "longname": "test/node-test.js~describe113.describe123.it125",
    "access": null,
    "description": "should account for a point within the radius of the node",
    "lineNumber": 45
  },
  {
    "__docId__": 903,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it126",
    "testId": 126,
    "memberof": "test/node-test.js~describe113.describe123",
    "testDepth": 2,
    "longname": "test/node-test.js~describe113.describe123.it126",
    "access": null,
    "description": "should throw error when point is at node origin",
    "lineNumber": 51
  },
  {
    "__docId__": 904,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/queue-test.js",
    "memberof": null,
    "longname": "test/queue-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import chai from 'chai';\r\nlet should = chai.should();\r\n\r\nimport Queue from '../src/js/util/queue';\r\n\r\ndescribe('Queue', () => {\r\n  describe('#constructor', () => {\r\n    it('creates instance of Queue', () => {\r\n      (new Queue()).should.be.instanceof(Queue);\r\n    });\r\n  });\r\n\r\n  describe('#size', () => {\r\n    it('should be 0 for empty queue', () => {\r\n      let queue = new Queue();\r\n      (queue.size).should.be.equal(0);\r\n    });\r\n\r\n    it('should increment for each enqueue', () => {\r\n      let queue = new Queue();\r\n      queue.enqueue('test');\r\n      (queue.size).should.be.equal(1);\r\n      queue.enqueue('test');\r\n      (queue.size).should.be.equal(2);\r\n    });\r\n\r\n    it('should decrement for each dequeue', () => {\r\n      let queue = new Queue();\r\n      queue.enqueue('test');\r\n      queue.enqueue('test');\r\n      queue.dequeue();\r\n      (queue.size).should.be.equal(1);\r\n    });\r\n  });\r\n\r\n  describe('#clear', () => {\r\n    it('should clear the queue', () => {\r\n      let queue = new Queue();\r\n      queue.enqueue('test');\r\n      queue.clear();\r\n      (queue.size).should.be.equal(0);\r\n    });\r\n  });\r\n\r\n  describe('#enqueue', () => {\r\n    it('should add item to queue', () => {\r\n      let queue = new Queue();\r\n      let item = 'test';\r\n      queue.enqueue(item);\r\n      (queue.dequeue()).should.be.equal(item);\r\n    });\r\n\r\n    it('should add item to back of queue', () => {\r\n      let queue = new Queue();\r\n      let item1 = 1;\r\n      let item2 = 2;\r\n      queue.enqueue(item1);\r\n      queue.enqueue(item2);\r\n      (queue.dequeue()).should.be.equal(item1);\r\n      (queue.dequeue()).should.be.equal(item2);\r\n    });\r\n\r\n    it('should throw error when adding null', () => {\r\n      let queue = new Queue();\r\n      (function () {\r\n        queue.enqueue(null);\r\n      }).should.throw(Error);\r\n    });\r\n\r\n    it('should throw error when adding undefined', () => {\r\n      let queue = new Queue();\r\n      (function () {\r\n        queue.enqueue();\r\n      }).should.throw(Error);\r\n    });\r\n  });\r\n\r\n  describe('#dequeue', () => {\r\n    it('should return null for empty queue', () => {\r\n      let queue = new Queue();\r\n      should.not.exist(queue.dequeue());\r\n    });\r\n\r\n    it('should return the first item in queue', () => {\r\n      let queue = new Queue();\r\n      let item1 = 1;\r\n      let item2 = 2;\r\n      queue.enqueue(item1);\r\n      queue.enqueue(item2);\r\n      (queue.dequeue()).should.be.equal(item1);\r\n    });\r\n\r\n    it('should remove the first item in queue', () => {\r\n      let queue = new Queue();\r\n      let item1 = 1;\r\n      let item2 = 2;\r\n      queue.enqueue(item1);\r\n      queue.enqueue(item2);\r\n      queue.dequeue();\r\n      (queue.size).should.be.equal(1);\r\n    });\r\n\r\n    it('should handle offset when more than half empty', () => {\r\n      let queue = new Queue();\r\n      let item1 = 1;\r\n      let item2 = 2;\r\n      let item3 = 3;\r\n      queue.enqueue(item1);\r\n      queue.enqueue(item2);\r\n      queue.enqueue(item3);\r\n      queue.dequeue();\r\n      queue.dequeue();\r\n      (queue.offset).should.equal(0);\r\n    });\r\n  });\r\n\r\n  describe('#peek', () => {\r\n    it('should return null for empty queue', () => {\r\n      let queue = new Queue();\r\n      should.not.exist(queue.peek());\r\n    });\r\n\r\n    it('should return the first item in queue', () => {\r\n      let queue = new Queue();\r\n      let item1 = 1;\r\n      let item2 = 2;\r\n      queue.enqueue(item1);\r\n      queue.enqueue(item2);\r\n      (queue.peek()).should.be.equal(item1);\r\n    });\r\n\r\n    it('should not remove item from queue', () => {\r\n      let queue = new Queue();\r\n      let item1 = 1;\r\n      let item2 = 2;\r\n      queue.enqueue(item1);\r\n      queue.enqueue(item2);\r\n      queue.peek();\r\n      (queue.size).should.be.equal(2);\r\n    });\r\n  });\r\n\r\n  describe('#has', () => {\r\n    it('should throw error when checking null', () => {\r\n      let queue = new Queue();\r\n      (function () {\r\n        queue.has(null);\r\n      }).should.throw(Error);\r\n    });\r\n\r\n    it('should throw error when checking undefined', () => {\r\n      let queue = new Queue();\r\n      (function () {\r\n        queue.has();\r\n      }).should.throw(Error);\r\n    });\r\n\r\n    it('should return true if item is in queue', () => {\r\n      let queue = new Queue();\r\n      queue.enqueue('test');\r\n      (queue.has('test')).should.be.true;\r\n    });\r\n\r\n    it('should return false if item is not in queue', () => {\r\n      let queue = new Queue();\r\n      queue.enqueue('test');\r\n      (queue.has('testtest')).should.be.false;\r\n    });\r\n  });\r\n\r\n  describe('#forEach', () => {\r\n    it('should iterate through all items', () => {\r\n      let queue = new Queue();\r\n      let item1 = 1;\r\n      let item2 = 2;\r\n      let item3 = 3;\r\n      queue.enqueue(item1);\r\n      queue.enqueue(item2);\r\n      queue.enqueue(item3);\r\n\r\n      let order = [];\r\n      queue.forEach((item) => {\r\n        order.push(item);\r\n      });\r\n\r\n      (order.indexOf(item1)).should.be.at.least(0);\r\n      (order.indexOf(item1)).should.be.at.least(0);\r\n      (order.indexOf(item1)).should.be.at.least(0);\r\n    });\r\n\r\n    it('should stop if callback returns false', () => {\r\n      let queue = new Queue();\r\n      let item1 = 1;\r\n      let item2 = 2;\r\n      let item3 = 3;\r\n      queue.enqueue(item1);\r\n      queue.enqueue(item2);\r\n      queue.enqueue(item3);\r\n\r\n      let order = [];\r\n      queue.forEach((item) => {\r\n        if (item === item2) {\r\n          return false;\r\n        }\r\n        order.push(item);\r\n        return true;\r\n      });\r\n\r\n      (order.length).should.be.equal(1);\r\n    });\r\n\r\n    it('should iterate in order starting from the front of the queue', () => {\r\n      let queue = new Queue();\r\n      let item1 = 1;\r\n      let item2 = 2;\r\n      let item3 = 3;\r\n      queue.enqueue(item1);\r\n      queue.enqueue(item2);\r\n      queue.enqueue(item3);\r\n\r\n      let order = [];\r\n      queue.forEach((item) => {\r\n        order.push(item);\r\n      });\r\n\r\n      (order[0]).should.be.equal(item1);\r\n      (order[1]).should.be.equal(item2);\r\n      (order[2]).should.be.equal(item3);\r\n    });\r\n  });\r\n});\r\n"
  },
  {
    "__docId__": 905,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe127",
    "testId": 127,
    "memberof": "test/queue-test.js",
    "testDepth": 0,
    "longname": "test/queue-test.js~describe127",
    "access": null,
    "description": "Queue",
    "lineNumber": 6
  },
  {
    "__docId__": 906,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe128",
    "testId": 128,
    "memberof": "test/queue-test.js~describe127",
    "testDepth": 1,
    "longname": "test/queue-test.js~describe127.describe128",
    "access": null,
    "description": "#constructor",
    "lineNumber": 7
  },
  {
    "__docId__": 907,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it129",
    "testId": 129,
    "memberof": "test/queue-test.js~describe127.describe128",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe128.it129",
    "access": null,
    "description": "creates instance of Queue",
    "lineNumber": 8
  },
  {
    "__docId__": 908,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe130",
    "testId": 130,
    "memberof": "test/queue-test.js~describe127",
    "testDepth": 1,
    "longname": "test/queue-test.js~describe127.describe130",
    "access": null,
    "description": "#size",
    "lineNumber": 13
  },
  {
    "__docId__": 909,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it131",
    "testId": 131,
    "memberof": "test/queue-test.js~describe127.describe130",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe130.it131",
    "access": null,
    "description": "should be 0 for empty queue",
    "lineNumber": 14
  },
  {
    "__docId__": 910,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it132",
    "testId": 132,
    "memberof": "test/queue-test.js~describe127.describe130",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe130.it132",
    "access": null,
    "description": "should increment for each enqueue",
    "lineNumber": 19
  },
  {
    "__docId__": 911,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it133",
    "testId": 133,
    "memberof": "test/queue-test.js~describe127.describe130",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe130.it133",
    "access": null,
    "description": "should decrement for each dequeue",
    "lineNumber": 27
  },
  {
    "__docId__": 912,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe134",
    "testId": 134,
    "memberof": "test/queue-test.js~describe127",
    "testDepth": 1,
    "longname": "test/queue-test.js~describe127.describe134",
    "access": null,
    "description": "#clear",
    "lineNumber": 36
  },
  {
    "__docId__": 913,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it135",
    "testId": 135,
    "memberof": "test/queue-test.js~describe127.describe134",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe134.it135",
    "access": null,
    "description": "should clear the queue",
    "lineNumber": 37
  },
  {
    "__docId__": 914,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe136",
    "testId": 136,
    "memberof": "test/queue-test.js~describe127",
    "testDepth": 1,
    "longname": "test/queue-test.js~describe127.describe136",
    "access": null,
    "description": "#enqueue",
    "lineNumber": 45
  },
  {
    "__docId__": 915,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it137",
    "testId": 137,
    "memberof": "test/queue-test.js~describe127.describe136",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe136.it137",
    "access": null,
    "description": "should add item to queue",
    "lineNumber": 46
  },
  {
    "__docId__": 916,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it138",
    "testId": 138,
    "memberof": "test/queue-test.js~describe127.describe136",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe136.it138",
    "access": null,
    "description": "should add item to back of queue",
    "lineNumber": 53
  },
  {
    "__docId__": 917,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it139",
    "testId": 139,
    "memberof": "test/queue-test.js~describe127.describe136",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe136.it139",
    "access": null,
    "description": "should throw error when adding null",
    "lineNumber": 63
  },
  {
    "__docId__": 918,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it140",
    "testId": 140,
    "memberof": "test/queue-test.js~describe127.describe136",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe136.it140",
    "access": null,
    "description": "should throw error when adding undefined",
    "lineNumber": 70
  },
  {
    "__docId__": 919,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe141",
    "testId": 141,
    "memberof": "test/queue-test.js~describe127",
    "testDepth": 1,
    "longname": "test/queue-test.js~describe127.describe141",
    "access": null,
    "description": "#dequeue",
    "lineNumber": 78
  },
  {
    "__docId__": 920,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it142",
    "testId": 142,
    "memberof": "test/queue-test.js~describe127.describe141",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe141.it142",
    "access": null,
    "description": "should return null for empty queue",
    "lineNumber": 79
  },
  {
    "__docId__": 921,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it143",
    "testId": 143,
    "memberof": "test/queue-test.js~describe127.describe141",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe141.it143",
    "access": null,
    "description": "should return the first item in queue",
    "lineNumber": 84
  },
  {
    "__docId__": 922,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it144",
    "testId": 144,
    "memberof": "test/queue-test.js~describe127.describe141",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe141.it144",
    "access": null,
    "description": "should remove the first item in queue",
    "lineNumber": 93
  },
  {
    "__docId__": 923,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it145",
    "testId": 145,
    "memberof": "test/queue-test.js~describe127.describe141",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe141.it145",
    "access": null,
    "description": "should handle offset when more than half empty",
    "lineNumber": 103
  },
  {
    "__docId__": 924,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe146",
    "testId": 146,
    "memberof": "test/queue-test.js~describe127",
    "testDepth": 1,
    "longname": "test/queue-test.js~describe127.describe146",
    "access": null,
    "description": "#peek",
    "lineNumber": 117
  },
  {
    "__docId__": 925,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it147",
    "testId": 147,
    "memberof": "test/queue-test.js~describe127.describe146",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe146.it147",
    "access": null,
    "description": "should return null for empty queue",
    "lineNumber": 118
  },
  {
    "__docId__": 926,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it148",
    "testId": 148,
    "memberof": "test/queue-test.js~describe127.describe146",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe146.it148",
    "access": null,
    "description": "should return the first item in queue",
    "lineNumber": 123
  },
  {
    "__docId__": 927,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it149",
    "testId": 149,
    "memberof": "test/queue-test.js~describe127.describe146",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe146.it149",
    "access": null,
    "description": "should not remove item from queue",
    "lineNumber": 132
  },
  {
    "__docId__": 928,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe150",
    "testId": 150,
    "memberof": "test/queue-test.js~describe127",
    "testDepth": 1,
    "longname": "test/queue-test.js~describe127.describe150",
    "access": null,
    "description": "#has",
    "lineNumber": 143
  },
  {
    "__docId__": 929,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it151",
    "testId": 151,
    "memberof": "test/queue-test.js~describe127.describe150",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe150.it151",
    "access": null,
    "description": "should throw error when checking null",
    "lineNumber": 144
  },
  {
    "__docId__": 930,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it152",
    "testId": 152,
    "memberof": "test/queue-test.js~describe127.describe150",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe150.it152",
    "access": null,
    "description": "should throw error when checking undefined",
    "lineNumber": 151
  },
  {
    "__docId__": 931,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it153",
    "testId": 153,
    "memberof": "test/queue-test.js~describe127.describe150",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe150.it153",
    "access": null,
    "description": "should return true if item is in queue",
    "lineNumber": 158
  },
  {
    "__docId__": 932,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it154",
    "testId": 154,
    "memberof": "test/queue-test.js~describe127.describe150",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe150.it154",
    "access": null,
    "description": "should return false if item is not in queue",
    "lineNumber": 164
  },
  {
    "__docId__": 933,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe155",
    "testId": 155,
    "memberof": "test/queue-test.js~describe127",
    "testDepth": 1,
    "longname": "test/queue-test.js~describe127.describe155",
    "access": null,
    "description": "#forEach",
    "lineNumber": 171
  },
  {
    "__docId__": 934,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it156",
    "testId": 156,
    "memberof": "test/queue-test.js~describe127.describe155",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe155.it156",
    "access": null,
    "description": "should iterate through all items",
    "lineNumber": 172
  },
  {
    "__docId__": 935,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it157",
    "testId": 157,
    "memberof": "test/queue-test.js~describe127.describe155",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe155.it157",
    "access": null,
    "description": "should stop if callback returns false",
    "lineNumber": 191
  },
  {
    "__docId__": 936,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it158",
    "testId": 158,
    "memberof": "test/queue-test.js~describe127.describe155",
    "testDepth": 2,
    "longname": "test/queue-test.js~describe127.describe155.it158",
    "access": null,
    "description": "should iterate in order starting from the front of the queue",
    "lineNumber": 212
  },
  {
    "__docId__": 937,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/serialize-test.js",
    "memberof": null,
    "longname": "test/serialize-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "// graph serialize unit tests\n/* eslint no-unused-expressions: 0 */\n\nimport chai from 'chai';\nchai.should();\n\nimport { Serializer } from '../src/js/util/graph-serialize';\nimport { Graph } from '../src/js/data/graph';\nimport { CircleNode as Node } from '../src/js/data/node/circle-node';\nimport { HexagonNode } from '../src/js/data/node/hexagon-node';\nimport { SolidEdge as Edge } from '../src/js/data/edge/solid-edge';\n\nlet IDSET = '_$$SET$$_';\n\ndescribe('Serializer', () => {\n  describe('#constructor', () => {\n    it('creates instance of Serializer', () => {\n      let graph = new Graph();\n      let fn = function (g) {};\n      (new Serializer(graph, fn)).should.be.instanceof(Serializer);\n    });\n  });\n\n  describe('#emptyGraph', () => {\n    it('should create valid graph obj export', () => {\n      let graph = new Graph();\n      let fn = function (g) {};\n      let serializer = new Serializer(graph, fn);\n      let serialObj = serializer.serializeGraph();\n      (serialObj.hasOwnProperty(IDSET +'edges')).should.be.true;\n      (serialObj.hasOwnProperty(IDSET + 'nodes')).should.be.true;\n      (serialObj[IDSET + 'nodes'].length).should.equal(0);\n      (serialObj[IDSET + 'edges'].length).should.equal(0);\n    });\n\n    it('should create valid graph obj import', () => {\n      let graph = new Graph();\n      let fn = function (g) {};\n      let serializer = new Serializer(graph, fn);\n      let serialObj = serializer.serializeGraph();\n      let deserializeInfo = serializer.deserializeGraph(serialObj);\n      let graph2 = deserializeInfo.graph;\n      (graph2).should.be.instanceof(Graph);\n      graph2.nodes.size.should.equal(0);\n      graph2.edges.size.should.equal(0);\n      (graph2 === graph).should.be.false;\n    });\n\n    it('should fail cleanly on importing malformed input', () => {\n      let graph = new Graph();\n      let fn = function (g) {};\n      let serializer = new Serializer(graph, fn);\n      let badInput = JSON.parse('{\"_$$SET$$_nodes\":[{\"NotANode\":0}],\"Everything\":42}');\n      let deserializeInfo = null;\n      try {\n        deserializeInfo = serializer.deserializeGraph(badInput);\n        // should never be reached\n        (0).should.equal(1);\n      } catch(ex) {\n        (ex).should.be.instanceof(Error);\n        (deserializeInfo === null).should.be.true;\n      }\n    });\n  });\n\n  describe('#populatedGraph', () => {\n    it('should create valid graph obj export', () => {\n      let node1 = new Node(0, 0);\n      let node2 = new Node(1, 0);\n      let edge1 = new Edge(node1, node2);\n\n      let nodes = new Set();\n      nodes.add(node1);\n      nodes.add(node2);\n\n      let edges = new Set();\n      edges.add(edge1);\n\n      let graph = new Graph(nodes, edges);\n      let fn = function (g) {};\n      let serializer = new Serializer(graph, fn);\n      let serialObj = serializer.serializeGraph();\n      (serialObj.hasOwnProperty(IDSET + 'edges')).should.be.true;\n      (serialObj.hasOwnProperty(IDSET + 'nodes')).should.be.true;\n      let edgeArray = serialObj[IDSET + 'edges'];\n      let nodeArray = serialObj[IDSET + 'nodes'];\n      (nodeArray.length).should.equal(2);\n      (edgeArray.length).should.equal(1);\n    });\n\n    it('should create valid graph obj import', () => {\n      let node1 = new Node(0, 0);\n      let node2 = new Node(1, 0);\n      let edge1 = new Edge(node1, node2);\n\n      let nodes = new Set();\n      nodes.add(node1);\n      nodes.add(node2);\n\n      let edges = new Set();\n      edges.add(edge1);\n\n      let graph = new Graph(nodes, edges);\n      let fn = function (g) {};\n      let serializer = new Serializer(graph, fn);\n      let serialObj = serializer.serializeGraph();\n      let edgeArray = serialObj[IDSET + 'edges'];\n      let nodeArray = serialObj[IDSET + 'nodes'];\n      (nodeArray.length).should.equal(2);\n      (edgeArray.length).should.equal(1);\n      let deserializeInfo = serializer.deserializeGraph(serialObj);\n      let graph2 = deserializeInfo.graph;\n      (graph2).should.be.instanceof(Graph);\n      (graph2.edges.size).should.equal(1);\n      (graph2.nodes.size).should.equal(2);\n      for (let testNode of graph2.nodes) {\n        (testNode.id === node1.id || testNode.id === node2.id).should.be.true;\n      }\n      for (let testEdge of graph2.edges) {\n        (testEdge.id === edge1.id).should.be.true;\n      }\n    });\n\n    it('should create valid graph obj import', () => {\n      let node1 = new Node(0, 0);\n      let node2 = new Node(1, 0);\n      let node3 = new HexagonNode(2, 0);\n      let node4 = new Node(3, 0);\n      let edge1 = new Edge(node1, node2);\n      let edge2 = new Edge(node1, node3);\n\n      let nodes = new Set();\n      nodes.add(node1);\n      nodes.add(node2);\n      nodes.add(node3);\n      nodes.add(node4);\n\n      let edges = new Set();\n      edges.add(edge1);\n      edges.add(edge2);\n\n      let graph = new Graph(nodes, edges);\n      let fn = function (g) {};\n      let serializer = new Serializer(graph, fn);\n      let serialObj = serializer.serializeGraph();\n      let edgeArray = serialObj[IDSET + 'edges'];\n      let nodeArray = serialObj[IDSET + 'nodes'];\n      (nodeArray.length).should.equal(4);\n      (edgeArray.length).should.equal(2);\n      let deserializeInfo = serializer.deserializeGraph(serialObj);\n      let graph2 = deserializeInfo.graph;\n      (graph2).should.be.instanceof(Graph);\n      (graph2.edges.size).should.equal(2);\n      (graph2.nodes.size).should.equal(4);\n      for (let testNode of graph2.nodes) {\n        switch (testNode.id) {\n        case node1.id:\n          (testNode).should.be.instanceof(Node);\n          for(let testEdge of testNode.edges) {\n            (testEdge.id === edge1.id || testEdge.id === edge2.id).should.be.true;\n          }\n          break;\n        case node2.id:\n          (testNode).should.be.instanceof(Node);\n          for(let testEdge of testNode.edges) {\n            (testEdge.id === edge1.id).should.be.true;\n          }\n          break;\n        case node3.id:\n          (testNode).should.be.instanceof(HexagonNode);\n          for(let testEdge of testNode.edges) {\n            (testEdge.id === edge2.id).should.be.true;\n          }\n          break;\n        case node4.id:\n          (testNode).should.be.instanceof(Node);\n          testNode.edges.size.should.equal(0);\n          break;\n        default:\n          // should never be reached\n          (0).should.equal(1);\n        }\n      }\n      for (let testEdge of graph2.edges) {\n        switch (testEdge.id) {\n        case edge1.id:\n          (testEdge).should.be.instanceof(Edge);\n          (testEdge.startNode.id).should.equal(node1.id);\n          (testEdge.destNode.id).should.equal(node2.id);\n          break;\n        case edge2.id:\n          (testEdge).should.be.instanceof(Edge);\n          (testEdge.startNode.id).should.equal(node1.id);\n          (testEdge.destNode.id).should.equal(node3.id);\n          break;\n        default:\n          // should never be reached\n          (0).should.equal(1);\n        }\n      }\n    });\n  });\n});\n"
  },
  {
    "__docId__": 938,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe159",
    "testId": 159,
    "memberof": "test/serialize-test.js",
    "testDepth": 0,
    "longname": "test/serialize-test.js~describe159",
    "access": null,
    "description": "Serializer",
    "lineNumber": 15
  },
  {
    "__docId__": 939,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe160",
    "testId": 160,
    "memberof": "test/serialize-test.js~describe159",
    "testDepth": 1,
    "longname": "test/serialize-test.js~describe159.describe160",
    "access": null,
    "description": "#constructor",
    "lineNumber": 16
  },
  {
    "__docId__": 940,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it161",
    "testId": 161,
    "memberof": "test/serialize-test.js~describe159.describe160",
    "testDepth": 2,
    "longname": "test/serialize-test.js~describe159.describe160.it161",
    "access": null,
    "description": "creates instance of Serializer",
    "lineNumber": 17
  },
  {
    "__docId__": 941,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe162",
    "testId": 162,
    "memberof": "test/serialize-test.js~describe159",
    "testDepth": 1,
    "longname": "test/serialize-test.js~describe159.describe162",
    "access": null,
    "description": "#emptyGraph",
    "lineNumber": 24
  },
  {
    "__docId__": 942,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it163",
    "testId": 163,
    "memberof": "test/serialize-test.js~describe159.describe162",
    "testDepth": 2,
    "longname": "test/serialize-test.js~describe159.describe162.it163",
    "access": null,
    "description": "should create valid graph obj export",
    "lineNumber": 25
  },
  {
    "__docId__": 943,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it164",
    "testId": 164,
    "memberof": "test/serialize-test.js~describe159.describe162",
    "testDepth": 2,
    "longname": "test/serialize-test.js~describe159.describe162.it164",
    "access": null,
    "description": "should create valid graph obj import",
    "lineNumber": 36
  },
  {
    "__docId__": 944,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it165",
    "testId": 165,
    "memberof": "test/serialize-test.js~describe159.describe162",
    "testDepth": 2,
    "longname": "test/serialize-test.js~describe159.describe162.it165",
    "access": null,
    "description": "should fail cleanly on importing malformed input",
    "lineNumber": 49
  },
  {
    "__docId__": 945,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe166",
    "testId": 166,
    "memberof": "test/serialize-test.js~describe159",
    "testDepth": 1,
    "longname": "test/serialize-test.js~describe159.describe166",
    "access": null,
    "description": "#populatedGraph",
    "lineNumber": 66
  },
  {
    "__docId__": 946,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it167",
    "testId": 167,
    "memberof": "test/serialize-test.js~describe159.describe166",
    "testDepth": 2,
    "longname": "test/serialize-test.js~describe159.describe166.it167",
    "access": null,
    "description": "should create valid graph obj export",
    "lineNumber": 67
  },
  {
    "__docId__": 947,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it168",
    "testId": 168,
    "memberof": "test/serialize-test.js~describe159.describe166",
    "testDepth": 2,
    "longname": "test/serialize-test.js~describe159.describe166.it168",
    "access": null,
    "description": "should create valid graph obj import",
    "lineNumber": 91
  },
  {
    "__docId__": 948,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it169",
    "testId": 169,
    "memberof": "test/serialize-test.js~describe159.describe166",
    "testDepth": 2,
    "longname": "test/serialize-test.js~describe159.describe166.it169",
    "access": null,
    "description": "should create valid graph obj import",
    "lineNumber": 124
  },
  {
    "__docId__": 949,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/stack-test.js",
    "memberof": null,
    "longname": "test/stack-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import chai from 'chai';\r\nlet should = chai.should();\r\n\r\nimport Stack from '../src/js/util/stack';\r\n\r\ndescribe('Stack', () => {\r\n  describe('#constructor', () => {\r\n    it('creates instance of Stack', () => {\r\n      (new Stack()).should.be.instanceof(Stack);\r\n    });\r\n  });\r\n\r\n  describe('#size', () => {\r\n    it('should be 0 for empty stack', () => {\r\n      let stack = new Stack();\r\n      (stack.size).should.be.equal(0);\r\n    });\r\n\r\n    it('should increment for each push', () => {\r\n      let stack = new Stack();\r\n      stack.push('test');\r\n      (stack.size).should.be.equal(1);\r\n      stack.push('test');\r\n      (stack.size).should.be.equal(2);\r\n    });\r\n\r\n    it('should decrement for each pop', () => {\r\n      let stack = new Stack();\r\n      stack.push('test');\r\n      stack.push('test');\r\n      stack.pop();\r\n      (stack.size).should.be.equal(1);\r\n    });\r\n  });\r\n\r\n  describe('#clear', () => {\r\n    it('should clear the stack', () => {\r\n      let stack = new Stack();\r\n      stack.push('test');\r\n      stack.clear();\r\n      (stack.size).should.be.equal(0);\r\n    });\r\n  });\r\n\r\n  describe('#push', () => {\r\n    it('should add item to stack', () => {\r\n      let stack = new Stack();\r\n      let item = 'test';\r\n      stack.push(item);\r\n      (stack.pop()).should.be.equal(item);\r\n    });\r\n\r\n    it('should add item to top of stack', () => {\r\n      let stack = new Stack();\r\n      let item1 = 1;\r\n      let item2 = 2;\r\n      stack.push(item1);\r\n      stack.push(item2);\r\n      (stack.pop()).should.be.equal(item2);\r\n      (stack.pop()).should.be.equal(item1);\r\n    });\r\n\r\n    it('should throw error when adding null', () => {\r\n      let stack = new Stack();\r\n      (function () {\r\n        stack.push(null);\r\n      }).should.throw(Error);\r\n    });\r\n\r\n    it('should throw error when adding undefined', () => {\r\n      let stack = new Stack();\r\n      (function () {\r\n        stack.push();\r\n      }).should.throw(Error);\r\n    });\r\n  });\r\n\r\n  describe('#pop', () => {\r\n    it('should return null for empty stack', () => {\r\n      let stack = new Stack();\r\n      should.not.exist(stack.pop());\r\n    });\r\n\r\n    it('should return the item on top of stack', () => {\r\n      let stack = new Stack();\r\n      let item1 = 1;\r\n      let item2 = 2;\r\n      stack.push(item1);\r\n      stack.push(item2);\r\n      (stack.pop()).should.be.equal(item2);\r\n    });\r\n\r\n    it('should remove the top item in stack', () => {\r\n      let stack = new Stack();\r\n      let item1 = 1;\r\n      let item2 = 2;\r\n      stack.push(item1);\r\n      stack.push(item2);\r\n      stack.pop();\r\n      (stack.size).should.be.equal(1);\r\n    });\r\n  });\r\n\r\n  describe('#peek', () => {\r\n    it('should return null for empty stack', () => {\r\n      let stack = new Stack();\r\n      should.not.exist(stack.peek());\r\n    });\r\n\r\n    it('should return the item on top of stack', () => {\r\n      let stack = new Stack();\r\n      let item1 = 1;\r\n      let item2 = 2;\r\n      stack.push(item1);\r\n      stack.push(item2);\r\n      (stack.peek()).should.be.equal(item2);\r\n    });\r\n\r\n    it('should not remove item from stack', () => {\r\n      let stack = new Stack();\r\n      let item1 = 1;\r\n      let item2 = 2;\r\n      stack.push(item1);\r\n      stack.push(item2);\r\n      stack.peek();\r\n      (stack.size).should.be.equal(2);\r\n    });\r\n  });\r\n\r\n  describe('#has', () => {\r\n    it('should throw error when checking null', () => {\r\n      let stack = new Stack();\r\n      (function () {\r\n        stack.has(null);\r\n      }).should.throw(Error);\r\n    });\r\n\r\n    it('should throw error when checking undefined', () => {\r\n      let stack = new Stack();\r\n      (function () {\r\n        stack.has();\r\n      }).should.throw(Error);\r\n    });\r\n\r\n    it('should return true if item is in stack', () => {\r\n      let stack = new Stack();\r\n      stack.push('test');\r\n      (stack.has('test')).should.be.true;\r\n    });\r\n\r\n    it('should return false if item is not in stack', () => {\r\n      let stack = new Stack();\r\n      stack.push('test');\r\n      (stack.has('testtest')).should.be.false;\r\n    });\r\n  });\r\n\r\n  describe('#forEach', () => {\r\n    it('should iterate through all items', () => {\r\n      let stack = new Stack();\r\n      let item1 = 1;\r\n      let item2 = 2;\r\n      let item3 = 3;\r\n      stack.push(item1);\r\n      stack.push(item2);\r\n      stack.push(item3);\r\n\r\n      let order = [];\r\n      stack.forEach((item) => {\r\n        order.push(item);\r\n      });\r\n\r\n      (order.indexOf(item1)).should.be.at.least(0);\r\n      (order.indexOf(item1)).should.be.at.least(0);\r\n      (order.indexOf(item1)).should.be.at.least(0);\r\n    });\r\n\r\n    it('should stop if callback returns false', () => {\r\n      let stack = new Stack();\r\n      let item1 = 1;\r\n      let item2 = 2;\r\n      let item3 = 3;\r\n      stack.push(item1);\r\n      stack.push(item2);\r\n      stack.push(item3);\r\n\r\n      let order = [];\r\n      stack.forEach((item) => {\r\n        if (item === item2) {\r\n          return false;\r\n        }\r\n        order.push(item);\r\n        return true;\r\n      });\r\n\r\n      (order.length).should.be.equal(1);\r\n    });\r\n\r\n    it('should iterate in order starting from the top of the stack', () => {\r\n      let stack = new Stack();\r\n      let item1 = 1;\r\n      let item2 = 2;\r\n      let item3 = 3;\r\n      stack.push(item1);\r\n      stack.push(item2);\r\n      stack.push(item3);\r\n\r\n      let order = [];\r\n      stack.forEach((item) => {\r\n        order.push(item);\r\n      });\r\n\r\n      (order[0]).should.be.equal(item3);\r\n      (order[1]).should.be.equal(item2);\r\n      (order[2]).should.be.equal(item1);\r\n    });\r\n  });\r\n});\r\n"
  },
  {
    "__docId__": 950,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe170",
    "testId": 170,
    "memberof": "test/stack-test.js",
    "testDepth": 0,
    "longname": "test/stack-test.js~describe170",
    "access": null,
    "description": "Stack",
    "lineNumber": 6
  },
  {
    "__docId__": 951,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe171",
    "testId": 171,
    "memberof": "test/stack-test.js~describe170",
    "testDepth": 1,
    "longname": "test/stack-test.js~describe170.describe171",
    "access": null,
    "description": "#constructor",
    "lineNumber": 7
  },
  {
    "__docId__": 952,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it172",
    "testId": 172,
    "memberof": "test/stack-test.js~describe170.describe171",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe171.it172",
    "access": null,
    "description": "creates instance of Stack",
    "lineNumber": 8
  },
  {
    "__docId__": 953,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe173",
    "testId": 173,
    "memberof": "test/stack-test.js~describe170",
    "testDepth": 1,
    "longname": "test/stack-test.js~describe170.describe173",
    "access": null,
    "description": "#size",
    "lineNumber": 13
  },
  {
    "__docId__": 954,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it174",
    "testId": 174,
    "memberof": "test/stack-test.js~describe170.describe173",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe173.it174",
    "access": null,
    "description": "should be 0 for empty stack",
    "lineNumber": 14
  },
  {
    "__docId__": 955,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it175",
    "testId": 175,
    "memberof": "test/stack-test.js~describe170.describe173",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe173.it175",
    "access": null,
    "description": "should increment for each push",
    "lineNumber": 19
  },
  {
    "__docId__": 956,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it176",
    "testId": 176,
    "memberof": "test/stack-test.js~describe170.describe173",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe173.it176",
    "access": null,
    "description": "should decrement for each pop",
    "lineNumber": 27
  },
  {
    "__docId__": 957,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe177",
    "testId": 177,
    "memberof": "test/stack-test.js~describe170",
    "testDepth": 1,
    "longname": "test/stack-test.js~describe170.describe177",
    "access": null,
    "description": "#clear",
    "lineNumber": 36
  },
  {
    "__docId__": 958,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it178",
    "testId": 178,
    "memberof": "test/stack-test.js~describe170.describe177",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe177.it178",
    "access": null,
    "description": "should clear the stack",
    "lineNumber": 37
  },
  {
    "__docId__": 959,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe179",
    "testId": 179,
    "memberof": "test/stack-test.js~describe170",
    "testDepth": 1,
    "longname": "test/stack-test.js~describe170.describe179",
    "access": null,
    "description": "#push",
    "lineNumber": 45
  },
  {
    "__docId__": 960,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it180",
    "testId": 180,
    "memberof": "test/stack-test.js~describe170.describe179",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe179.it180",
    "access": null,
    "description": "should add item to stack",
    "lineNumber": 46
  },
  {
    "__docId__": 961,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it181",
    "testId": 181,
    "memberof": "test/stack-test.js~describe170.describe179",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe179.it181",
    "access": null,
    "description": "should add item to top of stack",
    "lineNumber": 53
  },
  {
    "__docId__": 962,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it182",
    "testId": 182,
    "memberof": "test/stack-test.js~describe170.describe179",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe179.it182",
    "access": null,
    "description": "should throw error when adding null",
    "lineNumber": 63
  },
  {
    "__docId__": 963,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it183",
    "testId": 183,
    "memberof": "test/stack-test.js~describe170.describe179",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe179.it183",
    "access": null,
    "description": "should throw error when adding undefined",
    "lineNumber": 70
  },
  {
    "__docId__": 964,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe184",
    "testId": 184,
    "memberof": "test/stack-test.js~describe170",
    "testDepth": 1,
    "longname": "test/stack-test.js~describe170.describe184",
    "access": null,
    "description": "#pop",
    "lineNumber": 78
  },
  {
    "__docId__": 965,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it185",
    "testId": 185,
    "memberof": "test/stack-test.js~describe170.describe184",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe184.it185",
    "access": null,
    "description": "should return null for empty stack",
    "lineNumber": 79
  },
  {
    "__docId__": 966,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it186",
    "testId": 186,
    "memberof": "test/stack-test.js~describe170.describe184",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe184.it186",
    "access": null,
    "description": "should return the item on top of stack",
    "lineNumber": 84
  },
  {
    "__docId__": 967,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it187",
    "testId": 187,
    "memberof": "test/stack-test.js~describe170.describe184",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe184.it187",
    "access": null,
    "description": "should remove the top item in stack",
    "lineNumber": 93
  },
  {
    "__docId__": 968,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe188",
    "testId": 188,
    "memberof": "test/stack-test.js~describe170",
    "testDepth": 1,
    "longname": "test/stack-test.js~describe170.describe188",
    "access": null,
    "description": "#peek",
    "lineNumber": 104
  },
  {
    "__docId__": 969,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it189",
    "testId": 189,
    "memberof": "test/stack-test.js~describe170.describe188",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe188.it189",
    "access": null,
    "description": "should return null for empty stack",
    "lineNumber": 105
  },
  {
    "__docId__": 970,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it190",
    "testId": 190,
    "memberof": "test/stack-test.js~describe170.describe188",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe188.it190",
    "access": null,
    "description": "should return the item on top of stack",
    "lineNumber": 110
  },
  {
    "__docId__": 971,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it191",
    "testId": 191,
    "memberof": "test/stack-test.js~describe170.describe188",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe188.it191",
    "access": null,
    "description": "should not remove item from stack",
    "lineNumber": 119
  },
  {
    "__docId__": 972,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe192",
    "testId": 192,
    "memberof": "test/stack-test.js~describe170",
    "testDepth": 1,
    "longname": "test/stack-test.js~describe170.describe192",
    "access": null,
    "description": "#has",
    "lineNumber": 130
  },
  {
    "__docId__": 973,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it193",
    "testId": 193,
    "memberof": "test/stack-test.js~describe170.describe192",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe192.it193",
    "access": null,
    "description": "should throw error when checking null",
    "lineNumber": 131
  },
  {
    "__docId__": 974,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it194",
    "testId": 194,
    "memberof": "test/stack-test.js~describe170.describe192",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe192.it194",
    "access": null,
    "description": "should throw error when checking undefined",
    "lineNumber": 138
  },
  {
    "__docId__": 975,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it195",
    "testId": 195,
    "memberof": "test/stack-test.js~describe170.describe192",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe192.it195",
    "access": null,
    "description": "should return true if item is in stack",
    "lineNumber": 145
  },
  {
    "__docId__": 976,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it196",
    "testId": 196,
    "memberof": "test/stack-test.js~describe170.describe192",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe192.it196",
    "access": null,
    "description": "should return false if item is not in stack",
    "lineNumber": 151
  },
  {
    "__docId__": 977,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe197",
    "testId": 197,
    "memberof": "test/stack-test.js~describe170",
    "testDepth": 1,
    "longname": "test/stack-test.js~describe170.describe197",
    "access": null,
    "description": "#forEach",
    "lineNumber": 158
  },
  {
    "__docId__": 978,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it198",
    "testId": 198,
    "memberof": "test/stack-test.js~describe170.describe197",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe197.it198",
    "access": null,
    "description": "should iterate through all items",
    "lineNumber": 159
  },
  {
    "__docId__": 979,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it199",
    "testId": 199,
    "memberof": "test/stack-test.js~describe170.describe197",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe197.it199",
    "access": null,
    "description": "should stop if callback returns false",
    "lineNumber": 178
  },
  {
    "__docId__": 980,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it200",
    "testId": 200,
    "memberof": "test/stack-test.js~describe170.describe197",
    "testDepth": 2,
    "longname": "test/stack-test.js~describe170.describe197.it200",
    "access": null,
    "description": "should iterate in order starting from the top of the stack",
    "lineNumber": 199
  },
  {
    "__docId__": 981,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/tool/edge-tool-test.js",
    "memberof": null,
    "longname": "test/tool/edge-tool-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import chai from 'chai';\r\nlet should = chai.should();\r\n\r\nimport EdgeTool from '../../src/js/tool/edge-tool';\r\nimport Graph from '../../src/js/data/graph';\r\nimport CircleNode from '../../src/js/data/node/circle-node';\r\nimport SolidEdge from '../../src/js/data/edge/solid-edge';\r\n\r\ndescribe('EdgeTool', () => {\r\n  let edgeTool;\r\n  const x1 = 0;\r\n  const y1 = 0;\r\n  const x2 = 100;\r\n  const y2 = 100;\r\n  const midX = (x1 + x2) / 2;\r\n  const midY = (y1 + y2) / 2;\r\n  let graph;\r\n  let node1;\r\n  let node2;\r\n  let edge;\r\n\r\n  beforeEach(() => {\r\n    edgeTool = new EdgeTool();\r\n    graph = new Graph();\r\n    node1 = new CircleNode(x1, y1);\r\n    node2 = new CircleNode(x2, y2);\r\n    graph.addNode(node1);\r\n    graph.addNode(node2);\r\n    edge = new SolidEdge(node1, node2);\r\n    graph.addEdge(edge);\r\n  });\r\n\r\n  describe('#constructor', () => {\r\n    it('should create instance of EdgeTool', () => {\r\n      edgeTool.should.be.instanceOf(EdgeTool);\r\n    });\r\n  });\r\n\r\n  describe('#hasModes', () => {\r\n    it('should return true', () => {\r\n      (edgeTool.hasModes()).should.be.true;\r\n    });\r\n  });\r\n\r\n  describe('#selectObject', () => {\r\n    it('should not select edges', () => {\r\n      edgeTool.selectObject(null, graph, edge, midX, midY);\r\n      should.not.exist(edgeTool.start);\r\n    });\r\n\r\n    it('should store node in \"start\"', () => {\r\n      edgeTool.selectObject(null, graph, node1, x1, y1);\r\n      (edgeTool.start).should.be.equal(node1);\r\n    });\r\n\r\n    it('should add edge if \"start\" node exists', () => {\r\n      edgeTool.selectObject(null, graph, node1, x1, y1);\r\n      edgeTool.selectObject(null, graph, node2, x2, y2);\r\n      (graph.edges.size).should.be.equal(2);\r\n    });\r\n\r\n    it('should reset fields after adding edge', () => {\r\n      edgeTool.selectObject(null, graph, node1, x1, y1);\r\n      edgeTool.selectObject(null, graph, node2, x2, y2);\r\n      should.not.exist(edgeTool.start);\r\n      should.not.exist(edgeTool.dest);\r\n    });\r\n  });\r\n\r\n  describe('#selectNone', () => {\r\n    it('should do nothing if no node is selected', () => {\r\n      edgeTool.selectNone(null, graph, null, null);\r\n      should.not.exist(edgeTool.start);\r\n      should.not.exist(edgeTool.dest);\r\n    });\r\n\r\n    it('should deselect nodes if selected', () => {\r\n      edgeTool.selectObject(null, graph, node1, x1, y1);\r\n      edgeTool.selectNone(null, graph, null, null);\r\n      should.not.exist(edgeTool.start);\r\n      should.not.exist(edgeTool.dest);\r\n    });\r\n  });\r\n\r\n  describe('#cancel', () => {\r\n    it('should cancel action by clearing fields', () => {\r\n      edgeTool.selectObject(null, graph, node1, x1, y1);\r\n      edgeTool.cancel();\r\n      should.not.exist(edgeTool.start);\r\n      should.not.exist(edgeTool.dest);\r\n    });\r\n  });\r\n});\r\n"
  },
  {
    "__docId__": 982,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe201",
    "testId": 201,
    "memberof": "test/tool/edge-tool-test.js",
    "testDepth": 0,
    "longname": "test/tool/edge-tool-test.js~describe201",
    "access": null,
    "description": "EdgeTool",
    "lineNumber": 9
  },
  {
    "__docId__": 983,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe202",
    "testId": 202,
    "memberof": "test/tool/edge-tool-test.js~describe201",
    "testDepth": 1,
    "longname": "test/tool/edge-tool-test.js~describe201.describe202",
    "access": null,
    "description": "#constructor",
    "lineNumber": 33
  },
  {
    "__docId__": 984,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it203",
    "testId": 203,
    "memberof": "test/tool/edge-tool-test.js~describe201.describe202",
    "testDepth": 2,
    "longname": "test/tool/edge-tool-test.js~describe201.describe202.it203",
    "access": null,
    "description": "should create instance of EdgeTool",
    "lineNumber": 34
  },
  {
    "__docId__": 985,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe204",
    "testId": 204,
    "memberof": "test/tool/edge-tool-test.js~describe201",
    "testDepth": 1,
    "longname": "test/tool/edge-tool-test.js~describe201.describe204",
    "access": null,
    "description": "#hasModes",
    "lineNumber": 39
  },
  {
    "__docId__": 986,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it205",
    "testId": 205,
    "memberof": "test/tool/edge-tool-test.js~describe201.describe204",
    "testDepth": 2,
    "longname": "test/tool/edge-tool-test.js~describe201.describe204.it205",
    "access": null,
    "description": "should return true",
    "lineNumber": 40
  },
  {
    "__docId__": 987,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe206",
    "testId": 206,
    "memberof": "test/tool/edge-tool-test.js~describe201",
    "testDepth": 1,
    "longname": "test/tool/edge-tool-test.js~describe201.describe206",
    "access": null,
    "description": "#selectObject",
    "lineNumber": 45
  },
  {
    "__docId__": 988,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it207",
    "testId": 207,
    "memberof": "test/tool/edge-tool-test.js~describe201.describe206",
    "testDepth": 2,
    "longname": "test/tool/edge-tool-test.js~describe201.describe206.it207",
    "access": null,
    "description": "should not select edges",
    "lineNumber": 46
  },
  {
    "__docId__": 989,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it208",
    "testId": 208,
    "memberof": "test/tool/edge-tool-test.js~describe201.describe206",
    "testDepth": 2,
    "longname": "test/tool/edge-tool-test.js~describe201.describe206.it208",
    "access": null,
    "description": "should store node in \"start\"",
    "lineNumber": 51
  },
  {
    "__docId__": 990,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it209",
    "testId": 209,
    "memberof": "test/tool/edge-tool-test.js~describe201.describe206",
    "testDepth": 2,
    "longname": "test/tool/edge-tool-test.js~describe201.describe206.it209",
    "access": null,
    "description": "should add edge if \"start\" node exists",
    "lineNumber": 56
  },
  {
    "__docId__": 991,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it210",
    "testId": 210,
    "memberof": "test/tool/edge-tool-test.js~describe201.describe206",
    "testDepth": 2,
    "longname": "test/tool/edge-tool-test.js~describe201.describe206.it210",
    "access": null,
    "description": "should reset fields after adding edge",
    "lineNumber": 62
  },
  {
    "__docId__": 992,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe211",
    "testId": 211,
    "memberof": "test/tool/edge-tool-test.js~describe201",
    "testDepth": 1,
    "longname": "test/tool/edge-tool-test.js~describe201.describe211",
    "access": null,
    "description": "#selectNone",
    "lineNumber": 70
  },
  {
    "__docId__": 993,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it212",
    "testId": 212,
    "memberof": "test/tool/edge-tool-test.js~describe201.describe211",
    "testDepth": 2,
    "longname": "test/tool/edge-tool-test.js~describe201.describe211.it212",
    "access": null,
    "description": "should do nothing if no node is selected",
    "lineNumber": 71
  },
  {
    "__docId__": 994,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it213",
    "testId": 213,
    "memberof": "test/tool/edge-tool-test.js~describe201.describe211",
    "testDepth": 2,
    "longname": "test/tool/edge-tool-test.js~describe201.describe211.it213",
    "access": null,
    "description": "should deselect nodes if selected",
    "lineNumber": 77
  },
  {
    "__docId__": 995,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe214",
    "testId": 214,
    "memberof": "test/tool/edge-tool-test.js~describe201",
    "testDepth": 1,
    "longname": "test/tool/edge-tool-test.js~describe201.describe214",
    "access": null,
    "description": "#cancel",
    "lineNumber": 85
  },
  {
    "__docId__": 996,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it215",
    "testId": 215,
    "memberof": "test/tool/edge-tool-test.js~describe201.describe214",
    "testDepth": 2,
    "longname": "test/tool/edge-tool-test.js~describe201.describe214.it215",
    "access": null,
    "description": "should cancel action by clearing fields",
    "lineNumber": 86
  },
  {
    "__docId__": 997,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/tool/erase-tool-test.js",
    "memberof": null,
    "longname": "test/tool/erase-tool-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import chai from 'chai';\r\nchai.should();\r\n\r\nimport EraseTool from '../../src/js/tool/erase-tool';\r\nimport Graph from '../../src/js/data/graph';\r\nimport CircleNode from '../../src/js/data/node/circle-node';\r\nimport SolidEdge from '../../src/js/data/edge/solid-edge';\r\n\r\ndescribe('EraseTool', () => {\r\n  let eraseTool;\r\n\r\n  beforeEach(() => {\r\n    eraseTool = new EraseTool();\r\n  });\r\n\r\n  describe('#constructor', () => {\r\n    it('should create instance of EraseTool', () => {\r\n      eraseTool.should.be.instanceOf(EraseTool);\r\n    });\r\n  });\r\n\r\n  describe('#preSelectObject', () => {\r\n    it('should return true', () => {\r\n      (eraseTool.preSelectObject()).should.be.true;\r\n    });\r\n  });\r\n\r\n  describe('#preDragObject', () => {\r\n    it('should return false', () => {\r\n      (eraseTool.preDragObject()).should.be.false;\r\n    });\r\n  });\r\n\r\n  describe('#selectObject', () => {\r\n    let graph;\r\n    let node1;\r\n    let node2;\r\n    let edge;\r\n\r\n    beforeEach(() => {\r\n      graph = new Graph();\r\n      node1 = new CircleNode(0, 0);\r\n      node2 = new CircleNode(100, 100);\r\n      graph.addNode(node1);\r\n      graph.addNode(node2);\r\n      edge = new SolidEdge(node1, node2);\r\n      graph.addEdge(edge);\r\n    });\r\n\r\n    it('should remove nodes', () => {\r\n      eraseTool.selectObject(null, graph, node1, 0, 0);\r\n      (graph.nodes.has(node1)).should.be.false;\r\n    });\r\n\r\n    it('should remove nodes and the edges connected to that node', () => {\r\n      eraseTool.selectObject(null, graph, node1, 0, 0);\r\n      (graph.nodes.has(edge)).should.be.false;\r\n    });\r\n\r\n    it('should remove edges', () => {\r\n      eraseTool.selectObject(null, graph, edge, 0, 0);\r\n      (graph.edges.has(edge)).should.be.false;\r\n    });\r\n\r\n    it('should not handle other types of objects', () => {\r\n      eraseTool.selectObject(null, graph, null, 0, 0);\r\n      (graph.nodes.has(node1)).should.be.true;\r\n      (graph.nodes.has(node2)).should.be.true;\r\n      (graph.edges.has(edge)).should.be.true;\r\n    });\r\n  });\r\n\r\n  describe('#dragOverObject', () => {\r\n    let graph;\r\n    let node1;\r\n    let node2;\r\n    let edge;\r\n\r\n    beforeEach(() => {\r\n      graph = new Graph();\r\n      node1 = new CircleNode(0, 0);\r\n      node2 = new CircleNode(100, 100);\r\n      graph.addNode(node1);\r\n      graph.addNode(node2);\r\n      edge = new SolidEdge(node1, node2);\r\n      graph.addEdge(edge);\r\n    });\r\n\r\n    it('should remove nodes', () => {\r\n      eraseTool.dragOverObject(null, graph, node1, 0, 0);\r\n      (graph.nodes.has(node1)).should.be.false;\r\n    });\r\n\r\n    it('should remove nodes and the edges connected to that node', () => {\r\n      eraseTool.dragOverObject(null, graph, node1, 0, 0);\r\n      (graph.nodes.has(edge)).should.be.false;\r\n    });\r\n\r\n    it('should remove edges', () => {\r\n      eraseTool.dragOverObject(null, graph, edge, 0, 0);\r\n      (graph.edges.has(edge)).should.be.false;\r\n    });\r\n\r\n    it('should not handle other types of objects', () => {\r\n      eraseTool.dragOverObject(null, graph, null, 0, 0);\r\n      (graph.nodes.has(node1)).should.be.true;\r\n      (graph.nodes.has(node2)).should.be.true;\r\n      (graph.edges.has(edge)).should.be.true;\r\n    });\r\n  });\r\n});\r\n"
  },
  {
    "__docId__": 998,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe216",
    "testId": 216,
    "memberof": "test/tool/erase-tool-test.js",
    "testDepth": 0,
    "longname": "test/tool/erase-tool-test.js~describe216",
    "access": null,
    "description": "EraseTool",
    "lineNumber": 9
  },
  {
    "__docId__": 999,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe217",
    "testId": 217,
    "memberof": "test/tool/erase-tool-test.js~describe216",
    "testDepth": 1,
    "longname": "test/tool/erase-tool-test.js~describe216.describe217",
    "access": null,
    "description": "#constructor",
    "lineNumber": 16
  },
  {
    "__docId__": 1000,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it218",
    "testId": 218,
    "memberof": "test/tool/erase-tool-test.js~describe216.describe217",
    "testDepth": 2,
    "longname": "test/tool/erase-tool-test.js~describe216.describe217.it218",
    "access": null,
    "description": "should create instance of EraseTool",
    "lineNumber": 17
  },
  {
    "__docId__": 1001,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe219",
    "testId": 219,
    "memberof": "test/tool/erase-tool-test.js~describe216",
    "testDepth": 1,
    "longname": "test/tool/erase-tool-test.js~describe216.describe219",
    "access": null,
    "description": "#preSelectObject",
    "lineNumber": 22
  },
  {
    "__docId__": 1002,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it220",
    "testId": 220,
    "memberof": "test/tool/erase-tool-test.js~describe216.describe219",
    "testDepth": 2,
    "longname": "test/tool/erase-tool-test.js~describe216.describe219.it220",
    "access": null,
    "description": "should return true",
    "lineNumber": 23
  },
  {
    "__docId__": 1003,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe221",
    "testId": 221,
    "memberof": "test/tool/erase-tool-test.js~describe216",
    "testDepth": 1,
    "longname": "test/tool/erase-tool-test.js~describe216.describe221",
    "access": null,
    "description": "#preDragObject",
    "lineNumber": 28
  },
  {
    "__docId__": 1004,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it222",
    "testId": 222,
    "memberof": "test/tool/erase-tool-test.js~describe216.describe221",
    "testDepth": 2,
    "longname": "test/tool/erase-tool-test.js~describe216.describe221.it222",
    "access": null,
    "description": "should return false",
    "lineNumber": 29
  },
  {
    "__docId__": 1005,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe223",
    "testId": 223,
    "memberof": "test/tool/erase-tool-test.js~describe216",
    "testDepth": 1,
    "longname": "test/tool/erase-tool-test.js~describe216.describe223",
    "access": null,
    "description": "#selectObject",
    "lineNumber": 34
  },
  {
    "__docId__": 1006,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it224",
    "testId": 224,
    "memberof": "test/tool/erase-tool-test.js~describe216.describe223",
    "testDepth": 2,
    "longname": "test/tool/erase-tool-test.js~describe216.describe223.it224",
    "access": null,
    "description": "should remove nodes",
    "lineNumber": 50
  },
  {
    "__docId__": 1007,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it225",
    "testId": 225,
    "memberof": "test/tool/erase-tool-test.js~describe216.describe223",
    "testDepth": 2,
    "longname": "test/tool/erase-tool-test.js~describe216.describe223.it225",
    "access": null,
    "description": "should remove nodes and the edges connected to that node",
    "lineNumber": 55
  },
  {
    "__docId__": 1008,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it226",
    "testId": 226,
    "memberof": "test/tool/erase-tool-test.js~describe216.describe223",
    "testDepth": 2,
    "longname": "test/tool/erase-tool-test.js~describe216.describe223.it226",
    "access": null,
    "description": "should remove edges",
    "lineNumber": 60
  },
  {
    "__docId__": 1009,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it227",
    "testId": 227,
    "memberof": "test/tool/erase-tool-test.js~describe216.describe223",
    "testDepth": 2,
    "longname": "test/tool/erase-tool-test.js~describe216.describe223.it227",
    "access": null,
    "description": "should not handle other types of objects",
    "lineNumber": 65
  },
  {
    "__docId__": 1010,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe228",
    "testId": 228,
    "memberof": "test/tool/erase-tool-test.js~describe216",
    "testDepth": 1,
    "longname": "test/tool/erase-tool-test.js~describe216.describe228",
    "access": null,
    "description": "#dragOverObject",
    "lineNumber": 73
  },
  {
    "__docId__": 1011,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it229",
    "testId": 229,
    "memberof": "test/tool/erase-tool-test.js~describe216.describe228",
    "testDepth": 2,
    "longname": "test/tool/erase-tool-test.js~describe216.describe228.it229",
    "access": null,
    "description": "should remove nodes",
    "lineNumber": 89
  },
  {
    "__docId__": 1012,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it230",
    "testId": 230,
    "memberof": "test/tool/erase-tool-test.js~describe216.describe228",
    "testDepth": 2,
    "longname": "test/tool/erase-tool-test.js~describe216.describe228.it230",
    "access": null,
    "description": "should remove nodes and the edges connected to that node",
    "lineNumber": 94
  },
  {
    "__docId__": 1013,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it231",
    "testId": 231,
    "memberof": "test/tool/erase-tool-test.js~describe216.describe228",
    "testDepth": 2,
    "longname": "test/tool/erase-tool-test.js~describe216.describe228.it231",
    "access": null,
    "description": "should remove edges",
    "lineNumber": 99
  },
  {
    "__docId__": 1014,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it232",
    "testId": 232,
    "memberof": "test/tool/erase-tool-test.js~describe216.describe228",
    "testDepth": 2,
    "longname": "test/tool/erase-tool-test.js~describe216.describe228.it232",
    "access": null,
    "description": "should not handle other types of objects",
    "lineNumber": 104
  },
  {
    "__docId__": 1015,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/tool/move-tool-test.js",
    "memberof": null,
    "longname": "test/tool/move-tool-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import chai from 'chai';\r\nchai.should();\r\n\r\nimport { MoveTool } from '../../src/js/tool/move-tool';\r\nimport { Graph } from '../../src/js/data/graph';\r\nimport { CircleNode as Node } from '../../src/js/data/node/circle-node';\r\nimport { SolidEdge } from '../../src/js/data/edge/solid-edge';\r\n\r\ndescribe('MoveTool', () => {\r\n  let moveTool;\r\n  const x1 = 0;\r\n  const y1 = 0;\r\n  const x2 = 1000;\r\n  const y2 = 0;\r\n  const midX = (x1 + x2) / 2;\r\n  const midY = (y1 + y2) / 2;\r\n  let graph;\r\n  let node1;\r\n  let node2;\r\n  let edge;\r\n\r\n  beforeEach(() => {\r\n    moveTool = new MoveTool();\r\n    graph = new Graph();\r\n    node1 = new Node(x1, y1);\r\n    node2 = new Node(x2, y2);\r\n    graph.addNode(node1);\r\n    graph.addNode(node2);\r\n    edge = new SolidEdge(node1, node2);\r\n    graph.addEdge(edge);\r\n  });\r\n\r\n  describe('#constructor', () => {\r\n    it('should create instance of MoveTool', () => {\r\n      moveTool.should.be.instanceOf(MoveTool);\r\n    });\r\n  });\r\n\r\n  describe('#dragObject', () => {\r\n    it('should move node', () => {\r\n      moveTool.preDragObject(null, graph, node2, node2.x, node2.y);\r\n      moveTool.dragObject(null, graph, node2, 1000, 1000);\r\n      (node2.x).should.be.equal(1000);\r\n      (node2.y).should.be.equal(1000);\r\n    });\r\n\r\n    it('should not move edge', () => {\r\n      moveTool.dragObject(null, graph, edge, 1000, 1000);\r\n      (node1.x).should.be.equal(x1);\r\n      (node1.y).should.be.equal(y1);\r\n      (node2.x).should.be.equal(x2);\r\n      (node2.y).should.be.equal(y2);\r\n    });\r\n  });\r\n\r\n  describe('#dropOnObject', () => {\r\n    it('should not allow dropping on other nodes', () => {\r\n      moveTool.preDragObject(null, graph, node1, node1.x, node1.y);\r\n      moveTool.dragObject(null, graph, node1, x2, y2);\r\n      moveTool.dropOnObject(null, graph, node1, node2, x2, y2);\r\n      if (x1 !== x2) {\r\n        (node1.x).should.not.be.equal(x2);\r\n      }\r\n      if (y1 !== y2) {\r\n        (node1.y).should.not.be.equal(y2);\r\n      }\r\n    });\r\n\r\n    it('should move dragged node back to original position on drop failure', () => {\r\n      moveTool.preDragObject(null, graph, node1, node1.x, node1.y);\r\n      moveTool.dragObject(null, graph, node1, x2, y2);\r\n      moveTool.dropOnObject(null, graph, node1, node2, x2, y2);\r\n      (node1.x).should.be.equal(x1);\r\n      (node1.y).should.be.equal(y1);\r\n    });\r\n\r\n    it('should ignore collision with edges', () => {\r\n      moveTool.preDragObject(null, graph, node1, node1.x, node1.y);\r\n      moveTool.dragObject(null, graph, node1, midX, midY);\r\n      moveTool.dropOnObject(null, graph, node1, edge, midX, midY);\r\n      (node1.x).should.be.equal(midX);\r\n      (node1.y).should.be.equal(midY);\r\n    });\r\n\r\n    it('should not allow dropping non-node objects', () => {\r\n      moveTool.preDragObject(null, graph, edge, null, null);\r\n      moveTool.dragObject(null, graph, edge, x1, y1);\r\n      moveTool.dropOnObject(null, graph, edge, node1, x1, y1);\r\n      (node1.x).should.be.equal(x1);\r\n      (node1.y).should.be.equal(y1);\r\n      (node2.x).should.be.equal(x2);\r\n      (node2.y).should.be.equal(y2);\r\n    });\r\n  });\r\n\r\n  describe('#dropOnNone', () => {\r\n    it('should not allow collision with node', () => {\r\n      moveTool.preDragObject(null, graph, node1, node1.x, node1.y);\r\n      let x = node2.x - node2.radius - node1.radius / 2;\r\n      let y = node2.y;\r\n      moveTool.dragObject(null, graph, node1, x, y);\r\n      moveTool.dropOnNone(null, graph, node1, x, y);\r\n      (node1.x).should.be.equal(x1);\r\n      (node1.y).should.be.equal(y1);\r\n      (node2.x).should.be.equal(x2);\r\n      (node2.y).should.be.equal(y2);\r\n    });\r\n\r\n    it('should ignore collision with edges', () => {\r\n      let node3 = new Node(0, -100);\r\n      graph.addNode(node3);\r\n      moveTool.preDragObject(null, graph, node3, node3.x, node3.y);\r\n      moveTool.dragObject(null, graph, node3, midX, midY + 1);\r\n      moveTool.dropOnNone(null, graph, node3, midX, midY + 1);\r\n\r\n      (node3.x).should.be.equal(midX);\r\n      (node3.y).should.be.equal(midY + 1);\r\n    });\r\n  });\r\n});\r\n"
  },
  {
    "__docId__": 1016,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe233",
    "testId": 233,
    "memberof": "test/tool/move-tool-test.js",
    "testDepth": 0,
    "longname": "test/tool/move-tool-test.js~describe233",
    "access": null,
    "description": "MoveTool",
    "lineNumber": 9
  },
  {
    "__docId__": 1017,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe234",
    "testId": 234,
    "memberof": "test/tool/move-tool-test.js~describe233",
    "testDepth": 1,
    "longname": "test/tool/move-tool-test.js~describe233.describe234",
    "access": null,
    "description": "#constructor",
    "lineNumber": 33
  },
  {
    "__docId__": 1018,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it235",
    "testId": 235,
    "memberof": "test/tool/move-tool-test.js~describe233.describe234",
    "testDepth": 2,
    "longname": "test/tool/move-tool-test.js~describe233.describe234.it235",
    "access": null,
    "description": "should create instance of MoveTool",
    "lineNumber": 34
  },
  {
    "__docId__": 1019,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe236",
    "testId": 236,
    "memberof": "test/tool/move-tool-test.js~describe233",
    "testDepth": 1,
    "longname": "test/tool/move-tool-test.js~describe233.describe236",
    "access": null,
    "description": "#dragObject",
    "lineNumber": 39
  },
  {
    "__docId__": 1020,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it237",
    "testId": 237,
    "memberof": "test/tool/move-tool-test.js~describe233.describe236",
    "testDepth": 2,
    "longname": "test/tool/move-tool-test.js~describe233.describe236.it237",
    "access": null,
    "description": "should move node",
    "lineNumber": 40
  },
  {
    "__docId__": 1021,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it238",
    "testId": 238,
    "memberof": "test/tool/move-tool-test.js~describe233.describe236",
    "testDepth": 2,
    "longname": "test/tool/move-tool-test.js~describe233.describe236.it238",
    "access": null,
    "description": "should not move edge",
    "lineNumber": 47
  },
  {
    "__docId__": 1022,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe239",
    "testId": 239,
    "memberof": "test/tool/move-tool-test.js~describe233",
    "testDepth": 1,
    "longname": "test/tool/move-tool-test.js~describe233.describe239",
    "access": null,
    "description": "#dropOnObject",
    "lineNumber": 56
  },
  {
    "__docId__": 1023,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it240",
    "testId": 240,
    "memberof": "test/tool/move-tool-test.js~describe233.describe239",
    "testDepth": 2,
    "longname": "test/tool/move-tool-test.js~describe233.describe239.it240",
    "access": null,
    "description": "should not allow dropping on other nodes",
    "lineNumber": 57
  },
  {
    "__docId__": 1024,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it241",
    "testId": 241,
    "memberof": "test/tool/move-tool-test.js~describe233.describe239",
    "testDepth": 2,
    "longname": "test/tool/move-tool-test.js~describe233.describe239.it241",
    "access": null,
    "description": "should move dragged node back to original position on drop failure",
    "lineNumber": 69
  },
  {
    "__docId__": 1025,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it242",
    "testId": 242,
    "memberof": "test/tool/move-tool-test.js~describe233.describe239",
    "testDepth": 2,
    "longname": "test/tool/move-tool-test.js~describe233.describe239.it242",
    "access": null,
    "description": "should ignore collision with edges",
    "lineNumber": 77
  },
  {
    "__docId__": 1026,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it243",
    "testId": 243,
    "memberof": "test/tool/move-tool-test.js~describe233.describe239",
    "testDepth": 2,
    "longname": "test/tool/move-tool-test.js~describe233.describe239.it243",
    "access": null,
    "description": "should not allow dropping non-node objects",
    "lineNumber": 85
  },
  {
    "__docId__": 1027,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe244",
    "testId": 244,
    "memberof": "test/tool/move-tool-test.js~describe233",
    "testDepth": 1,
    "longname": "test/tool/move-tool-test.js~describe233.describe244",
    "access": null,
    "description": "#dropOnNone",
    "lineNumber": 96
  },
  {
    "__docId__": 1028,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it245",
    "testId": 245,
    "memberof": "test/tool/move-tool-test.js~describe233.describe244",
    "testDepth": 2,
    "longname": "test/tool/move-tool-test.js~describe233.describe244.it245",
    "access": null,
    "description": "should not allow collision with node",
    "lineNumber": 97
  },
  {
    "__docId__": 1029,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it246",
    "testId": 246,
    "memberof": "test/tool/move-tool-test.js~describe233.describe244",
    "testDepth": 2,
    "longname": "test/tool/move-tool-test.js~describe233.describe244.it246",
    "access": null,
    "description": "should ignore collision with edges",
    "lineNumber": 109
  },
  {
    "__docId__": 1030,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/tool/node-tool-test.js",
    "memberof": null,
    "longname": "test/tool/node-tool-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import chai from 'chai';\nchai.should();\n\nimport NodeTool from '../../src/js/tool/node-tool';\nimport Graph from '../../src/js/data/graph';\nimport CircleNode from '../../src/js/data/node/circle-node';\nimport SolidEdge from '../../src/js/data/edge/solid-edge';\n\ndescribe('NodeTool', () => {\n  let nodeTool;\n  let graph;\n\n  beforeEach(() => {\n    nodeTool = new NodeTool();\n    graph = new Graph();\n  });\n\n  describe('#constructor', () => {\n    it('should create instance of NodeTool', () => {\n      nodeTool.should.be.instanceOf(NodeTool);\n    });\n  });\n\n  describe('#hasModes', () => {\n    it('should return true', () => {\n      (nodeTool.hasModes()).should.be.true;\n    });\n  });\n\n  describe('#selectObject', () => {\n    it('should not add a node on another node', () => {\n      let node = new CircleNode(0, 0);\n      graph.addNode(node);\n      nodeTool.selectObject(null, graph, node, 0, 0);\n\n      (graph.nodes.size).should.be.equal(1);\n    });\n\n    it('should add node if object is an edge', () => {\n      let node1 = new CircleNode(0, 0);\n      let node2 = new CircleNode(node1.radius * 6, 0);\n      node2.radius = node1.radius;\n      graph.addNode(node1);\n      graph.addNode(node2);\n\n      let edge = new SolidEdge(node1, node2);\n      graph.addEdge(edge);\n\n      nodeTool.selectObject(null, graph, edge, node1.radius * 3, 0);\n      (graph.nodes.size).should.be.equal(3);\n    });\n  });\n\n  describe('#selectNone', () => {\n    it('should add node if no collisions detected', () => {\n      nodeTool.selectNone(null, graph, 0, 0);\n      (graph.nodes.size).should.be.equal(1);\n    });\n\n    it('should not add node if colliding with another node', () => {\n      let node = new CircleNode(0, 0);\n      let radius = node.radius;\n      graph.addNode(node);\n\n      nodeTool.selectNone(null, graph, radius + 1, 0);\n      (graph.nodes.size).should.be.equal(1);\n    });\n  });\n\n  // should do same thing as selectNone\n  describe('#dropOnNone', () => {\n    it('should add node if no collisions detected', () => {\n      nodeTool.dropOnNone(null, graph, null, 0, 0);\n      (graph.nodes.size).should.be.equal(1);\n    });\n\n    it('should not add node if colliding with another node', () => {\n      let node = new CircleNode(0, 0);\n      let radius = node.radius;\n      graph.addNode(node);\n\n      nodeTool.dropOnNone(null, graph, null, radius + 1, 0);\n      (graph.nodes.size).should.be.equal(1);\n    });\n  });\n});\n"
  },
  {
    "__docId__": 1031,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe247",
    "testId": 247,
    "memberof": "test/tool/node-tool-test.js",
    "testDepth": 0,
    "longname": "test/tool/node-tool-test.js~describe247",
    "access": null,
    "description": "NodeTool",
    "lineNumber": 9
  },
  {
    "__docId__": 1032,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe248",
    "testId": 248,
    "memberof": "test/tool/node-tool-test.js~describe247",
    "testDepth": 1,
    "longname": "test/tool/node-tool-test.js~describe247.describe248",
    "access": null,
    "description": "#constructor",
    "lineNumber": 18
  },
  {
    "__docId__": 1033,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it249",
    "testId": 249,
    "memberof": "test/tool/node-tool-test.js~describe247.describe248",
    "testDepth": 2,
    "longname": "test/tool/node-tool-test.js~describe247.describe248.it249",
    "access": null,
    "description": "should create instance of NodeTool",
    "lineNumber": 19
  },
  {
    "__docId__": 1034,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe250",
    "testId": 250,
    "memberof": "test/tool/node-tool-test.js~describe247",
    "testDepth": 1,
    "longname": "test/tool/node-tool-test.js~describe247.describe250",
    "access": null,
    "description": "#hasModes",
    "lineNumber": 24
  },
  {
    "__docId__": 1035,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it251",
    "testId": 251,
    "memberof": "test/tool/node-tool-test.js~describe247.describe250",
    "testDepth": 2,
    "longname": "test/tool/node-tool-test.js~describe247.describe250.it251",
    "access": null,
    "description": "should return true",
    "lineNumber": 25
  },
  {
    "__docId__": 1036,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe252",
    "testId": 252,
    "memberof": "test/tool/node-tool-test.js~describe247",
    "testDepth": 1,
    "longname": "test/tool/node-tool-test.js~describe247.describe252",
    "access": null,
    "description": "#selectObject",
    "lineNumber": 30
  },
  {
    "__docId__": 1037,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it253",
    "testId": 253,
    "memberof": "test/tool/node-tool-test.js~describe247.describe252",
    "testDepth": 2,
    "longname": "test/tool/node-tool-test.js~describe247.describe252.it253",
    "access": null,
    "description": "should not add a node on another node",
    "lineNumber": 31
  },
  {
    "__docId__": 1038,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it254",
    "testId": 254,
    "memberof": "test/tool/node-tool-test.js~describe247.describe252",
    "testDepth": 2,
    "longname": "test/tool/node-tool-test.js~describe247.describe252.it254",
    "access": null,
    "description": "should add node if object is an edge",
    "lineNumber": 39
  },
  {
    "__docId__": 1039,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe255",
    "testId": 255,
    "memberof": "test/tool/node-tool-test.js~describe247",
    "testDepth": 1,
    "longname": "test/tool/node-tool-test.js~describe247.describe255",
    "access": null,
    "description": "#selectNone",
    "lineNumber": 54
  },
  {
    "__docId__": 1040,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it256",
    "testId": 256,
    "memberof": "test/tool/node-tool-test.js~describe247.describe255",
    "testDepth": 2,
    "longname": "test/tool/node-tool-test.js~describe247.describe255.it256",
    "access": null,
    "description": "should add node if no collisions detected",
    "lineNumber": 55
  },
  {
    "__docId__": 1041,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it257",
    "testId": 257,
    "memberof": "test/tool/node-tool-test.js~describe247.describe255",
    "testDepth": 2,
    "longname": "test/tool/node-tool-test.js~describe247.describe255.it257",
    "access": null,
    "description": "should not add node if colliding with another node",
    "lineNumber": 60
  },
  {
    "__docId__": 1042,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe258",
    "testId": 258,
    "memberof": "test/tool/node-tool-test.js~describe247",
    "testDepth": 1,
    "longname": "test/tool/node-tool-test.js~describe247.describe258",
    "access": null,
    "description": "#dropOnNone",
    "lineNumber": 71
  },
  {
    "__docId__": 1043,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it259",
    "testId": 259,
    "memberof": "test/tool/node-tool-test.js~describe247.describe258",
    "testDepth": 2,
    "longname": "test/tool/node-tool-test.js~describe247.describe258.it259",
    "access": null,
    "description": "should add node if no collisions detected",
    "lineNumber": 72
  },
  {
    "__docId__": 1044,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it260",
    "testId": 260,
    "memberof": "test/tool/node-tool-test.js~describe247.describe258",
    "testDepth": 2,
    "longname": "test/tool/node-tool-test.js~describe247.describe258.it260",
    "access": null,
    "description": "should not add node if colliding with another node",
    "lineNumber": 77
  },
  {
    "__docId__": 1045,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/tool/tool-test.js",
    "memberof": null,
    "longname": "test/tool/tool-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/* eslint-disable no-loop-func */\n\nimport chai from 'chai';\nchai.should();\n\nimport Tool from '../../src/js/tool/tool';\n\ndescribe('Tool', () => {\n  let tool;\n\n  beforeEach(() => {\n    tool = new Tool();\n  });\n\n  describe('#constructor', () => {\n    it('should create instance of Tool', () => {\n      tool.should.be.instanceOf(Tool);\n    });\n  });\n\n  describe('#hasModes', () => {\n    it('should return false', () => {\n      (tool.hasModes()).should.be.false;\n    });\n  });\n\n  describe('#hasInputs', () => {\n    it('should return false', () => {\n      (tool.hasInputs()).should.be.false;\n    });\n  });\n\n  describe('#preSelectObject', () => {\n    it('should return true', () => {\n      (tool.preSelectObject()).should.be.true;\n    });\n  });\n\n  describe('#preDragObject', () => {\n    it('should return true', () => {\n      (tool.preDragObject()).should.be.true;\n    });\n  });\n\n  let functions = [\n    'activate',\n    'cancel',\n\n    'selectObject',\n    'dragObject',\n    'dropOnObject',\n    'dragOverObject',\n\n    'abortSelect',\n    'preSelectNone',\n    'preDragNone',\n\n    'selectNone',\n    'dragNone',\n    'dropOnNone'\n  ];\n\n  for (let fn of functions) {\n    describe('#' + fn, () => {\n      it('should be a function', () => {\n        (tool[fn]).should.be.a('function');\n      });\n\n      it('should be callable', () => {\n        (function () {\n          tool[fn]();\n        }).should.not.throw(Error);\n      });\n    });\n  }\n});\n"
  },
  {
    "__docId__": 1046,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe261",
    "testId": 261,
    "memberof": "test/tool/tool-test.js",
    "testDepth": 0,
    "longname": "test/tool/tool-test.js~describe261",
    "access": null,
    "description": "Tool",
    "lineNumber": 8
  },
  {
    "__docId__": 1047,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe262",
    "testId": 262,
    "memberof": "test/tool/tool-test.js~describe261",
    "testDepth": 1,
    "longname": "test/tool/tool-test.js~describe261.describe262",
    "access": null,
    "description": "#constructor",
    "lineNumber": 15
  },
  {
    "__docId__": 1048,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it263",
    "testId": 263,
    "memberof": "test/tool/tool-test.js~describe261.describe262",
    "testDepth": 2,
    "longname": "test/tool/tool-test.js~describe261.describe262.it263",
    "access": null,
    "description": "should create instance of Tool",
    "lineNumber": 16
  },
  {
    "__docId__": 1049,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe264",
    "testId": 264,
    "memberof": "test/tool/tool-test.js~describe261",
    "testDepth": 1,
    "longname": "test/tool/tool-test.js~describe261.describe264",
    "access": null,
    "description": "#hasModes",
    "lineNumber": 21
  },
  {
    "__docId__": 1050,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it265",
    "testId": 265,
    "memberof": "test/tool/tool-test.js~describe261.describe264",
    "testDepth": 2,
    "longname": "test/tool/tool-test.js~describe261.describe264.it265",
    "access": null,
    "description": "should return false",
    "lineNumber": 22
  },
  {
    "__docId__": 1051,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe266",
    "testId": 266,
    "memberof": "test/tool/tool-test.js~describe261",
    "testDepth": 1,
    "longname": "test/tool/tool-test.js~describe261.describe266",
    "access": null,
    "description": "#hasInputs",
    "lineNumber": 27
  },
  {
    "__docId__": 1052,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it267",
    "testId": 267,
    "memberof": "test/tool/tool-test.js~describe261.describe266",
    "testDepth": 2,
    "longname": "test/tool/tool-test.js~describe261.describe266.it267",
    "access": null,
    "description": "should return false",
    "lineNumber": 28
  },
  {
    "__docId__": 1053,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe268",
    "testId": 268,
    "memberof": "test/tool/tool-test.js~describe261",
    "testDepth": 1,
    "longname": "test/tool/tool-test.js~describe261.describe268",
    "access": null,
    "description": "#preSelectObject",
    "lineNumber": 33
  },
  {
    "__docId__": 1054,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it269",
    "testId": 269,
    "memberof": "test/tool/tool-test.js~describe261.describe268",
    "testDepth": 2,
    "longname": "test/tool/tool-test.js~describe261.describe268.it269",
    "access": null,
    "description": "should return true",
    "lineNumber": 34
  },
  {
    "__docId__": 1055,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe270",
    "testId": 270,
    "memberof": "test/tool/tool-test.js~describe261",
    "testDepth": 1,
    "longname": "test/tool/tool-test.js~describe261.describe270",
    "access": null,
    "description": "#preDragObject",
    "lineNumber": 39
  },
  {
    "__docId__": 1056,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it271",
    "testId": 271,
    "memberof": "test/tool/tool-test.js~describe261.describe270",
    "testDepth": 2,
    "longname": "test/tool/tool-test.js~describe261.describe270.it271",
    "access": null,
    "description": "should return true",
    "lineNumber": 40
  },
  {
    "__docId__": 1057,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe272",
    "testId": 272,
    "memberof": "test/tool/tool-test.js~describe261",
    "testDepth": 1,
    "longname": "test/tool/tool-test.js~describe261.describe272",
    "access": null,
    "lineNumber": 64
  },
  {
    "__docId__": 1058,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it273",
    "testId": 273,
    "memberof": "test/tool/tool-test.js~describe261.describe272",
    "testDepth": 2,
    "longname": "test/tool/tool-test.js~describe261.describe272.it273",
    "access": null,
    "description": "should be a function",
    "lineNumber": 65
  },
  {
    "__docId__": 1059,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it274",
    "testId": 274,
    "memberof": "test/tool/tool-test.js~describe261.describe272",
    "testDepth": 2,
    "longname": "test/tool/tool-test.js~describe261.describe272.it274",
    "access": null,
    "description": "should be callable",
    "lineNumber": 69
  },
  {
    "__docId__": 1060,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/util/line-2d-test.js",
    "memberof": null,
    "longname": "test/util/line-2d-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import chai from 'chai';\r\nchai.should();\r\n\r\nimport Point2D from '../../src/js/util/point-2d';\r\nimport Line2D from '../../src/js/util/line-2d';\r\n\r\n/** @test {Line2D} **/\r\ndescribe('Line2D', () => {\r\n  /** @test {Line2D#constructor} **/\r\n  describe('#constructor(a, b)', () => {\r\n    it('creates instance of Line2D', () => {\r\n      (new Line2D()).should.be.instanceof(Line2D);\r\n    });\r\n  });\r\n\r\n  /** @test {Line2D#hasPoint} **/\r\n  describe('#hasPoint(c)', () => {\r\n    let a;\r\n    let b;\r\n    let line;\r\n\r\n    beforeEach(() => {\r\n      a = new Point2D(0, 0);\r\n      b = new Point2D(10, 0);\r\n      line = new Line2D(a, b);\r\n    });\r\n\r\n    it('should return true if point is between a and b', () => {\r\n      let c = new Point2D(5, 0);\r\n      (line.hasPoint(c)).should.be.true;\r\n    });\r\n\r\n    it('should return true if point is on the line but not between a and b', () => {\r\n      let c = new Point2D(20, 0);\r\n      (line.hasPoint(c)).should.be.true;\r\n    });\r\n\r\n    it('should return true if point has same coordinates as a', () => {\r\n      let c = new Point2D(0, 0);\r\n      (line.hasPoint(c)).should.be.true;\r\n    });\r\n\r\n    it('should return true if point has same coordinates as b', () => {\r\n      let c = new Point2D(10, 0);\r\n      (line.hasPoint(c)).should.be.true;\r\n    });\r\n\r\n    it('should return false if point is not on the line', () => {\r\n      let c = new Point2D(0, 10);\r\n      (line.hasPoint(c)).should.be.false;\r\n    });\r\n  });\r\n});\r\n"
  },
  {
    "__docId__": 1061,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe275",
    "testId": 275,
    "memberof": "test/util/line-2d-test.js",
    "testDepth": 0,
    "longname": "test/util/line-2d-test.js~describe275",
    "access": null,
    "description": "Line2D",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Line2D} *"
      }
    ],
    "testTargets": [
      "Line2D"
    ]
  },
  {
    "__docId__": 1062,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe276",
    "testId": 276,
    "memberof": "test/util/line-2d-test.js~describe275",
    "testDepth": 1,
    "longname": "test/util/line-2d-test.js~describe275.describe276",
    "access": null,
    "description": "#constructor(a, b)",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Line2D#constructor} *"
      }
    ],
    "testTargets": [
      "Line2D#constructor"
    ]
  },
  {
    "__docId__": 1063,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it277",
    "testId": 277,
    "memberof": "test/util/line-2d-test.js~describe275.describe276",
    "testDepth": 2,
    "longname": "test/util/line-2d-test.js~describe275.describe276.it277",
    "access": null,
    "description": "creates instance of Line2D",
    "lineNumber": 11
  },
  {
    "__docId__": 1064,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe278",
    "testId": 278,
    "memberof": "test/util/line-2d-test.js~describe275",
    "testDepth": 1,
    "longname": "test/util/line-2d-test.js~describe275.describe278",
    "access": null,
    "description": "#hasPoint(c)",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Line2D#hasPoint} *"
      }
    ],
    "testTargets": [
      "Line2D#hasPoint"
    ]
  },
  {
    "__docId__": 1065,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it279",
    "testId": 279,
    "memberof": "test/util/line-2d-test.js~describe275.describe278",
    "testDepth": 2,
    "longname": "test/util/line-2d-test.js~describe275.describe278.it279",
    "access": null,
    "description": "should return true if point is between a and b",
    "lineNumber": 28
  },
  {
    "__docId__": 1066,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it280",
    "testId": 280,
    "memberof": "test/util/line-2d-test.js~describe275.describe278",
    "testDepth": 2,
    "longname": "test/util/line-2d-test.js~describe275.describe278.it280",
    "access": null,
    "description": "should return true if point is on the line but not between a and b",
    "lineNumber": 33
  },
  {
    "__docId__": 1067,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it281",
    "testId": 281,
    "memberof": "test/util/line-2d-test.js~describe275.describe278",
    "testDepth": 2,
    "longname": "test/util/line-2d-test.js~describe275.describe278.it281",
    "access": null,
    "description": "should return true if point has same coordinates as a",
    "lineNumber": 38
  },
  {
    "__docId__": 1068,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it282",
    "testId": 282,
    "memberof": "test/util/line-2d-test.js~describe275.describe278",
    "testDepth": 2,
    "longname": "test/util/line-2d-test.js~describe275.describe278.it282",
    "access": null,
    "description": "should return true if point has same coordinates as b",
    "lineNumber": 43
  },
  {
    "__docId__": 1069,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it283",
    "testId": 283,
    "memberof": "test/util/line-2d-test.js~describe275.describe278",
    "testDepth": 2,
    "longname": "test/util/line-2d-test.js~describe275.describe278.it283",
    "access": null,
    "description": "should return false if point is not on the line",
    "lineNumber": 48
  },
  {
    "__docId__": 1070,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/util/point-2d-test.js",
    "memberof": null,
    "longname": "test/util/point-2d-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import chai from 'chai';\r\nchai.should();\r\n\r\nimport Point2D from '../../src/js/util/point-2d';\r\nimport Vector2D from '../../src/js/util/vector-2d';\r\nimport Triangle2D from '../../src/js/util/triangle-2d';\r\n\r\n/** @test {Point2D} **/\r\ndescribe('Point2D', () => {\r\n  /** @test {Point2D#constructor} **/\r\n  describe('#constructor(x, y)', () => {\r\n    it('creates instance of Point2D', () => {\r\n      (new Point2D()).should.be.instanceof(Point2D);\r\n    });\r\n\r\n    it('should set values below the defined epsilon to zero', () => {\r\n      let point = new Point2D(Point2D.EPSILON / 2, Point2D.EPSILON / 2);\r\n      (point.x).should.be.equal(0);\r\n      (point.y).should.be.equal(0);\r\n    });\r\n  });\r\n\r\n  /** @test {Point2D#equals} **/\r\n  describe('#equals(point)', () => {\r\n    it('should return true if the same point object is passed in', () => {\r\n      let point = new Point2D(0, 0);\r\n      (point.equals(point)).should.be.true;\r\n    });\r\n\r\n    it('should return true if coordinates are equal', () => {\r\n      let pointA = new Point2D(0, 0);\r\n      let pointB = new Point2D(0, 0);\r\n      (pointA.equals(pointB)).should.be.true;\r\n    });\r\n\r\n    it('should return false if x-coordinates are not equal', () => {\r\n      let pointA = new Point2D(0, 0);\r\n      let pointB = new Point2D(1, 0);\r\n      (pointA.equals(pointB)).should.be.false;\r\n    });\r\n\r\n    it('should return false if y-coordinates are not equal', () => {\r\n      let pointA = new Point2D(0, 0);\r\n      let pointB = new Point2D(0, 1);\r\n      (pointA.equals(pointB)).should.be.false;\r\n    });\r\n  });\r\n\r\n  /** @test {Point2D#distanceTo} **/\r\n  describe('#distanceTo(point)', () => {\r\n    let pointA;\r\n    let pointB;\r\n\r\n    it('should return the Euclidian distance (i.e. straight line distance)', () => {\r\n      pointA = new Point2D(0, 0);\r\n      pointB = new Point2D(1, 0);\r\n      (pointA.distanceTo(pointB)).should.be.equal(1);\r\n\r\n      pointA = new Point2D(0, 0);\r\n      pointB = new Point2D(3, 4);\r\n      (pointA.distanceTo(pointB)).should.be.equal(5);\r\n\r\n      pointA = new Point2D(-1, -1);\r\n      pointB = new Point2D(-6, -13);\r\n      (pointA.distanceTo(pointB)).should.be.equal(13);\r\n    });\r\n\r\n    it('should return zero if distance less than the defined epsilon', () => {\r\n      pointA = new Point2D(0, 0);\r\n      pointB = new Point2D(0, 0);\r\n      pointB.x = Point2D.EPSILON / 2;\r\n      (pointA.distanceTo(pointB)).should.be.equal(0);\r\n    });\r\n  });\r\n\r\n  /** @test {Point2D#relativePositionToTriangle2D} **/\r\n  describe('#relativePositionToTriangle2D(oldTriangle, newTriangle)', () => {\r\n    let oldA;\r\n    let oldB;\r\n    let oldC;\r\n    let newA;\r\n    let newB;\r\n    let newC;\r\n    let oldTriangle;\r\n    let newTriangle;\r\n    let oldPoint;\r\n    let newPoint;\r\n\r\n    beforeEach(() => {\r\n      oldA = new Point2D(1, 0);\r\n      oldB = new Point2D(-1, 0);\r\n      oldC = new Point2D(0, 3);\r\n      newA = new Point2D(2, -1);\r\n      newB = new Point2D(-2, -1);\r\n      newC = new Point2D(0, 5);\r\n      oldTriangle = new Triangle2D(oldA, oldB, oldC);\r\n      newTriangle = new Triangle2D(newA, newB, newC);\r\n    });\r\n\r\n    it('should not change the coordinates of the original point', () => {\r\n      oldPoint = new Point2D(0, 0);\r\n      newPoint = oldPoint.relativePositionToTriangle2D(oldTriangle, newTriangle);\r\n      (newPoint === oldPoint).should.be.false;\r\n    });\r\n\r\n    it('should return vertex A on new triangle if on vertex A of old triangle', () => {\r\n      oldPoint = new Point2D(oldA.x, oldA.y);\r\n      newPoint = oldPoint.relativePositionToTriangle2D(oldTriangle, newTriangle);\r\n      (newPoint.x).should.be.equal(newA.x);\r\n      (newPoint.y).should.be.equal(newA.y);\r\n    });\r\n\r\n    it('should return vertex B on new triangle if on vertex B of old triangle', () => {\r\n      oldPoint = new Point2D(oldB.x, oldB.y);\r\n      newPoint = oldPoint.relativePositionToTriangle2D(oldTriangle, newTriangle);\r\n      (newPoint.x).should.be.equal(newB.x);\r\n      (newPoint.y).should.be.equal(newB.y);\r\n    });\r\n\r\n    it('should return vertex C on new triangle if on vertex C of old triangle', () => {\r\n      oldPoint = new Point2D(oldC.x, oldC.y);\r\n      newPoint = oldPoint.relativePositionToTriangle2D(oldTriangle, newTriangle);\r\n      (newPoint.x).should.be.equal(newC.x);\r\n      (newPoint.y).should.be.equal(newC.y);\r\n    });\r\n\r\n    it('should return the centroid of new triangle if on centroid of old triangle', () => {\r\n      let oldx = (oldA.x + oldB.x + oldC.x) / 3;\r\n      let oldy = (oldA.y + oldB.y + oldC.y) / 3;\r\n      oldPoint = new Point2D(oldx, oldy);\r\n      newPoint = oldPoint.relativePositionToTriangle2D(oldTriangle, newTriangle);\r\n      let newx = (newA.x + newB.x + newC.x) / 3;\r\n      let newy = (newA.y + newB.y + newC.y) / 3;\r\n      (newPoint.x).should.be.within(newx - Point2D.EPSILON, newx + Point2D.EPSILON);\r\n      (newPoint.y).should.be.within(newy - Point2D.EPSILON, newy + Point2D.EPSILON);\r\n    });\r\n\r\n    it('should return point on side of new triangle if on side of old triangle', () => {\r\n      oldPoint = new Point2D((oldA.x + oldB.x) / 2, (oldA.y + oldB.y) / 2);\r\n      newPoint = oldPoint.relativePositionToTriangle2D(oldTriangle, newTriangle);\r\n      (newPoint.x).should.be.equal((newA.x + newB.x) / 2);\r\n      (newPoint.y).should.be.equal((newA.y + newB.y) / 2);\r\n    });\r\n\r\n    it('should be able to handle triangle vertex order rotations', () => {\r\n      newC = new Point2D(oldA.x, oldA.y);\r\n      newA = new Point2D(oldB.x, oldB.y);\r\n      newB = new Point2D(oldC.x, oldC.y);\r\n      newTriangle = new Triangle2D(newA, newB, newC);\r\n      oldPoint = new Point2D(oldA.x, oldA.y);\r\n      newPoint = oldPoint.relativePositionToTriangle2D(oldTriangle, newTriangle);\r\n      (newPoint.equals(newA)).should.be.true;\r\n    });\r\n  });\r\n\r\n  /** @test {Point2D#translateVec} **/\r\n  describe('#translateVec(vec)', () => {\r\n    let vector;\r\n    let point;\r\n\r\n    beforeEach(() => {\r\n      vector = new Vector2D(1, 1);\r\n      point = new Point2D(0, 0);\r\n    });\r\n\r\n    it('should be translated in the vector direction', () => {\r\n      (point.translateVec(vector).x).should.be.equal(1);\r\n      (point.translateVec(vector).y).should.be.equal(1);\r\n    });\r\n\r\n    it('should not modify values of the original point object', () => {\r\n      (point.x).should.be.equal(0);\r\n      (point.y).should.be.equal(0);\r\n    });\r\n  });\r\n\r\n  /** @test {Point2D#lineTo} **/\r\n  describe('#lineTo(point)', () => {\r\n    let pointA;\r\n    let pointB;\r\n    let line;\r\n\r\n    beforeEach(() => {\r\n      pointA = new Point2D(0, 0);\r\n      pointB = new Point2D(1, 1);\r\n      line = pointA.lineTo(pointB);\r\n    });\r\n\r\n    it('should create line with current point as first point', () => {\r\n      (line.a.equals(pointA)).should.be.true;\r\n    });\r\n\r\n    it('should create line with other point as second point', () => {\r\n      (line.b.equals(pointB)).should.be.true;\r\n    });\r\n\r\n    it('should create line using references to the original point objects', () => {\r\n      (line.a === pointA).should.be.true;\r\n      (line.b === pointB).should.be.true;\r\n    });\r\n  });\r\n\r\n  /** @test {Point2D#vectorTo} **/\r\n  describe('#vectorTo(point)', () => {\r\n    let pointA;\r\n    let pointB;\r\n    let vector;\r\n\r\n    it('should create vector from first point to second point', () => {\r\n      pointA = new Point2D(0, 0);\r\n      pointB = new Point2D(1, 1);\r\n      vector = pointA.vectorTo(pointB);\r\n      (vector.x).should.be.equal(1);\r\n      (vector.y).should.be.equal(1);\r\n    });\r\n\r\n    it('should be able to return vectors with negative components', () => {\r\n      pointA = new Point2D(0, 0);\r\n      pointB = new Point2D(-1, -1);\r\n      vector = pointA.vectorTo(pointB);\r\n      (vector.x).should.be.equal(-1);\r\n      (vector.y).should.be.equal(-1);\r\n    });\r\n  });\r\n});\r\n"
  },
  {
    "__docId__": 1071,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe284",
    "testId": 284,
    "memberof": "test/util/point-2d-test.js",
    "testDepth": 0,
    "longname": "test/util/point-2d-test.js~describe284",
    "access": null,
    "description": "Point2D",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Point2D} *"
      }
    ],
    "testTargets": [
      "Point2D"
    ]
  },
  {
    "__docId__": 1072,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe285",
    "testId": 285,
    "memberof": "test/util/point-2d-test.js~describe284",
    "testDepth": 1,
    "longname": "test/util/point-2d-test.js~describe284.describe285",
    "access": null,
    "description": "#constructor(x, y)",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Point2D#constructor} *"
      }
    ],
    "testTargets": [
      "Point2D#constructor"
    ]
  },
  {
    "__docId__": 1073,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it286",
    "testId": 286,
    "memberof": "test/util/point-2d-test.js~describe284.describe285",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe285.it286",
    "access": null,
    "description": "creates instance of Point2D",
    "lineNumber": 12
  },
  {
    "__docId__": 1074,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it287",
    "testId": 287,
    "memberof": "test/util/point-2d-test.js~describe284.describe285",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe285.it287",
    "access": null,
    "description": "should set values below the defined epsilon to zero",
    "lineNumber": 16
  },
  {
    "__docId__": 1075,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe288",
    "testId": 288,
    "memberof": "test/util/point-2d-test.js~describe284",
    "testDepth": 1,
    "longname": "test/util/point-2d-test.js~describe284.describe288",
    "access": null,
    "description": "#equals(point)",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Point2D#equals} *"
      }
    ],
    "testTargets": [
      "Point2D#equals"
    ]
  },
  {
    "__docId__": 1076,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it289",
    "testId": 289,
    "memberof": "test/util/point-2d-test.js~describe284.describe288",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe288.it289",
    "access": null,
    "description": "should return true if the same point object is passed in",
    "lineNumber": 25
  },
  {
    "__docId__": 1077,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it290",
    "testId": 290,
    "memberof": "test/util/point-2d-test.js~describe284.describe288",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe288.it290",
    "access": null,
    "description": "should return true if coordinates are equal",
    "lineNumber": 30
  },
  {
    "__docId__": 1078,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it291",
    "testId": 291,
    "memberof": "test/util/point-2d-test.js~describe284.describe288",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe288.it291",
    "access": null,
    "description": "should return false if x-coordinates are not equal",
    "lineNumber": 36
  },
  {
    "__docId__": 1079,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it292",
    "testId": 292,
    "memberof": "test/util/point-2d-test.js~describe284.describe288",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe288.it292",
    "access": null,
    "description": "should return false if y-coordinates are not equal",
    "lineNumber": 42
  },
  {
    "__docId__": 1080,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe293",
    "testId": 293,
    "memberof": "test/util/point-2d-test.js~describe284",
    "testDepth": 1,
    "longname": "test/util/point-2d-test.js~describe284.describe293",
    "access": null,
    "description": "#distanceTo(point)",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Point2D#distanceTo} *"
      }
    ],
    "testTargets": [
      "Point2D#distanceTo"
    ]
  },
  {
    "__docId__": 1081,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it294",
    "testId": 294,
    "memberof": "test/util/point-2d-test.js~describe284.describe293",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe293.it294",
    "access": null,
    "description": "should return the Euclidian distance (i.e. straight line distance)",
    "lineNumber": 54
  },
  {
    "__docId__": 1082,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it295",
    "testId": 295,
    "memberof": "test/util/point-2d-test.js~describe284.describe293",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe293.it295",
    "access": null,
    "description": "should return zero if distance less than the defined epsilon",
    "lineNumber": 68
  },
  {
    "__docId__": 1083,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe296",
    "testId": 296,
    "memberof": "test/util/point-2d-test.js~describe284",
    "testDepth": 1,
    "longname": "test/util/point-2d-test.js~describe284.describe296",
    "access": null,
    "description": "#relativePositionToTriangle2D(oldTriangle, newTriangle)",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Point2D#relativePositionToTriangle2D} *"
      }
    ],
    "testTargets": [
      "Point2D#relativePositionToTriangle2D"
    ]
  },
  {
    "__docId__": 1084,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it297",
    "testId": 297,
    "memberof": "test/util/point-2d-test.js~describe284.describe296",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe296.it297",
    "access": null,
    "description": "should not change the coordinates of the original point",
    "lineNumber": 100
  },
  {
    "__docId__": 1085,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it298",
    "testId": 298,
    "memberof": "test/util/point-2d-test.js~describe284.describe296",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe296.it298",
    "access": null,
    "description": "should return vertex A on new triangle if on vertex A of old triangle",
    "lineNumber": 106
  },
  {
    "__docId__": 1086,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it299",
    "testId": 299,
    "memberof": "test/util/point-2d-test.js~describe284.describe296",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe296.it299",
    "access": null,
    "description": "should return vertex B on new triangle if on vertex B of old triangle",
    "lineNumber": 113
  },
  {
    "__docId__": 1087,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it300",
    "testId": 300,
    "memberof": "test/util/point-2d-test.js~describe284.describe296",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe296.it300",
    "access": null,
    "description": "should return vertex C on new triangle if on vertex C of old triangle",
    "lineNumber": 120
  },
  {
    "__docId__": 1088,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it301",
    "testId": 301,
    "memberof": "test/util/point-2d-test.js~describe284.describe296",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe296.it301",
    "access": null,
    "description": "should return the centroid of new triangle if on centroid of old triangle",
    "lineNumber": 127
  },
  {
    "__docId__": 1089,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it302",
    "testId": 302,
    "memberof": "test/util/point-2d-test.js~describe284.describe296",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe296.it302",
    "access": null,
    "description": "should return point on side of new triangle if on side of old triangle",
    "lineNumber": 138
  },
  {
    "__docId__": 1090,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it303",
    "testId": 303,
    "memberof": "test/util/point-2d-test.js~describe284.describe296",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe296.it303",
    "access": null,
    "description": "should be able to handle triangle vertex order rotations",
    "lineNumber": 145
  },
  {
    "__docId__": 1091,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe304",
    "testId": 304,
    "memberof": "test/util/point-2d-test.js~describe284",
    "testDepth": 1,
    "longname": "test/util/point-2d-test.js~describe284.describe304",
    "access": null,
    "description": "#translateVec(vec)",
    "lineNumber": 157,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Point2D#translateVec} *"
      }
    ],
    "testTargets": [
      "Point2D#translateVec"
    ]
  },
  {
    "__docId__": 1092,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it305",
    "testId": 305,
    "memberof": "test/util/point-2d-test.js~describe284.describe304",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe304.it305",
    "access": null,
    "description": "should be translated in the vector direction",
    "lineNumber": 166
  },
  {
    "__docId__": 1093,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it306",
    "testId": 306,
    "memberof": "test/util/point-2d-test.js~describe284.describe304",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe304.it306",
    "access": null,
    "description": "should not modify values of the original point object",
    "lineNumber": 171
  },
  {
    "__docId__": 1094,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe307",
    "testId": 307,
    "memberof": "test/util/point-2d-test.js~describe284",
    "testDepth": 1,
    "longname": "test/util/point-2d-test.js~describe284.describe307",
    "access": null,
    "description": "#lineTo(point)",
    "lineNumber": 178,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Point2D#lineTo} *"
      }
    ],
    "testTargets": [
      "Point2D#lineTo"
    ]
  },
  {
    "__docId__": 1095,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it308",
    "testId": 308,
    "memberof": "test/util/point-2d-test.js~describe284.describe307",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe307.it308",
    "access": null,
    "description": "should create line with current point as first point",
    "lineNumber": 189
  },
  {
    "__docId__": 1096,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it309",
    "testId": 309,
    "memberof": "test/util/point-2d-test.js~describe284.describe307",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe307.it309",
    "access": null,
    "description": "should create line with other point as second point",
    "lineNumber": 193
  },
  {
    "__docId__": 1097,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it310",
    "testId": 310,
    "memberof": "test/util/point-2d-test.js~describe284.describe307",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe307.it310",
    "access": null,
    "description": "should create line using references to the original point objects",
    "lineNumber": 197
  },
  {
    "__docId__": 1098,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe311",
    "testId": 311,
    "memberof": "test/util/point-2d-test.js~describe284",
    "testDepth": 1,
    "longname": "test/util/point-2d-test.js~describe284.describe311",
    "access": null,
    "description": "#vectorTo(point)",
    "lineNumber": 204,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Point2D#vectorTo} *"
      }
    ],
    "testTargets": [
      "Point2D#vectorTo"
    ]
  },
  {
    "__docId__": 1099,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it312",
    "testId": 312,
    "memberof": "test/util/point-2d-test.js~describe284.describe311",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe311.it312",
    "access": null,
    "description": "should create vector from first point to second point",
    "lineNumber": 209
  },
  {
    "__docId__": 1100,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it313",
    "testId": 313,
    "memberof": "test/util/point-2d-test.js~describe284.describe311",
    "testDepth": 2,
    "longname": "test/util/point-2d-test.js~describe284.describe311.it313",
    "access": null,
    "description": "should be able to return vectors with negative components",
    "lineNumber": 217
  },
  {
    "__docId__": 1101,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/util/triangle-2d-test.js",
    "memberof": null,
    "longname": "test/util/triangle-2d-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import chai from 'chai';\r\nchai.should();\r\n\r\nimport Point2D from '../../src/js/util/point-2d';\r\nimport Triangle2D from '../../src/js/util/triangle-2d';\r\n\r\n/** @test {Triangle2D} **/\r\ndescribe('Triangle2D', () => {\r\n  /** @test {Triangle2D#constructor} **/\r\n  describe('#constructor(a, b, c)', () => {\r\n    it('creates instance of Triangle2D', () => {\r\n      (new Triangle2D()).should.be.instanceof(Triangle2D);\r\n    });\r\n  });\r\n\r\n  /** @test {Triangle2D#area} **/\r\n  describe('.area', () => {\r\n    let a;\r\n    let b;\n    let c;\r\n    let triangle;\r\n\r\n    it('should return the area of the triangle', () => {\r\n      a = new Point2D(0, 0);\r\n      b = new Point2D(3, 0);\r\n      c = new Point2D(0, 4);\r\n      triangle = new Triangle2D(a, b, c);\r\n      (triangle.area).should.be.equal(6);\r\n    });\r\n\r\n    it('should return a negative value if vertexes are oriented clockwise around triangle', () => {\r\n      a = new Point2D(0, 0);\r\n      b = new Point2D(0, 4);\r\n      c = new Point2D(3, 0);\r\n      triangle = new Triangle2D(a, b, c);\r\n      (triangle.area).should.be.equal(-6);\r\n    });\r\n  });\r\n\r\n  /** @test {Triangle2D#getBarycentricCoordinates} **/\r\n  describe('#getBarycentricCoordinates', () => {\r\n    let a;\r\n    let b;\r\n    let c;\r\n    let triangle;\r\n    let point;\r\n    let barycentricCoordinates;\r\n\r\n    beforeEach(() => {\r\n      a = new Point2D(1, 0);\r\n      b = new Point2D(-1, 0);\r\n      c = new Point2D(0, 3);\r\n      triangle = new Triangle2D(a, b, c);\r\n    });\r\n\r\n    it('should return (1/3, 1/3) for centroid', () => {\r\n      let cx = (a.x + b.x + c.x) / 3;\r\n      let cy = (a.y + b.y + c.y) / 3;\r\n      point = new Point2D(cx, cy);\r\n      barycentricCoordinates = triangle.getBarycentricCoordinates(point);\r\n      (barycentricCoordinates.x).should.be.equal(1 / 3);\r\n      (barycentricCoordinates.y).should.be.equal(1 / 3);\r\n    });\r\n  });\r\n\r\n  /** @test {Triangle2D#getPointFromBarycentricCoordinates} **/\r\n  describe('#getPointFromBarycentricCoordinates', () => {\r\n    let a;\r\n    let b;\r\n    let c;\r\n    let triangle;\r\n    let point;\r\n    let barycentricCoordinates;\r\n\r\n    beforeEach(() => {\r\n      a = new Point2D(1, 0);\r\n      b = new Point2D(-1, 0);\r\n      c = new Point2D(0, 3);\r\n      triangle = new Triangle2D(a, b, c);\r\n    });\r\n\r\n    it('should return centroid for coordinates (1/3, 1/3)', () => {\r\n      barycentricCoordinates = new Point2D(1 / 3, 1 / 3);\r\n      point = triangle.getPointFromBarycentricCoordinates(barycentricCoordinates);\r\n      let cx = (a.x + b.x + c.x) / 3;\r\n      let cy = (a.y + b.y + c.y) / 3;\r\n      (point.x).should.be.equal(cx);\r\n      (point.y).should.be.equal(cy);\r\n    });\r\n  });\r\n});\r\n"
  },
  {
    "__docId__": 1102,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe314",
    "testId": 314,
    "memberof": "test/util/triangle-2d-test.js",
    "testDepth": 0,
    "longname": "test/util/triangle-2d-test.js~describe314",
    "access": null,
    "description": "Triangle2D",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Triangle2D} *"
      }
    ],
    "testTargets": [
      "Triangle2D"
    ]
  },
  {
    "__docId__": 1103,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe315",
    "testId": 315,
    "memberof": "test/util/triangle-2d-test.js~describe314",
    "testDepth": 1,
    "longname": "test/util/triangle-2d-test.js~describe314.describe315",
    "access": null,
    "description": "#constructor(a, b, c)",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Triangle2D#constructor} *"
      }
    ],
    "testTargets": [
      "Triangle2D#constructor"
    ]
  },
  {
    "__docId__": 1104,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it316",
    "testId": 316,
    "memberof": "test/util/triangle-2d-test.js~describe314.describe315",
    "testDepth": 2,
    "longname": "test/util/triangle-2d-test.js~describe314.describe315.it316",
    "access": null,
    "description": "creates instance of Triangle2D",
    "lineNumber": 11
  },
  {
    "__docId__": 1105,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe317",
    "testId": 317,
    "memberof": "test/util/triangle-2d-test.js~describe314",
    "testDepth": 1,
    "longname": "test/util/triangle-2d-test.js~describe314.describe317",
    "access": null,
    "description": ".area",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Triangle2D#area} *"
      }
    ],
    "testTargets": [
      "Triangle2D#area"
    ]
  },
  {
    "__docId__": 1106,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it318",
    "testId": 318,
    "memberof": "test/util/triangle-2d-test.js~describe314.describe317",
    "testDepth": 2,
    "longname": "test/util/triangle-2d-test.js~describe314.describe317.it318",
    "access": null,
    "description": "should return the area of the triangle",
    "lineNumber": 23
  },
  {
    "__docId__": 1107,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it319",
    "testId": 319,
    "memberof": "test/util/triangle-2d-test.js~describe314.describe317",
    "testDepth": 2,
    "longname": "test/util/triangle-2d-test.js~describe314.describe317.it319",
    "access": null,
    "description": "should return a negative value if vertexes are oriented clockwise around triangle",
    "lineNumber": 31
  },
  {
    "__docId__": 1108,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe320",
    "testId": 320,
    "memberof": "test/util/triangle-2d-test.js~describe314",
    "testDepth": 1,
    "longname": "test/util/triangle-2d-test.js~describe314.describe320",
    "access": null,
    "description": "#getBarycentricCoordinates",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Triangle2D#getBarycentricCoordinates} *"
      }
    ],
    "testTargets": [
      "Triangle2D#getBarycentricCoordinates"
    ]
  },
  {
    "__docId__": 1109,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it321",
    "testId": 321,
    "memberof": "test/util/triangle-2d-test.js~describe314.describe320",
    "testDepth": 2,
    "longname": "test/util/triangle-2d-test.js~describe314.describe320.it321",
    "access": null,
    "description": "should return (1/3, 1/3) for centroid",
    "lineNumber": 56
  },
  {
    "__docId__": 1110,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe322",
    "testId": 322,
    "memberof": "test/util/triangle-2d-test.js~describe314",
    "testDepth": 1,
    "longname": "test/util/triangle-2d-test.js~describe314.describe322",
    "access": null,
    "description": "#getPointFromBarycentricCoordinates",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Triangle2D#getPointFromBarycentricCoordinates} *"
      }
    ],
    "testTargets": [
      "Triangle2D#getPointFromBarycentricCoordinates"
    ]
  },
  {
    "__docId__": 1111,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it323",
    "testId": 323,
    "memberof": "test/util/triangle-2d-test.js~describe314.describe322",
    "testDepth": 2,
    "longname": "test/util/triangle-2d-test.js~describe314.describe322.it323",
    "access": null,
    "description": "should return centroid for coordinates (1/3, 1/3)",
    "lineNumber": 82
  },
  {
    "__docId__": 1112,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/util/vector-2d-test.js",
    "memberof": null,
    "longname": "test/util/vector-2d-test.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import chai from 'chai';\r\nchai.should();\r\n\r\nimport Vector2D from '../../src/js/util/vector-2d';\r\n\r\n/** @test {Vector2D} **/\r\ndescribe('Vector2D', () => {\r\n  /** @test {Vector2D#constructor} **/\r\n  describe('#constructor(a, b)', () => {\r\n    it('creates instance of Vector2D', () => {\r\n      (new Vector2D()).should.be.instanceof(Vector2D);\r\n    });\r\n  });\r\n\r\n  /** @test {Vector2D#length} **/\r\n  describe('.length', () => {\r\n    it('should return the magnitude of the vector', () => {\r\n      let vector = new Vector2D(3, 4);\r\n      (vector.length).should.be.equal(5);\r\n    });\r\n  });\r\n\r\n  /** @test {Vector2D#equals} **/\r\n  describe('#equals(vec)', () => {\r\n    it('should return true if the same vector object is passed in', () => {\r\n      let vector = new Vector2D(0, 0);\r\n      (vector.equals(vector)).should.be.true;\r\n    });\r\n\r\n    it('should return true if the x- and y-components are equal', () => {\r\n      let vectorA = new Vector2D(0, 0);\r\n      let vectorB = new Vector2D(0, 0);\r\n      (vectorA.equals(vectorB)).should.be.true;\r\n    });\r\n\r\n    it('should return false if the x-components are not equal', () => {\r\n      let vectorA = new Vector2D(0, 0);\r\n      let vectorB = new Vector2D(1, 0);\r\n      (vectorA.equals(vectorB)).should.be.false;\r\n    });\r\n\r\n    it('should return false if the y-components are not equal', () => {\r\n      let vectorA = new Vector2D(0, 0);\r\n      let vectorB = new Vector2D(0, 1);\r\n      (vectorA.equals(vectorB)).should.be.false;\r\n    });\r\n  });\r\n\r\n  /** @test {Vector2D#add} **/\r\n  describe('#add(vec)', () => {\r\n    it('should add the x- and y-components', () => {\r\n      let vectorA = new Vector2D(0, 0);\r\n      let vectorB = new Vector2D(1, 1);\r\n      let vectorAB = vectorA.add(vectorB);\r\n      (vectorAB.x).should.be.equal(1);\r\n      (vectorAB.y).should.be.equal(1);\r\n    });\r\n\r\n    it('should work with negative x- and y- components', () => {\r\n      let vectorA = new Vector2D(0, 0);\r\n      let vectorB = new Vector2D(-1, -1);\r\n      let vectorAB = vectorA.add(vectorB);\r\n      (vectorAB.x).should.be.equal(-1);\r\n      (vectorAB.y).should.be.equal(-1);\r\n    });\r\n\r\n    it('should not modify original vectors', () => {\r\n      let vectorA = new Vector2D(1, 1);\r\n      let vectorB = new Vector2D(1, 1);\r\n      vectorA.add(vectorB);\r\n      (vectorA.x).should.be.equal(1);\r\n      (vectorA.y).should.be.equal(1);\r\n      (vectorB.x).should.be.equal(1);\r\n      (vectorB.y).should.be.equal(1);\r\n    });\r\n  });\r\n\r\n  /** @test {Vector2D#sub} **/\r\n  describe('#sub(vec)', () => {\r\n    it('should add the x- and y-components', () => {\r\n      let vectorA = new Vector2D(0, 0);\r\n      let vectorB = new Vector2D(1, 1);\r\n      let vectorAB = vectorA.sub(vectorB);\r\n      (vectorAB.x).should.be.equal(-1);\r\n      (vectorAB.y).should.be.equal(-1);\r\n    });\r\n\r\n    it('should work with negative x- and y- components', () => {\r\n      let vectorA = new Vector2D(0, 0);\r\n      let vectorB = new Vector2D(-1, -1);\r\n      let vectorAB = vectorA.sub(vectorB);\r\n      (vectorAB.x).should.be.equal(1);\r\n      (vectorAB.y).should.be.equal(1);\r\n    });\r\n\r\n    it('should not modify original vectors', () => {\r\n      let vectorA = new Vector2D(1, 1);\r\n      let vectorB = new Vector2D(1, 1);\r\n      vectorA.sub(vectorB);\r\n      (vectorA.x).should.be.equal(1);\r\n      (vectorA.y).should.be.equal(1);\r\n      (vectorB.x).should.be.equal(1);\r\n      (vectorB.y).should.be.equal(1);\r\n    });\r\n  });\r\n\r\n  /** @test {Vector2D#dot} **/\r\n  describe('#dot(vec)', () => {\r\n    it('should find the dot product between two vectors', () => {\r\n      let vectorA = new Vector2D(1, 0);\r\n      let vectorB = new Vector2D(1, 1);\r\n      let dotProduct = vectorA.dot(vectorB);\r\n      (dotProduct).should.be.equal(1);\r\n    });\r\n\r\n    it('should be zero if the vectors are orthogonal', () => {\r\n      let vectorA = new Vector2D(1, 0);\r\n      let vectorB = new Vector2D(0, 1);\r\n      let dotProduct = vectorA.dot(vectorB);\r\n      (dotProduct).should.be.equal(0);\r\n    });\r\n\r\n    it('should be equal to product of magnitudes if the vectors are in the same direction', () => {\r\n      let vectorA = new Vector2D(2, 0);\r\n      let vectorB = new Vector2D(3, 0);\r\n      let dotProduct = vectorA.dot(vectorB);\r\n      (dotProduct).should.be.equal(6);\r\n    });\r\n\r\n    it('should be equal to negative product of magnitudes if the vectors are in the opposite direction', () => {\r\n      let vectorA = new Vector2D(2, 0);\r\n      let vectorB = new Vector2D(-3, 0);\r\n      let dotProduct = vectorA.dot(vectorB);\r\n      (dotProduct).should.be.equal(-6);\r\n    });\r\n\r\n    it('should not modify original vectors', () => {\r\n      let vectorA = new Vector2D(1, 1);\r\n      let vectorB = new Vector2D(1, 1);\r\n      vectorA.dot(vectorB);\r\n      (vectorA.x).should.be.equal(1);\r\n      (vectorA.y).should.be.equal(1);\r\n      (vectorB.x).should.be.equal(1);\r\n      (vectorB.y).should.be.equal(1);\r\n    });\r\n  });\r\n\r\n  /** @test {Vector2D#cross} **/\r\n  describe('#cross(vec)', () => {\r\n    it('should return the \"cross product\" of the two vectors', () => {\r\n      let vectorA = new Vector2D(1, 0);\r\n      let vectorB = new Vector2D(0, 1);\r\n      let crossProduct = vectorA.cross(vectorB);\r\n      (crossProduct).should.be.equal(1);\r\n    });\r\n\r\n    it('should return zero if the vectors are parallel', () => {\r\n      let vectorA = new Vector2D(1, 0);\r\n      let vectorB = new Vector2D(-2, 0);\r\n      let crossProduct = vectorA.cross(vectorB);\r\n      (crossProduct).should.be.equal(0);\r\n    });\r\n\r\n    it('should return zero if the vectors have zero length', () => {\r\n      let vectorA = new Vector2D(0, 0);\r\n      let vectorB = new Vector2D(0, 0);\r\n      let crossProduct = vectorA.cross(vectorB);\r\n      (crossProduct).should.be.equal(0);\r\n    });\r\n\r\n    it('should not modify original vectors', () => {\r\n      let vectorA = new Vector2D(1, 1);\r\n      let vectorB = new Vector2D(1, 1);\r\n      vectorA.cross(vectorB);\r\n      (vectorA.x).should.be.equal(1);\r\n      (vectorA.y).should.be.equal(1);\r\n      (vectorB.x).should.be.equal(1);\r\n      (vectorB.y).should.be.equal(1);\r\n    });\r\n  });\r\n\r\n  /** @test {Vector2D#scale} **/\r\n  describe('#scale(n)', () => {\r\n    it('should scale vector by the number', () => {\r\n      let vector = new Vector2D(1, 1);\r\n      let scaledVector = vector.scale(2);\r\n      (scaledVector.x).should.be.equal(2);\r\n      (scaledVector.y).should.be.equal(2);\r\n    });\r\n\r\n    it('should scale vector by fractions', () => {\r\n      let vector = new Vector2D(1, 1);\r\n      let scaledVector = vector.scale(0.5);\r\n      (scaledVector.x).should.be.equal(0.5);\r\n      (scaledVector.y).should.be.equal(0.5);\r\n    });\r\n\r\n    it('should scale vector by negative numbers', () => {\r\n      let vector = new Vector2D(1, 1);\r\n      let scaledVector = vector.scale(-1);\r\n      (scaledVector.x).should.be.equal(-1);\r\n      (scaledVector.y).should.be.equal(-1);\r\n    });\r\n\r\n    it('should not modify original vector', () => {\r\n      let vector = new Vector2D(1, 1);\r\n      vector.scale(2);\r\n      (vector.x).should.be.equal(1);\r\n      (vector.y).should.be.equal(1);\r\n    });\r\n  });\r\n\r\n  /** @test {Vector2D#rotateDegrees} **/\r\n  describe('#rotateDegrees(deg)', () => {\r\n    it('should rotate vector by the given number of degrees', () => {\r\n      let vector = new Vector2D(Math.sqrt(2), 0);\r\n      let rotatedVector = vector.rotateDegrees(45);\r\n      (rotatedVector.x).should.be.within(1 - Vector2D.EPSILON, 1 + Vector2D.EPSILON);\r\n      (rotatedVector.y).should.be.within(1 - Vector2D.EPSILON, 1 + Vector2D.EPSILON);\r\n    });\r\n\r\n    it('should not modify original vector', () => {\r\n      let vector = new Vector2D(1, 1);\r\n      vector.rotateDegrees(45);\r\n      (vector.x).should.be.equal(1);\r\n      (vector.y).should.be.equal(1);\r\n    });\r\n  });\r\n\r\n  /** @test {Vector2D#rotateRadians} **/\r\n  describe('#rotateRadians(rad)', () => {\r\n    it('should rotate vector by the given number of radians', () => {\r\n      let vector = new Vector2D(1, 1);\r\n      let rotatedVector = vector.rotateRadians(Math.PI);\r\n      (rotatedVector.x).should.be.within(-1 - Vector2D.EPSILON, -1 + Vector2D.EPSILON);\r\n      (rotatedVector.y).should.be.within(-1 - Vector2D.EPSILON, -1 + Vector2D.EPSILON);\r\n    });\r\n\r\n    it('should not modify original vector', () => {\r\n      let vector = new Vector2D(1, 1);\r\n      vector.rotateRadians(45);\r\n      (vector.x).should.be.equal(1);\r\n      (vector.y).should.be.equal(1);\r\n    });\r\n  });\r\n\r\n  /** @test {Vector2D#degreesTo} **/\r\n  describe('#degreesTo(vec)', () => {\r\n    it('should return the degrees between the vectors', () => {\r\n      let vectorA = new Vector2D(1, 0);\r\n      let vectorB = new Vector2D(0, 1);\r\n      let angle = vectorA.degreesTo(vectorB);\r\n      (angle).should.be.equal(90);\r\n    });\r\n\r\n    it('should not return a negative value', () => {\r\n      let vectorA = new Vector2D(1, 0);\r\n      let vectorB = new Vector2D(0, -1);\r\n      let angle = vectorA.degreesTo(vectorB);\r\n      (angle).should.be.equal(270);\r\n    });\r\n\r\n    it('should handle floating point precision errors', () => {\r\n      let vectorA = new Vector2D(1, 0);\r\n      let vectorB = new Vector2D(0.17364817766, 0.9848077530);\r\n      let angle = vectorA.degreesTo(vectorB);\r\n      (angle).should.be.equal(80);\r\n    });\r\n\r\n    it('should return zero if vectors are in same direction', () => {\r\n      let vectorA = new Vector2D(1, 0);\r\n      let vectorB = new Vector2D(2, 0);\r\n      let angle = vectorA.degreesTo(vectorB);\r\n      (angle).should.be.equal(0);\r\n    });\r\n  });\r\n\r\n  /** @test {Vector2D#projectOnto} **/\r\n  describe('#projectOnto(vec)', () => {\r\n    it('should return a projection of the current vector onto the given vector', () => {\r\n      let vectorA = new Vector2D(1, 1);\r\n      let vectorB = new Vector2D(1, 0);\r\n      let projection = vectorA.projectOnto(vectorB);\r\n      (projection.x).should.be.equal(1);\r\n      (projection.y).should.be.equal(0);\r\n    });\r\n\r\n    it('should not modify original vectors', () => {\r\n      let vectorA = new Vector2D(1, 1);\r\n      let vectorB = new Vector2D(1, 0);\r\n      vectorA.projectOnto(vectorB);\r\n      (vectorA.x).should.be.equal(1);\r\n      (vectorA.y).should.be.equal(1);\r\n      (vectorB.x).should.be.equal(1);\r\n      (vectorB.y).should.be.equal(0);\r\n    });\r\n  });\r\n});\r\n"
  },
  {
    "__docId__": 1113,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe324",
    "testId": 324,
    "memberof": "test/util/vector-2d-test.js",
    "testDepth": 0,
    "longname": "test/util/vector-2d-test.js~describe324",
    "access": null,
    "description": "Vector2D",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Vector2D} *"
      }
    ],
    "testTargets": [
      "Vector2D"
    ]
  },
  {
    "__docId__": 1114,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe325",
    "testId": 325,
    "memberof": "test/util/vector-2d-test.js~describe324",
    "testDepth": 1,
    "longname": "test/util/vector-2d-test.js~describe324.describe325",
    "access": null,
    "description": "#constructor(a, b)",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Vector2D#constructor} *"
      }
    ],
    "testTargets": [
      "Vector2D#constructor"
    ]
  },
  {
    "__docId__": 1115,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it326",
    "testId": 326,
    "memberof": "test/util/vector-2d-test.js~describe324.describe325",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe325.it326",
    "access": null,
    "description": "creates instance of Vector2D",
    "lineNumber": 10
  },
  {
    "__docId__": 1116,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe327",
    "testId": 327,
    "memberof": "test/util/vector-2d-test.js~describe324",
    "testDepth": 1,
    "longname": "test/util/vector-2d-test.js~describe324.describe327",
    "access": null,
    "description": ".length",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Vector2D#length} *"
      }
    ],
    "testTargets": [
      "Vector2D#length"
    ]
  },
  {
    "__docId__": 1117,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it328",
    "testId": 328,
    "memberof": "test/util/vector-2d-test.js~describe324.describe327",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe327.it328",
    "access": null,
    "description": "should return the magnitude of the vector",
    "lineNumber": 17
  },
  {
    "__docId__": 1118,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe329",
    "testId": 329,
    "memberof": "test/util/vector-2d-test.js~describe324",
    "testDepth": 1,
    "longname": "test/util/vector-2d-test.js~describe324.describe329",
    "access": null,
    "description": "#equals(vec)",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Vector2D#equals} *"
      }
    ],
    "testTargets": [
      "Vector2D#equals"
    ]
  },
  {
    "__docId__": 1119,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it330",
    "testId": 330,
    "memberof": "test/util/vector-2d-test.js~describe324.describe329",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe329.it330",
    "access": null,
    "description": "should return true if the same vector object is passed in",
    "lineNumber": 25
  },
  {
    "__docId__": 1120,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it331",
    "testId": 331,
    "memberof": "test/util/vector-2d-test.js~describe324.describe329",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe329.it331",
    "access": null,
    "description": "should return true if the x- and y-components are equal",
    "lineNumber": 30
  },
  {
    "__docId__": 1121,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it332",
    "testId": 332,
    "memberof": "test/util/vector-2d-test.js~describe324.describe329",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe329.it332",
    "access": null,
    "description": "should return false if the x-components are not equal",
    "lineNumber": 36
  },
  {
    "__docId__": 1122,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it333",
    "testId": 333,
    "memberof": "test/util/vector-2d-test.js~describe324.describe329",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe329.it333",
    "access": null,
    "description": "should return false if the y-components are not equal",
    "lineNumber": 42
  },
  {
    "__docId__": 1123,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe334",
    "testId": 334,
    "memberof": "test/util/vector-2d-test.js~describe324",
    "testDepth": 1,
    "longname": "test/util/vector-2d-test.js~describe324.describe334",
    "access": null,
    "description": "#add(vec)",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Vector2D#add} *"
      }
    ],
    "testTargets": [
      "Vector2D#add"
    ]
  },
  {
    "__docId__": 1124,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it335",
    "testId": 335,
    "memberof": "test/util/vector-2d-test.js~describe324.describe334",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe334.it335",
    "access": null,
    "description": "should add the x- and y-components",
    "lineNumber": 51
  },
  {
    "__docId__": 1125,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it336",
    "testId": 336,
    "memberof": "test/util/vector-2d-test.js~describe324.describe334",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe334.it336",
    "access": null,
    "description": "should work with negative x- and y- components",
    "lineNumber": 59
  },
  {
    "__docId__": 1126,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it337",
    "testId": 337,
    "memberof": "test/util/vector-2d-test.js~describe324.describe334",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe334.it337",
    "access": null,
    "description": "should not modify original vectors",
    "lineNumber": 67
  },
  {
    "__docId__": 1127,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe338",
    "testId": 338,
    "memberof": "test/util/vector-2d-test.js~describe324",
    "testDepth": 1,
    "longname": "test/util/vector-2d-test.js~describe324.describe338",
    "access": null,
    "description": "#sub(vec)",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Vector2D#sub} *"
      }
    ],
    "testTargets": [
      "Vector2D#sub"
    ]
  },
  {
    "__docId__": 1128,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it339",
    "testId": 339,
    "memberof": "test/util/vector-2d-test.js~describe324.describe338",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe338.it339",
    "access": null,
    "description": "should add the x- and y-components",
    "lineNumber": 80
  },
  {
    "__docId__": 1129,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it340",
    "testId": 340,
    "memberof": "test/util/vector-2d-test.js~describe324.describe338",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe338.it340",
    "access": null,
    "description": "should work with negative x- and y- components",
    "lineNumber": 88
  },
  {
    "__docId__": 1130,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it341",
    "testId": 341,
    "memberof": "test/util/vector-2d-test.js~describe324.describe338",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe338.it341",
    "access": null,
    "description": "should not modify original vectors",
    "lineNumber": 96
  },
  {
    "__docId__": 1131,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe342",
    "testId": 342,
    "memberof": "test/util/vector-2d-test.js~describe324",
    "testDepth": 1,
    "longname": "test/util/vector-2d-test.js~describe324.describe342",
    "access": null,
    "description": "#dot(vec)",
    "lineNumber": 108,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Vector2D#dot} *"
      }
    ],
    "testTargets": [
      "Vector2D#dot"
    ]
  },
  {
    "__docId__": 1132,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it343",
    "testId": 343,
    "memberof": "test/util/vector-2d-test.js~describe324.describe342",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe342.it343",
    "access": null,
    "description": "should find the dot product between two vectors",
    "lineNumber": 109
  },
  {
    "__docId__": 1133,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it344",
    "testId": 344,
    "memberof": "test/util/vector-2d-test.js~describe324.describe342",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe342.it344",
    "access": null,
    "description": "should be zero if the vectors are orthogonal",
    "lineNumber": 116
  },
  {
    "__docId__": 1134,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it345",
    "testId": 345,
    "memberof": "test/util/vector-2d-test.js~describe324.describe342",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe342.it345",
    "access": null,
    "description": "should be equal to product of magnitudes if the vectors are in the same direction",
    "lineNumber": 123
  },
  {
    "__docId__": 1135,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it346",
    "testId": 346,
    "memberof": "test/util/vector-2d-test.js~describe324.describe342",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe342.it346",
    "access": null,
    "description": "should be equal to negative product of magnitudes if the vectors are in the opposite direction",
    "lineNumber": 130
  },
  {
    "__docId__": 1136,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it347",
    "testId": 347,
    "memberof": "test/util/vector-2d-test.js~describe324.describe342",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe342.it347",
    "access": null,
    "description": "should not modify original vectors",
    "lineNumber": 137
  },
  {
    "__docId__": 1137,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe348",
    "testId": 348,
    "memberof": "test/util/vector-2d-test.js~describe324",
    "testDepth": 1,
    "longname": "test/util/vector-2d-test.js~describe324.describe348",
    "access": null,
    "description": "#cross(vec)",
    "lineNumber": 149,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Vector2D#cross} *"
      }
    ],
    "testTargets": [
      "Vector2D#cross"
    ]
  },
  {
    "__docId__": 1138,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it349",
    "testId": 349,
    "memberof": "test/util/vector-2d-test.js~describe324.describe348",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe348.it349",
    "access": null,
    "description": "should return the \"cross product\" of the two vectors",
    "lineNumber": 150
  },
  {
    "__docId__": 1139,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it350",
    "testId": 350,
    "memberof": "test/util/vector-2d-test.js~describe324.describe348",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe348.it350",
    "access": null,
    "description": "should return zero if the vectors are parallel",
    "lineNumber": 157
  },
  {
    "__docId__": 1140,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it351",
    "testId": 351,
    "memberof": "test/util/vector-2d-test.js~describe324.describe348",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe348.it351",
    "access": null,
    "description": "should return zero if the vectors have zero length",
    "lineNumber": 164
  },
  {
    "__docId__": 1141,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it352",
    "testId": 352,
    "memberof": "test/util/vector-2d-test.js~describe324.describe348",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe348.it352",
    "access": null,
    "description": "should not modify original vectors",
    "lineNumber": 171
  },
  {
    "__docId__": 1142,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe353",
    "testId": 353,
    "memberof": "test/util/vector-2d-test.js~describe324",
    "testDepth": 1,
    "longname": "test/util/vector-2d-test.js~describe324.describe353",
    "access": null,
    "description": "#scale(n)",
    "lineNumber": 183,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Vector2D#scale} *"
      }
    ],
    "testTargets": [
      "Vector2D#scale"
    ]
  },
  {
    "__docId__": 1143,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it354",
    "testId": 354,
    "memberof": "test/util/vector-2d-test.js~describe324.describe353",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe353.it354",
    "access": null,
    "description": "should scale vector by the number",
    "lineNumber": 184
  },
  {
    "__docId__": 1144,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it355",
    "testId": 355,
    "memberof": "test/util/vector-2d-test.js~describe324.describe353",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe353.it355",
    "access": null,
    "description": "should scale vector by fractions",
    "lineNumber": 191
  },
  {
    "__docId__": 1145,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it356",
    "testId": 356,
    "memberof": "test/util/vector-2d-test.js~describe324.describe353",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe353.it356",
    "access": null,
    "description": "should scale vector by negative numbers",
    "lineNumber": 198
  },
  {
    "__docId__": 1146,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it357",
    "testId": 357,
    "memberof": "test/util/vector-2d-test.js~describe324.describe353",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe353.it357",
    "access": null,
    "description": "should not modify original vector",
    "lineNumber": 205
  },
  {
    "__docId__": 1147,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe358",
    "testId": 358,
    "memberof": "test/util/vector-2d-test.js~describe324",
    "testDepth": 1,
    "longname": "test/util/vector-2d-test.js~describe324.describe358",
    "access": null,
    "description": "#rotateDegrees(deg)",
    "lineNumber": 214,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Vector2D#rotateDegrees} *"
      }
    ],
    "testTargets": [
      "Vector2D#rotateDegrees"
    ]
  },
  {
    "__docId__": 1148,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it359",
    "testId": 359,
    "memberof": "test/util/vector-2d-test.js~describe324.describe358",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe358.it359",
    "access": null,
    "description": "should rotate vector by the given number of degrees",
    "lineNumber": 215
  },
  {
    "__docId__": 1149,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it360",
    "testId": 360,
    "memberof": "test/util/vector-2d-test.js~describe324.describe358",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe358.it360",
    "access": null,
    "description": "should not modify original vector",
    "lineNumber": 222
  },
  {
    "__docId__": 1150,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe361",
    "testId": 361,
    "memberof": "test/util/vector-2d-test.js~describe324",
    "testDepth": 1,
    "longname": "test/util/vector-2d-test.js~describe324.describe361",
    "access": null,
    "description": "#rotateRadians(rad)",
    "lineNumber": 231,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Vector2D#rotateRadians} *"
      }
    ],
    "testTargets": [
      "Vector2D#rotateRadians"
    ]
  },
  {
    "__docId__": 1151,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it362",
    "testId": 362,
    "memberof": "test/util/vector-2d-test.js~describe324.describe361",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe361.it362",
    "access": null,
    "description": "should rotate vector by the given number of radians",
    "lineNumber": 232
  },
  {
    "__docId__": 1152,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it363",
    "testId": 363,
    "memberof": "test/util/vector-2d-test.js~describe324.describe361",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe361.it363",
    "access": null,
    "description": "should not modify original vector",
    "lineNumber": 239
  },
  {
    "__docId__": 1153,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe364",
    "testId": 364,
    "memberof": "test/util/vector-2d-test.js~describe324",
    "testDepth": 1,
    "longname": "test/util/vector-2d-test.js~describe324.describe364",
    "access": null,
    "description": "#degreesTo(vec)",
    "lineNumber": 248,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Vector2D#degreesTo} *"
      }
    ],
    "testTargets": [
      "Vector2D#degreesTo"
    ]
  },
  {
    "__docId__": 1154,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it365",
    "testId": 365,
    "memberof": "test/util/vector-2d-test.js~describe324.describe364",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe364.it365",
    "access": null,
    "description": "should return the degrees between the vectors",
    "lineNumber": 249
  },
  {
    "__docId__": 1155,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it366",
    "testId": 366,
    "memberof": "test/util/vector-2d-test.js~describe324.describe364",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe364.it366",
    "access": null,
    "description": "should not return a negative value",
    "lineNumber": 256
  },
  {
    "__docId__": 1156,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it367",
    "testId": 367,
    "memberof": "test/util/vector-2d-test.js~describe324.describe364",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe364.it367",
    "access": null,
    "description": "should handle floating point precision errors",
    "lineNumber": 263
  },
  {
    "__docId__": 1157,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it368",
    "testId": 368,
    "memberof": "test/util/vector-2d-test.js~describe324.describe364",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe364.it368",
    "access": null,
    "description": "should return zero if vectors are in same direction",
    "lineNumber": 270
  },
  {
    "__docId__": 1158,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe369",
    "testId": 369,
    "memberof": "test/util/vector-2d-test.js~describe324",
    "testDepth": 1,
    "longname": "test/util/vector-2d-test.js~describe324.describe369",
    "access": null,
    "description": "#projectOnto(vec)",
    "lineNumber": 279,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Vector2D#projectOnto} *"
      }
    ],
    "testTargets": [
      "Vector2D#projectOnto"
    ]
  },
  {
    "__docId__": 1159,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it370",
    "testId": 370,
    "memberof": "test/util/vector-2d-test.js~describe324.describe369",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe369.it370",
    "access": null,
    "description": "should return a projection of the current vector onto the given vector",
    "lineNumber": 280
  },
  {
    "__docId__": 1160,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it371",
    "testId": 371,
    "memberof": "test/util/vector-2d-test.js~describe324.describe369",
    "testDepth": 2,
    "longname": "test/util/vector-2d-test.js~describe324.describe369.it371",
    "access": null,
    "description": "should not modify original vectors",
    "lineNumber": 288
  }
]